<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>docker基本使用</title>
      <link href="/posts/9391a560.html"/>
      <url>/posts/9391a560.html</url>
      
        <content type="html"><![CDATA[<h3 id="docker-安装"><a href="#docker-安装" class="headerlink" title="docker 安装"></a>docker 安装</h3><blockquote><p><a href="https://docs.docker.com/get-docker/"><strong>docker 下载</strong></a></p></blockquote><h3 id="对于-docker-的理解"><a href="#对于-docker-的理解" class="headerlink" title="对于 docker 的理解"></a>对于 docker 的理解</h3><blockquote><p>使用 docker 我们不用再担心环境问题了，比如当别人的代码能运行，到我们自己电脑上就不能运行，这是因为环境不同，代码水土不服，而 docker 能解决这个问题，因为它是把代码迁移过来的同时把环境也迁移过来了，相当于我们移植花的时候，把花的土壤也一起移植过去</p></blockquote><h3 id="镜像基本命令"><a href="#镜像基本命令" class="headerlink" title="镜像基本命令"></a>镜像基本命令</h3><blockquote><p>启动 docker 之后在终端执行命令</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker images <span class="comment"># 查看所有镜像</span></span><br><span class="line">docker images -q <span class="comment"># 查看所有镜像的id</span></span><br><span class="line">docker search &lt;镜像名称&gt; <span class="comment"># 查找镜像</span></span><br><span class="line">docker pull &lt;镜像名称&gt; <span class="comment"># 拉取镜像到本地</span></span><br><span class="line">docker rmi &lt;镜像<span class="built_in">id</span>&gt; <span class="comment"># 删除镜像</span></span><br><span class="line">docker rmi `docker images -q` <span class="comment"># 删除所有镜像</span></span><br></pre></td></tr></table></figure><h3 id="容器基本命令"><a href="#容器基本命令" class="headerlink" title="容器基本命令"></a>容器基本命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">docker ps <span class="comment"># 查看正在运行的容器</span></span><br><span class="line">docker ps -a <span class="comment"># 查看所有的容器</span></span><br><span class="line">docker run &lt;options&gt; <span class="comment"># 运行容器</span></span><br><span class="line"><span class="comment"># options</span></span><br><span class="line"><span class="comment"># -i 保持容器运行</span></span><br><span class="line"><span class="comment"># -t 为容器分配一个伪终端</span></span><br><span class="line"><span class="comment"># -d 后台运行容器</span></span><br><span class="line"><span class="comment"># -it 创建一个交互式容器</span></span><br><span class="line"><span class="comment"># -id 创建一个后台的容器</span></span><br><span class="line"><span class="comment"># --name 为容器取名</span></span><br><span class="line"></span><br><span class="line">docker <span class="built_in">exec</span> &lt;参数&gt; <span class="comment"># 执行容器相关的命令</span></span><br><span class="line">docker start &lt;容器名称&gt; <span class="comment"># 启动容器</span></span><br><span class="line">docker stop &lt;容器名称&gt; <span class="comment"># 关闭容器</span></span><br><span class="line">docker <span class="built_in">rm</span> &lt;容器名称&gt; <span class="comment"># 删除容器</span></span><br><span class="line">docker inspect &lt;容器名称&gt; <span class="comment"># 查看容器的信息</span></span><br></pre></td></tr></table></figure><h3 id="配置数据卷"><a href="#配置数据卷" class="headerlink" title="配置数据卷"></a>配置数据卷</h3><blockquote><p>docker 是基于宿主机运行的，我们运行 docker 容器生成的文件会存放在容器中，如果我们需要把文件同步到宿主机的话，就需要配置数据卷</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker run ... -v 宿主机目录(文件):容器内目录(文件) ...</span><br><span class="line"></span><br><span class="line"><span class="comment"># 例子</span></span><br><span class="line">docker run -it --name data -v ./volume centos:7 /bin/bash <span class="comment"># 启动一个centos容器，并在当前目录创建一个volume目录当做数据卷</span></span><br></pre></td></tr></table></figure><h3 id="docker-部署-mysql"><a href="#docker-部署-mysql" class="headerlink" title="docker 部署 mysql"></a>docker 部署 mysql</h3><ul><li>拉取 mysql 镜像</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker search mysql</span><br><span class="line">docker pull mysql</span><br></pre></td></tr></table></figure><ul><li>创建并进入容器</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --name mysql-container -p 3306:3306 -e MYSQL_ROOT_PASSWORD=&lt;your_password&gt; -d mysql</span><br></pre></td></tr></table></figure><ul><li>连接数据库</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p&lt;上一步设置的密码&gt;</span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><blockquote><p>docker 是一个很好使用的工具，当我们写好代码需要交付的时候，直接把镜像交过去就好了，这样会把环境一起带过去，然后另一方使用的时候就不会再有环境问题，同时我们不想自己动手配置 mysql、nginx、tomcat 等服务的时候，可以直接使用 docker，可以大大减少我们配置环境产生的问题</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python使用爬虫爬取酷狗音乐</title>
      <link href="/posts/2afba6c0.html"/>
      <url>/posts/2afba6c0.html</url>
      
        <content type="html"><![CDATA[<h2 id="使用-python40-行代码轻松实现爬取酷狗音乐的数据"><a href="#使用-python40-行代码轻松实现爬取酷狗音乐的数据" class="headerlink" title="使用 python40 行代码轻松实现爬取酷狗音乐的数据"></a>使用 python40 行代码轻松实现爬取酷狗音乐的数据</h2><h4 id="导入对应的库"><a href="#导入对应的库" class="headerlink" title="导入对应的库"></a>导入对应的库</h4><blockquote><p>json math urllib 是自带的，如果没有的话去下载就好</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote</span><br></pre></td></tr></table></figure><h4 id="编写请求头并将关键词进行-URL-编码"><a href="#编写请求头并将关键词进行-URL-编码" class="headerlink" title="编写请求头并将关键词进行 URL 编码"></a>编写请求头并将关键词进行 URL 编码</h4><blockquote><p>搜索 API 的接口要求搜索的关键词是 URL 字符串形式，所以要对我们的关键词进行 URL 编码</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) &#x27;</span></span><br><span class="line">                  <span class="string">&#x27;Version/16.1 Safari/605.1.15 &#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">keyword = <span class="built_in">input</span>(<span class="string">&quot;请输入要搜索的关键词\n&quot;</span>)</span><br><span class="line"></span><br><span class="line">keyword_url = quote(keyword)</span><br></pre></td></tr></table></figure><h4 id="发送网络请求获取数据"><a href="#发送网络请求获取数据" class="headerlink" title="发送网络请求获取数据"></a>发送网络请求获取数据</h4><blockquote><p>获取到搜索的数据后进行 json 解析为 python 中的对象</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">list_url = <span class="string">f&#x27;http://mobilecdn.kugou.com/api/v3/search/song?format=json&amp;keyword=<span class="subst">&#123;keyword_url&#125;</span>&amp;page=1&amp;pagesize=20&amp;showtype=1&#x27;</span></span><br><span class="line"></span><br><span class="line">list_res = requests.get(list_url, headers=headers).text</span><br><span class="line"></span><br><span class="line">song_list = json.loads(list_res)[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;info&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i, song <span class="keyword">in</span> <span class="built_in">enumerate</span>(song_list):</span><br><span class="line">    <span class="built_in">print</span>(</span><br><span class="line">        <span class="string">f&quot;第<span class="subst">&#123;i + <span class="number">1</span>&#125;</span>首: 歌曲名字: <span class="subst">&#123;song[<span class="string">&#x27;songname&#x27;</span>]&#125;</span> 歌手: <span class="subst">&#123;song[<span class="string">&#x27;singername&#x27;</span>]&#125;</span> 歌曲时长: <span class="subst">&#123;math.floor(song[<span class="string">&#x27;duration&#x27;</span>] / <span class="number">60</span>)&#125;</span>分<span class="subst">&#123;song[<span class="string">&#x27;duration&#x27;</span>] % <span class="number">60</span>&#125;</span>秒&quot;</span>)</span><br></pre></td></tr></table></figure><h4 id="输入要下载的音乐名字获取音乐信息并下载"><a href="#输入要下载的音乐名字获取音乐信息并下载" class="headerlink" title="输入要下载的音乐名字获取音乐信息并下载"></a>输入要下载的音乐名字获取音乐信息并下载</h4><blockquote><p>上一次网络请求获取到的是一个列表，相当于我们在酷狗音乐进行了一次歌曲搜索，搜索到了很多歌曲，但是我们只需要自己想要的，所以还需要再次发送一次网络请求获取歌曲的详细数据，比如歌曲的地址，歌手等信息，这里我们将获取到的音乐信息保存到当前目录，格式是 MP3</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">song_num = <span class="built_in">input</span>(<span class="string">&quot;你要下载第几首音乐\n&quot;</span>)</span><br><span class="line"></span><br><span class="line">info_url = <span class="string">f&#x27;https://m.kugou.com/app/i/getSongInfo.php?cmd=playInfo&amp;hash=<span class="subst">&#123;song_list[<span class="built_in">int</span>(song_num) - <span class="number">1</span>].get(<span class="string">&quot;hash&quot;</span>)&#125;</span>&#x27;</span></span><br><span class="line">file_name = song_list[<span class="built_in">int</span>(song_num) - <span class="number">1</span>][<span class="string">&#x27;filename&#x27;</span>]</span><br><span class="line"></span><br><span class="line">headers2 = &#123;</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) &#x27;</span></span><br><span class="line">                  <span class="string">&#x27;Version/16.1 Safari/605.1.15 &#x27;</span>,</span><br><span class="line">    <span class="comment"># &#x27;Cookie&#x27;: &#x27;musicwo17=kugou; Hm_lpvt_aedee6983d4cfc62f509129360d6bb3d=1686540014; &#x27;</span></span><br><span class="line">    <span class="comment">#           &#x27;Hm_lvt_aedee6983d4cfc62f509129360d6bb3d=1686500385; kg_dfid=1JdD7s2UqgFe4RZJgN40SdHE; &#x27;</span></span><br><span class="line">    <span class="comment">#           &#x27;kg_dfid_collect=d41d8cd98f00b204e9800998ecf8427e; kg_mid=6a0bba3ff53cba02176341d402922273 &#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">song_info = requests.get(info_url, headers=headers2)</span><br><span class="line"></span><br><span class="line">song_url = song_info.json()[<span class="string">&#x27;url&#x27;</span>]</span><br><span class="line"></span><br><span class="line">song_content = requests.get(song_url).content</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">f&#x27;<span class="subst">&#123;file_name&#125;</span>.mp3&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> song_file:</span><br><span class="line">    song_file.write(song_content)</span><br></pre></td></tr></table></figure><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><blockquote><p>以上就是 python 使用爬虫获取酷狗音乐的例子，我们做一个 python 爬虫小总结</p></blockquote><h5 id="确定数据源"><a href="#确定数据源" class="headerlink" title="确定数据源"></a>确定数据源</h5><blockquote><p>首先我们要先确定数据源，就是我们要爬取的数据来自于哪里，比如你要爬取的是图片，那么你就要确定网站的图片来源于哪里，一般的图片的地址都是通过网络请求获取的，这时候你就要去监听浏览器的网络请求，找到获取图片数据的那次网络请求，或者你需要的是文本信息，这时候你需要的就是网站的文本，它可能不是通过网络请求获取的，这时候我们就直接获取网站的html文档，然后对里面的dom信息进行提取</p></blockquote><h5 id="并不是所有网站的数据都是可以爬取到的"><a href="#并不是所有网站的数据都是可以爬取到的" class="headerlink" title="并不是所有网站的数据都是可以爬取到的"></a>并不是所有网站的数据都是可以爬取到的</h5><blockquote><p>有些网站做了反爬虫措施，比如你虽然可以爬取到对方网站的数据，但是人家给你的数据可能是经过加密的或者是假的，这时候我们需要自己去辨析数据是否可靠</p></blockquote><h4 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote</span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) &#x27;</span></span><br><span class="line">                  <span class="string">&#x27;Version/16.1 Safari/605.1.15 &#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">keyword = <span class="built_in">input</span>(<span class="string">&quot;请输入要搜索的关键词\n&quot;</span>)</span><br><span class="line"></span><br><span class="line">keyword_url = quote(keyword)</span><br><span class="line"></span><br><span class="line">list_url = <span class="string">f&#x27;http://mobilecdn.kugou.com/api/v3/search/song?format=json&amp;keyword=<span class="subst">&#123;keyword_url&#125;</span>&amp;page=1&amp;pagesize=20&amp;showtype=1&#x27;</span></span><br><span class="line"></span><br><span class="line">list_res = requests.get(list_url, headers=headers).text</span><br><span class="line"></span><br><span class="line">song_list = json.loads(list_res)[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;info&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i, song <span class="keyword">in</span> <span class="built_in">enumerate</span>(song_list):</span><br><span class="line">    <span class="built_in">print</span>(</span><br><span class="line">        <span class="string">f&quot;第<span class="subst">&#123;i + <span class="number">1</span>&#125;</span>首: 歌曲名字: <span class="subst">&#123;song[<span class="string">&#x27;songname&#x27;</span>]&#125;</span> 歌手: <span class="subst">&#123;song[<span class="string">&#x27;singername&#x27;</span>]&#125;</span> 歌曲时长: <span class="subst">&#123;math.floor(song[<span class="string">&#x27;duration&#x27;</span>] / <span class="number">60</span>)&#125;</span>分<span class="subst">&#123;song[<span class="string">&#x27;duration&#x27;</span>] % <span class="number">60</span>&#125;</span>秒&quot;</span>)</span><br><span class="line"></span><br><span class="line">song_num = <span class="built_in">input</span>(<span class="string">&quot;你要下载第几首音乐\n&quot;</span>)</span><br><span class="line"></span><br><span class="line">info_url = <span class="string">f&#x27;https://m.kugou.com/app/i/getSongInfo.php?cmd=playInfo&amp;hash=<span class="subst">&#123;song_list[<span class="built_in">int</span>(song_num) - <span class="number">1</span>].get(<span class="string">&quot;hash&quot;</span>)&#125;</span>&#x27;</span></span><br><span class="line">file_name = song_list[<span class="built_in">int</span>(song_num) - <span class="number">1</span>][<span class="string">&#x27;filename&#x27;</span>]</span><br><span class="line"></span><br><span class="line">headers2 = &#123;</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) &#x27;</span></span><br><span class="line">                  <span class="string">&#x27;Version/16.1 Safari/605.1.15 &#x27;</span>,</span><br><span class="line">    <span class="comment"># &#x27;Cookie&#x27;: &#x27;musicwo17=kugou; Hm_lpvt_aedee6983d4cfc62f509129360d6bb3d=1686540014; &#x27;</span></span><br><span class="line">    <span class="comment">#           &#x27;Hm_lvt_aedee6983d4cfc62f509129360d6bb3d=1686500385; kg_dfid=1JdD7s2UqgFe4RZJgN40SdHE; &#x27;</span></span><br><span class="line">    <span class="comment">#           &#x27;kg_dfid_collect=d41d8cd98f00b204e9800998ecf8427e; kg_mid=6a0bba3ff53cba02176341d402922273 &#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">song_info = requests.get(info_url, headers=headers2)</span><br><span class="line"></span><br><span class="line">song_url = song_info.json()[<span class="string">&#x27;url&#x27;</span>]</span><br><span class="line"></span><br><span class="line">song_content = requests.get(song_url).content</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">f&#x27;<span class="subst">&#123;file_name&#125;</span>.mp3&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> song_file:</span><br><span class="line">    song_file.write(song_content)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>祝我19岁生日快乐！</title>
      <link href="/posts/8ff97ce2.html"/>
      <url>/posts/8ff97ce2.html</url>
      
        <content type="html"><![CDATA[<h2 id="回顾-18-岁"><a href="#回顾-18-岁" class="headerlink" title="回顾 18 岁"></a>回顾 18 岁</h2><h3 id="高考"><a href="#高考" class="headerlink" title="高考"></a>高考</h3><blockquote><p>现在回想起高考仿佛在昨日，不知不觉已经快是一个大二的学生了，高考也不能说没有考好吧，毕竟我实力也就那样，虽然最后冲刺冲了上去，但是基础还是不稳固，遗憾确实会有一点，不过后来逐渐释然了，我觉得一切都有它的意义，即使考的不好也有它的意义，分数不能决定一切，我一直都是这么相信的。<br>高考让我学会了挺多的</p><blockquote><p>有些人在高考之后可能就再也见不到了，同学都去了不同的城市，去追随他们的梦想，毕业后又会去往不同的城市工作<br>有时候就是这么一张纸，能决定你的初始层次<br>只有在关键时刻赢的人才是最终赢家</p></blockquote></blockquote><h3 id="开始接触编程"><a href="#开始接触编程" class="headerlink" title="开始接触编程"></a>开始接触编程</h3><blockquote><p>考完后一身轻松，放下了所有的包袱，终于可以好好做自己喜欢的事了，刚好家里买了一台台式电脑，于是开始编程之旅了，一开始是打算学习 java 的，但是因为 java 的初学难度高，把我劝退了，岂可修！！！然后我就阴差阳错开始学习了前端，前端学习还是比较有趣轻松的，因为你所做的东西立马可以在浏览器中见到，而且前端无拘无束，你想写什么都可以，你可以在浏览器中把你脑海里经常幻想出来的画面展示出来，那时候真的很快乐，我能一天从早上起床一直到休息前都在电脑前学习前端(现在想想我那时候是不是超级厉害)然后经过我的努力学习，很快就学习完了前端三剑客 html、css、javascript<br>之后在我师傅的带领下开始学习java，有了前端的基础学习java也轻松了许多，最起码不是啥都不懂了，学起来还是蛮快的，然后一个月学完了javaee<br>之后发现了尚硅谷和黑马程序员这几个平台，学习了web开发、前后端结合、微信小程序等等<br>然后对Unity游戏开发有了兴趣，寒假学习了一个月，哈哈，现在能做出点极其简单的小游戏<br>再之后就是根据自己的兴趣在进行学习了，学习更多的框架，更多插件，不断拓展</p></blockquote><h2 id="新的征程"><a href="#新的征程" class="headerlink" title="新的征程"></a>新的征程</h2><h3 id="开启我的-19-岁！"><a href="#开启我的-19-岁！" class="headerlink" title="开启我的 19 岁！"></a>开启我的 19 岁！</h3><blockquote><p>现在想想学习了那么久了，该做出点成效了，所以接下来打算运用自己的知识，做出点能丰富我19岁的成绩<br>18岁的我固然很精彩，但是往后的我也不会输于18岁的我的！如果生命中某件事让你开心，那你就尽管去做，加油吧！我自己！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生日 </tag>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在java后端解决跨域问题</title>
      <link href="/posts/85c1fe2e.html"/>
      <url>/posts/85c1fe2e.html</url>
      
        <content type="html"><![CDATA[<h3 id="第一种方式使用-CrossOrigin-注解"><a href="#第一种方式使用-CrossOrigin-注解" class="headerlink" title="第一种方式使用@CrossOrigin 注解"></a>第一种方式使用@CrossOrigin 注解</h3><blockquote><p>在你的 controller 类中处理请求的方法前加上@CrossOrigin 这个注解或者直接在 controller 类上加上这个注解，例如</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@CrossOrigin</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;/login&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R&lt;Manager&gt; <span class="title function_">login</span><span class="params">(<span class="meta">@RequestBody</span> Map&lt;String, String&gt; map, HttpSession httpSession)</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> map.get(<span class="string">&quot;username&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> map.get(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">    LambdaQueryWrapper&lt;Manager&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    queryWrapper.eq(Manager::getManagerName, username);</span><br><span class="line"></span><br><span class="line">    <span class="type">Manager</span> <span class="variable">manager</span> <span class="operator">=</span> managerService.getOne(queryWrapper);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (manager == <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> R.error(<span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!manager.getPassword().equals(password)) &#123;</span><br><span class="line">        <span class="keyword">return</span> R.error(<span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    BaseContext.setCurrentId((<span class="type">long</span>) manager.getId());</span><br><span class="line"></span><br><span class="line">    manager.setToken(JwtUtil.getToken(map));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> R.success(manager, <span class="string">&quot;登录成功&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>这样在处理前端请求的时候就不会发生跨域问题了</p></blockquote><h4 id="好处"><a href="#好处" class="headerlink" title="好处"></a>好处</h4><blockquote><p>使用一个注解就可以解决，非常方便</p></blockquote><h4 id="弊端"><a href="#弊端" class="headerlink" title="弊端"></a>弊端</h4><blockquote><p>每一个方法前都需要加上一个注解，很麻烦</p></blockquote><h3 id="第二种方式，使用配置类-WebMvcConfigurationSupport"><a href="#第二种方式，使用配置类-WebMvcConfigurationSupport" class="headerlink" title="第二种方式，使用配置类 WebMvcConfigurationSupport"></a>第二种方式，使用配置类 WebMvcConfigurationSupport</h3><h4 id="在你的项目中创建一个配置类并继承-WebMvcConfigurationSupport"><a href="#在你的项目中创建一个配置类并继承-WebMvcConfigurationSupport" class="headerlink" title="在你的项目中创建一个配置类并继承 WebMvcConfigurationSupport"></a>在你的项目中创建一个配置类并继承 WebMvcConfigurationSupport</h4><h4 id="重写父类的-addCorsMappings-方法"><a href="#重写父类的-addCorsMappings-方法" class="headerlink" title="重写父类的 addCorsMappings 方法"></a>重写父类的 addCorsMappings 方法</h4><blockquote><p>方法说明<br>addMapping：配置允许跨域请求的路径。<br>allowedOrigins：配置允许访问的源（域名）列表。<br>allowedMethods：配置允许的请求方法列表。<br>allowedHeaders：配置允许的请求头列表。<br>exposedHeaders：配置允许前端访问的响应头列表。<br>allowCredentials：配置是否允许发送 Cookie 等凭证信息。<br>maxAge：配置预检请求（OPTIONS 请求）的最大缓存时间。</p></blockquote><hr><blockquote><p>例如我这里</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span>  <span class="title class_">WebMvcConfig</span> <span class="keyword">extends</span> <span class="title class_">WebMvcConfigurationSupport</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">addCorsMappings</span><span class="params">(CorsRegistry registry)</span> &#123;</span><br><span class="line">        registry.addMapping(<span class="string">&quot;/**&quot;</span>)</span><br><span class="line">                .allowedOrigins(<span class="string">&quot;*&quot;</span>)</span><br><span class="line">                .allowedMethods(<span class="string">&quot;POST&quot;</span>, <span class="string">&quot;GET&quot;</span>, <span class="string">&quot;DELETE&quot;</span>, <span class="string">&quot;PUT&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><blockquote><p>在 java 只可以使用两种方式解决跨域问题，一种是使用@CrossOrigin 注解，一种是使用 WebMvcConfigurationSupport 配置类<br>另外需要注意的是，解决跨域问题还有很多方式，这里只阐述使用 java 该如何解决，如果在前端解决的话，需要使用 JSONP，JSONP 是一种在跨域请求中获取数据的方法。它通过在页面中动态创建 script 标签，将请求数据作为回调函数的参数返回，从而绕过浏览器的同源策略限制。JSONP 只支持 GET 请求，且需要服务器端配合返回合适的响应。—-不推荐使用<br>还可以使用代理服务器(比如 nginx)进行解决，前端应用发送请求到代理服务器，然后由代理服务器转发请求到目标服务器，并将响应返回给前端应用。因为代理服务器与目标服务器位于同一域下，所以不存在跨域问题。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> 后端 </tag>
            
            <tag> 跨域 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用canvas来实现一个简单的鼠标特效</title>
      <link href="/posts/759a7587.html"/>
      <url>/posts/759a7587.html</url>
      
        <content type="html"><![CDATA[<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><blockquote><p>每次点击屏幕的时候，就使用 canvas 画布画一些小星星，然后在每一帧的时候清除 canvas 画布的内容，同时更新这些星星的位置、速度、半径，当这些星星的位置超过屏幕范围或者半径为 0 的时候，再删除他们</p></blockquote><h2 id="新建一个-html-文件"><a href="#新建一个-html-文件" class="headerlink" title="新建一个 html 文件"></a>新建一个 html 文件</h2><h2 id="创建初始化变量"><a href="#创建初始化变量" class="headerlink" title="创建初始化变量"></a>创建初始化变量</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> stars = []; <span class="comment">//存放星星的数组</span></span><br><span class="line"><span class="keyword">let</span> ctx; <span class="comment">//画布的上下文</span></span><br><span class="line"><span class="keyword">let</span> width, height; <span class="comment">//屏幕的宽高</span></span><br><span class="line"><span class="keyword">let</span> origin; <span class="comment">//默认的生成星星的位置</span></span><br><span class="line"><span class="keyword">let</span> colors = [<span class="string">&quot;#F73859&quot;</span>, <span class="string">&quot;#14FFEC&quot;</span>, <span class="string">&quot;#00E0FF&quot;</span>, <span class="string">&quot;#FF99FE&quot;</span>, <span class="string">&quot;#FAF15D&quot;</span>]; <span class="comment">//星星的颜色</span></span><br><span class="line"><span class="keyword">const</span> canvas = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;canvas&quot;</span>); <span class="comment">//创建画布</span></span><br><span class="line">ctx = canvas.<span class="title function_">getContext</span>(<span class="string">&quot;2d&quot;</span>);</span><br><span class="line"><span class="comment">//设置画布的样式</span></span><br><span class="line">canvas.<span class="title function_">setAttribute</span>(</span><br><span class="line">  <span class="string">&quot;style&quot;</span>,</span><br><span class="line">  <span class="string">&quot;width: 100%; height: 100%; position: fixed; top: 0; left: 0; z-index: 9999; pointer-events: none;&quot;</span></span><br><span class="line">);</span><br><span class="line"><span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(canvas); <span class="comment">//将画布元素添加到dom中</span></span><br></pre></td></tr></table></figure><h2 id="定义工具函数-生成一个区间之内的数"><a href="#定义工具函数-生成一个区间之内的数" class="headerlink" title="定义工具函数(生成一个区间之内的数)"></a>定义工具函数(生成一个区间之内的数)</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">randBetween</span>(<span class="params">min, max</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * max) + min;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="定义一个-Star-类"><a href="#定义一个-Star-类" class="headerlink" title="定义一个 Star 类"></a>定义一个 Star 类</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Star</span> &#123;</span><br><span class="line">  <span class="comment">//x，y为星星位置</span></span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">x = origin.x, y = origin.y</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">x</span> = x;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">y</span> = y;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">angle</span> = <span class="title class_">Math</span>.<span class="property">PI</span> * <span class="number">2</span> * <span class="title class_">Math</span>.<span class="title function_">random</span>();</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">radius</span> = <span class="title function_">randBetween</span>(<span class="number">5</span>, <span class="number">10</span>) + <span class="number">3</span> * <span class="title class_">Math</span>.<span class="title function_">random</span>(); <span class="comment">//星星的半径</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">color</span> = colors[<span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * colors.<span class="property">length</span>)]; <span class="comment">//星星的颜色</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">vx</span> = <span class="number">5</span> * <span class="title class_">Math</span>.<span class="title function_">cos</span>(<span class="variable language_">this</span>.<span class="property">angle</span>); <span class="comment">//星星的x方向速度</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">vy</span> = <span class="number">5</span> * <span class="title class_">Math</span>.<span class="title function_">sin</span>(<span class="variable language_">this</span>.<span class="property">angle</span>); <span class="comment">//星星的y方向速度</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//更新星星的速度、位置、半径</span></span><br><span class="line">  <span class="title function_">update</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">x</span> += <span class="variable language_">this</span>.<span class="property">vx</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">y</span> += <span class="variable language_">this</span>.<span class="property">vy</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">radius</span> -= <span class="number">0.3</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">vy</span> *= <span class="number">0.9</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">vx</span> *= <span class="number">0.9</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="定义存放星星和移除星星的方法"><a href="#定义存放星星和移除星星的方法" class="headerlink" title="定义存放星星和移除星星的方法"></a>定义存放星星和移除星星的方法</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//存放星星</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">pushStar</span>(<span class="params">count = <span class="number">1</span>, x = origin.x, y = origin.y</span>) &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">    stars.<span class="title function_">push</span>(<span class="keyword">new</span> <span class="title class_">Star</span>(x, y));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//移除星星</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">removeStar</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; stars.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">let</span> star = stars[i];</span><br><span class="line">    <span class="comment">//判断是否符合删除条件</span></span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">      star.<span class="property">radius</span> &lt;= <span class="number">0</span> ||</span><br><span class="line">      star.<span class="property">x</span> - star.<span class="property">radius</span> &gt; width ||</span><br><span class="line">      star.<span class="property">y</span> + star.<span class="property">radius</span> &lt; <span class="number">0</span> ||</span><br><span class="line">      star.<span class="property">x</span> + star.<span class="property">radius</span> &lt; <span class="number">0</span> ||</span><br><span class="line">      star.<span class="property">y</span> - star.<span class="property">radius</span> &gt; height</span><br><span class="line">    ) &#123;</span><br><span class="line">      <span class="comment">//删除不符合条件的星星，从索引i开始删除一个元素</span></span><br><span class="line">      stars.<span class="title function_">splice</span>(i, <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="创建更新画布和初始位置函数"><a href="#创建更新画布和初始位置函数" class="headerlink" title="创建更新画布和初始位置函数"></a>创建更新画布和初始位置函数</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">updateSize</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">//更新画布的大小</span></span><br><span class="line">  canvas.<span class="property">width</span> = <span class="variable language_">window</span>.<span class="property">innerWidth</span>;</span><br><span class="line">  canvas.<span class="property">height</span> = <span class="variable language_">window</span>.<span class="property">innerHeight</span>;</span><br><span class="line">  width = <span class="variable language_">window</span>.<span class="property">innerWidth</span>;</span><br><span class="line">  height = <span class="variable language_">window</span>.<span class="property">innerHeight</span>;</span><br><span class="line">  <span class="comment">//更新默认位置</span></span><br><span class="line">  origin = &#123;</span><br><span class="line">    <span class="attr">x</span>: width / <span class="number">2</span>,</span><br><span class="line">    <span class="attr">y</span>: height / <span class="number">2</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="创建渲染函数"><a href="#创建渲染函数" class="headerlink" title="创建渲染函数"></a>创建渲染函数</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">  ctx.<span class="property">fillStyle</span> = <span class="string">&quot;rgba(255, 255, 255, 0)&quot;</span>;</span><br><span class="line">  <span class="comment">//清除画布的内容</span></span><br><span class="line">  ctx.<span class="title function_">clearRect</span>(<span class="number">0</span>, <span class="number">0</span>, canvas.<span class="property">width</span>, canvas.<span class="property">height</span>);</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; stars.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">let</span> star = stars[i];</span><br><span class="line">    <span class="keyword">if</span> (star.<span class="property">radius</span> &lt;= <span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">    <span class="comment">//开始绘制</span></span><br><span class="line">    ctx.<span class="title function_">beginPath</span>();</span><br><span class="line">    <span class="comment">//设置绘制的样式</span></span><br><span class="line">    ctx.<span class="property">fillStyle</span> = star.<span class="property">color</span>;</span><br><span class="line">    <span class="comment">//画五角星</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">      <span class="keyword">const</span> angle = ((i * <span class="number">4</span> + <span class="number">2</span>) * <span class="title class_">Math</span>.<span class="property">PI</span>) / <span class="number">5</span> - <span class="title class_">Math</span>.<span class="property">PI</span> / <span class="number">2</span>;</span><br><span class="line">      <span class="keyword">const</span> x = star.<span class="property">x</span> + <span class="title class_">Math</span>.<span class="title function_">cos</span>(angle) * star.<span class="property">radius</span>;</span><br><span class="line">      <span class="keyword">const</span> y = star.<span class="property">y</span> + <span class="title class_">Math</span>.<span class="title function_">sin</span>(angle) * star.<span class="property">radius</span>;</span><br><span class="line"></span><br><span class="line">      ctx.<span class="title function_">lineTo</span>(x, y);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//填充</span></span><br><span class="line">    ctx.<span class="title function_">fill</span>();</span><br><span class="line">    <span class="comment">//调用五角星的动画函数，更新五角星的信息</span></span><br><span class="line">    star.<span class="title function_">update</span>();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//调用移除函数，移除不符合条件的五角星</span></span><br><span class="line">  <span class="title function_">removeStar</span>();</span><br><span class="line">  <span class="comment">//浏览器渲染函数</span></span><br><span class="line">  <span class="title function_">requestAnimationFrame</span>(render);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="最后一步，绑定点击事件并调用渲染函数"><a href="#最后一步，绑定点击事件并调用渲染函数" class="headerlink" title="最后一步，绑定点击事件并调用渲染函数"></a>最后一步，绑定点击事件并调用渲染函数</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//鼠标按下之后创建15个星星，并设置初始位置为鼠标的位置</span></span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;mousedown&quot;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="title function_">pushStar</span>(<span class="number">15</span>, e.<span class="property">clientX</span>, e.<span class="property">clientY</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//调用渲染函数</span></span><br><span class="line"><span class="title function_">render</span>();</span><br></pre></td></tr></table></figure><h2 id="打开浏览器预览效果"><a href="#打开浏览器预览效果" class="headerlink" title="打开浏览器预览效果"></a>打开浏览器预览效果</h2><img src="https://xizhi-picgo.oss-cn-guangzhou.aliyuncs.com/%E5%89%8D%E7%AB%AF/%E9%BC%A0%E6%A0%87%E7%82%B9%E5%87%BB%E7%89%B9%E6%95%88/preview.gif"><h2 id="最终代码-我个人写的"><a href="#最终代码-我个人写的" class="headerlink" title="最终代码(我个人写的)"></a>最终代码(我个人写的)</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">clickEffect</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> stars = []</span><br><span class="line">    <span class="keyword">let</span> ctx</span><br><span class="line">        <span class="keyword">let</span> width, height</span><br><span class="line">    <span class="keyword">let</span> origin</span><br><span class="line">        <span class="keyword">let</span> colors = [<span class="string">&quot;#12aae8&quot;</span>, <span class="string">&quot;#14FFEC&quot;</span>, <span class="string">&quot;#00E0FF&quot;</span>, <span class="string">&quot;#08eeb8&quot;</span>, <span class="string">&quot;#FAF15D&quot;</span>]</span><br><span class="line">        <span class="keyword">const</span> canvas = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;canvas&quot;</span>)</span><br><span class="line">        canvas.<span class="title function_">setAttribute</span>(<span class="string">&quot;style&quot;</span>, <span class="string">&quot;width: 100%; height: 100%; position: fixed; top: 0; left: 0; z-index: 9999; pointer-events: none;&quot;</span>)</span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(canvas)</span><br><span class="line">    <span class="title function_">updateSize</span>()</span><br><span class="line"><span class="keyword">if</span> (canvas.<span class="property">getContext</span> &amp;&amp; <span class="variable language_">window</span>.<span class="property">addEventListener</span>) &#123;</span><br><span class="line">ctx = canvas.<span class="title function_">getContext</span>(<span class="string">&quot;2d&quot;</span>)</span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;mousedown&quot;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="title function_">pushStar</span>(<span class="number">15</span>, e.<span class="property">clientX</span>, e.<span class="property">clientY</span>)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="title function_">render</span>()</span><br><span class="line">&#125;</span><br><span class="line">        <span class="keyword">class</span> <span class="title class_">Star</span> &#123;</span><br><span class="line"><span class="title function_">constructor</span>(<span class="params">x = origin.x, y = origin.y</span>) &#123;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">x</span> = x</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">y</span> = y</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">angle</span> = <span class="title class_">Math</span>.<span class="property">PI</span> * <span class="number">2</span> * <span class="title class_">Math</span>.<span class="title function_">random</span>()</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">radius</span> = <span class="title function_">randBetween</span>(<span class="number">5</span>, <span class="number">10</span>) + <span class="number">3</span> * <span class="title class_">Math</span>.<span class="title function_">random</span>()</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">color</span> = colors[<span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * colors.<span class="property">length</span>)]</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">vx</span> = <span class="number">5</span> * <span class="title class_">Math</span>.<span class="title function_">cos</span>(<span class="variable language_">this</span>.<span class="property">angle</span>)</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">vy</span> = <span class="number">5</span> * <span class="title class_">Math</span>.<span class="title function_">sin</span>(<span class="variable language_">this</span>.<span class="property">angle</span>)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="title function_">update</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">x</span> += <span class="variable language_">this</span>.<span class="property">vx</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">y</span> += <span class="variable language_">this</span>.<span class="property">vy</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">radius</span> -= <span class="number">0.3</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">vy</span> *= <span class="number">0.9</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">vx</span> *= <span class="number">0.9</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">updateSize</span>(<span class="params"></span>) &#123;</span><br><span class="line">            canvas.<span class="property">width</span> = <span class="variable language_">window</span>.<span class="property">innerWidth</span></span><br><span class="line">        canvas.<span class="property">height</span> = <span class="variable language_">window</span>.<span class="property">innerHeight</span></span><br><span class="line">        width = <span class="variable language_">window</span>.<span class="property">innerWidth</span></span><br><span class="line">        height = <span class="variable language_">window</span>.<span class="property">innerHeight</span></span><br><span class="line">        origin = &#123;</span><br><span class="line">                <span class="attr">x</span>: width / <span class="number">2</span>,</span><br><span class="line">        <span class="attr">y</span>: height / <span class="number">2</span></span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">            ctx.<span class="property">fillStyle</span> = <span class="string">&quot;rgba(255, 255, 255, 0)&quot;</span></span><br><span class="line">            ctx.<span class="title function_">clearRect</span>(<span class="number">0</span>, <span class="number">0</span>, canvas.<span class="property">width</span>, canvas.<span class="property">height</span>)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; stars.<span class="property">length</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">let</span> star = stars[i]</span><br><span class="line">        <span class="keyword">if</span> (star.<span class="property">radius</span> &lt;= <span class="number">0</span>) <span class="keyword">continue</span></span><br><span class="line">        ctx.<span class="title function_">beginPath</span>()</span><br><span class="line">                ctx.<span class="property">fillStyle</span> = star.<span class="property">color</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">                    <span class="keyword">const</span> angle = ((i * <span class="number">4</span> + <span class="number">2</span>) * <span class="title class_">Math</span>.<span class="property">PI</span>) / <span class="number">5</span> - <span class="title class_">Math</span>.<span class="property">PI</span> / <span class="number">2</span>;</span><br><span class="line">                    <span class="keyword">const</span> x = star.<span class="property">x</span> + <span class="title class_">Math</span>.<span class="title function_">cos</span>(angle) * star.<span class="property">radius</span>;</span><br><span class="line">                    <span class="keyword">const</span> y = star.<span class="property">y</span> + <span class="title class_">Math</span>.<span class="title function_">sin</span>(angle) * star.<span class="property">radius</span>;</span><br><span class="line"></span><br><span class="line">                    ctx.<span class="title function_">lineTo</span>(x, y);</span><br><span class="line">                &#125;</span><br><span class="line">                ctx.<span class="title function_">fill</span>()</span><br><span class="line">        star.<span class="title function_">update</span>()</span><br><span class="line">        &#125;</span><br><span class="line">            <span class="title function_">removeStar</span>()</span><br><span class="line">            <span class="title function_">requestAnimationFrame</span>(render)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">randBetween</span>(<span class="params">min, max</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * max) + min;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">pushStar</span>(<span class="params">count = <span class="number">1</span>, x = origin.x, y = origin.y</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">                stars.<span class="title function_">push</span>(<span class="keyword">new</span> <span class="title class_">Star</span>(x, y))</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">removeStar</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; stars.<span class="property">length</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">let</span> star = stars[i]</span><br><span class="line">            <span class="keyword">if</span> (</span><br><span class="line">                    star.<span class="property">radius</span> &lt;= <span class="number">0</span> ||</span><br><span class="line">            star.<span class="property">x</span> - star.<span class="property">radius</span> &gt; width ||</span><br><span class="line">            star.<span class="property">y</span> + star.<span class="property">radius</span> &lt; <span class="number">0</span> ||</span><br><span class="line">            star.<span class="property">x</span> + star.<span class="property">radius</span> &lt; <span class="number">0</span> ||</span><br><span class="line">            star.<span class="property">y</span> - star.<span class="property">radius</span> &gt; height</span><br><span class="line">            ) &#123;</span><br><span class="line">stars.<span class="title function_">splice</span>(i, <span class="number">1</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="title function_">clickEffect</span>()</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 鼠标特效 </tag>
            
            <tag> canvas </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浏览器环境和node环境的区别</title>
      <link href="/posts/bd1d8f32.html"/>
      <url>/posts/bd1d8f32.html</url>
      
        <content type="html"><![CDATA[<h3 id="区别一"><a href="#区别一" class="headerlink" title="区别一"></a>区别一</h3><blockquote><p>二者的方向不同，浏览器环境主要是用于客户端，node 环境主要是用于服务端(后端)</p></blockquote><h3 id="区别二"><a href="#区别二" class="headerlink" title="区别二"></a>区别二</h3><blockquote><p>浏览器环境不需要下载任何东西只需要一个 html 文件，node 环境需要下载 node.js,同时浏览器环境是直接在浏览器执行 js 代码，node 环境是在服务端执行 js 代码</p></blockquote><h3 id="区别三"><a href="#区别三" class="headerlink" title="区别三"></a>区别三</h3><blockquote><p>浏览器提供了一系列与浏览器交互的 API，如 DOM 操作，Ajax 请求、浏览器事件等，而 Node.js 环境提供了一系列与服务器端开发相关的 API，如文件系统操作、网络通信、模块管理等</p></blockquote><h3 id="区别四"><a href="#区别四" class="headerlink" title="区别四"></a>区别四</h3><blockquote><p>在模块系统方面，浏览器环境中通常使用 script 标签引入外部 JavaScript 文件。而在 Node.js 环境中，使用CommonJS 或 ES Modules（从 Node.js 13 版本开始支持）进行模块管理，可以使用 require 或 import 来引入其他模块</p></blockquote><h3 id="区别五"><a href="#区别五" class="headerlink" title="区别五"></a>区别五</h3><blockquote><p>全局对象不同：浏览器环境中，全局对象是 window，它提供了浏览器相关的功能和属性。而在 Node.js 环境中，全局对象是 global，它提供了与 Node.js 相关的功能和属性。</p></blockquote><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><blockquote><p>node环境可以用来开发后端，就是如果当你需要一个后台用来处理前端请求，而又不会其他后端语言如java，python，这时候就可以使用node.js来写后端</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于three.js与浏览器环境实现粒子特效</title>
      <link href="/posts/e618e1da.html"/>
      <url>/posts/e618e1da.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>前阵子学习了 three.js,发现它是真的强大,可以实现各种各样的 3d 功能,然后自己试着做了一个基于 three.js 粒子系统的一个粒子特效</p></blockquote><hr><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><blockquote><p>创建粒子系统，里面包含了多个粒子，然后不断循环变更它Z轴的位置，这样所有的粒子的位置都会变更，这样看起来就像是我们的视角在穿越星空一样</p></blockquote><h3 id="创建一个-html-文件"><a href="#创建一个-html-文件" class="headerlink" title="创建一个 html 文件"></a>创建一个 html 文件</h3><blockquote><p>这里随便创建一个&lt;文件名&gt;.html文件就好了</p></blockquote><h3 id="在body标签中引入-three-js"><a href="#在body标签中引入-three-js" class="headerlink" title="在body标签中引入 three.js"></a>在body标签中引入 three.js</h3>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/three@latest/build/three.min.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="引入-gsap-这个动画库-方便写动画"><a href="#引入-gsap-这个动画库-方便写动画" class="headerlink" title="引入 gsap 这个动画库(方便写动画)"></a>引入 gsap 这个动画库(方便写动画)</h3>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/gsap/3.11.5/gsap.min.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="开工"><a href="#开工" class="headerlink" title="开工!"></a>开工!</h3><ul><li>创建场景  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> scene = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Scene</span>();</span><br></pre></td></tr></table></figure></li><li>创建相机  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> camera = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PerspectiveCamera</span>(</span><br><span class="line">  <span class="number">75</span>,</span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>,</span><br><span class="line">  <span class="number">0.1</span>,</span><br><span class="line">  <span class="number">10000</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li>创建渲染器  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>);</span><br><span class="line"><span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(renderer.<span class="property">domElement</span>);</span><br></pre></td></tr></table></figure></li><li>创建动画函数  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">render</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  renderer.<span class="title function_">render</span>(scene, camera);</span><br><span class="line">  <span class="title function_">requestAnimationFrame</span>(render);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li>开始创建粒子  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> count = <span class="number">1000</span>; <span class="comment">//粒子的数量</span></span><br><span class="line"><span class="keyword">const</span> positions = <span class="keyword">new</span> <span class="title class_">Float32Array</span>((count * <span class="number">3</span>) / <span class="number">10</span>); <span class="comment">//粒子的位置属性</span></span><br><span class="line"><span class="keyword">const</span> colors = <span class="keyword">new</span> <span class="title class_">Float32Array</span>((count * <span class="number">3</span>) / <span class="number">10</span>); <span class="comment">//粒子的颜色属性</span></span><br><span class="line"><span class="keyword">const</span> particleGeometry = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferGeometry</span>(); <span class="comment">//粒子的网格</span></span><br><span class="line"><span class="comment">//粒子的材质</span></span><br><span class="line"><span class="keyword">const</span> material = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PointsMaterial</span>(&#123;</span><br><span class="line">  <span class="attr">size</span>: <span class="number">2</span>,</span><br><span class="line">  <span class="attr">depthWrite</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">blending</span>: <span class="variable constant_">THREE</span>.<span class="property">AdditiveBlending</span>,</span><br><span class="line">  <span class="attr">transparent</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">vertexColors</span>: <span class="literal">true</span>, <span class="comment">//设置顶点的颜色</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 初始化粒子的位置和颜色</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; (count / <span class="number">10</span>) * <span class="number">3</span>; j++) &#123;</span><br><span class="line">  positions[j * <span class="number">3</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">1500</span> - <span class="number">750</span>;</span><br><span class="line">  positions[j * <span class="number">3</span> + <span class="number">1</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">1500</span> - <span class="number">750</span>;</span><br><span class="line">  positions[j * <span class="number">3</span> + <span class="number">2</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">1000</span> - <span class="number">500</span>;</span><br><span class="line">  colors[j * <span class="number">3</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>();</span><br><span class="line">  colors[j * <span class="number">3</span> + <span class="number">1</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>();</span><br><span class="line">  colors[j * <span class="number">3</span> + <span class="number">2</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置粒子的位置属性</span></span><br><span class="line">particleGeometry.<span class="title function_">setAttribute</span>(</span><br><span class="line">  <span class="string">&quot;position&quot;</span>,</span><br><span class="line">  <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferAttribute</span>(positions, <span class="number">3</span>)</span><br><span class="line">);</span><br><span class="line"><span class="comment">// 设置粒子的颜色属性</span></span><br><span class="line">particleGeometry.<span class="title function_">setAttribute</span>(<span class="string">&quot;color&quot;</span>, <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferAttribute</span>(colors, <span class="number">3</span>));</span><br><span class="line"><span class="comment">// 创建粒子</span></span><br><span class="line"><span class="keyword">const</span> points = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Points</span>(particleGeometry, material);</span><br></pre></td></tr></table></figure></li><li>为粒子添加动画(使用 gsap)  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">gsap.<span class="title function_">to</span>(points.<span class="property">position</span>, &#123;</span><br><span class="line">  <span class="attr">z</span>: -<span class="number">800</span>,</span><br><span class="line">  <span class="attr">duration</span>: <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">5</span> + <span class="number">5</span>,</span><br><span class="line">  <span class="attr">repeat</span>: -<span class="number">1</span>,</span><br><span class="line">  <span class="attr">ease</span>: <span class="string">&quot;linear&quot;</span>,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li>将粒子添加到场景中  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scene.<span class="title function_">add</span>(points);</span><br></pre></td></tr></table></figure></li><li>效果预览(图片压缩了的，所以效果可能看起来不太好)  <img src="/img/categories/前端/three/pre.gif"></li><li>这样我们的粒子特效就算完成了，但是聪明的你很快就能发现上面的粒子有点别扭，因为上面的代码是为整个粒子系统设置的动画，所以事实上我们看到的粒子移动是整个粒子系统在移动，当它完成了它的动画就会一瞬间回到原来的位置，然后就会有一点视觉上的突兀，那么如何解决这个问题呢？</li></ul><h3 id="进一步改进"><a href="#进一步改进" class="headerlink" title="进一步改进"></a>进一步改进</h3><ul><li>把所有的粒子分散到多个粒子系统<br>我们把所有粒子分成 10 个粒子系统，这样的话每个系统里面就包含了 100 和粒子，然后分别添加动画，并初始化不同的位置，这样的话就会大幅减少视觉上的突兀，话不多说，开始动手!  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> count = <span class="number">1000</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">  <span class="keyword">const</span> positions = <span class="keyword">new</span> <span class="title class_">Float32Array</span>((count * <span class="number">3</span>) / <span class="number">10</span>);</span><br><span class="line">  <span class="keyword">const</span> colors = <span class="keyword">new</span> <span class="title class_">Float32Array</span>((count * <span class="number">3</span>) / <span class="number">10</span>);</span><br><span class="line">  <span class="keyword">const</span> particleGeometry = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferGeometry</span>();</span><br><span class="line">  <span class="keyword">const</span> material = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PointsMaterial</span>(&#123;</span><br><span class="line">    <span class="attr">size</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="attr">depthWrite</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">blending</span>: <span class="variable constant_">THREE</span>.<span class="property">AdditiveBlending</span>,</span><br><span class="line">    <span class="attr">transparent</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">vertexColors</span>: <span class="literal">true</span>, <span class="comment">//设置顶点的颜色</span></span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; (count / <span class="number">10</span>) * <span class="number">3</span>; j++) &#123;</span><br><span class="line">    positions[j * <span class="number">3</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">1500</span> - <span class="number">750</span>;</span><br><span class="line">    positions[j * <span class="number">3</span> + <span class="number">1</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">1500</span> - <span class="number">750</span>;</span><br><span class="line">    positions[j * <span class="number">3</span> + <span class="number">2</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">1000</span> - <span class="number">500</span>;</span><br><span class="line">    colors[j * <span class="number">3</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>();</span><br><span class="line">    colors[j * <span class="number">3</span> + <span class="number">1</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>();</span><br><span class="line">    colors[j * <span class="number">3</span> + <span class="number">2</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  particleGeometry.<span class="title function_">setAttribute</span>(</span><br><span class="line">    <span class="string">&quot;position&quot;</span>,</span><br><span class="line">    <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferAttribute</span>(positions, <span class="number">3</span>)</span><br><span class="line">  );</span><br><span class="line">  particleGeometry.<span class="title function_">setAttribute</span>(</span><br><span class="line">    <span class="string">&quot;color&quot;</span>,</span><br><span class="line">    <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferAttribute</span>(colors, <span class="number">3</span>)</span><br><span class="line">  );</span><br><span class="line">  <span class="keyword">const</span> points = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Points</span>(particleGeometry, material);</span><br><span class="line">  scene.<span class="title function_">add</span>(points);</span><br><span class="line"></span><br><span class="line">  gsap.<span class="title function_">to</span>(points.<span class="property">position</span>, &#123;</span><br><span class="line">    <span class="attr">z</span>: -<span class="number">800</span>,</span><br><span class="line">    <span class="attr">duration</span>: <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">5</span> + <span class="number">5</span>,</span><br><span class="line">    <span class="attr">repeat</span>: -<span class="number">1</span>,</span><br><span class="line">    <span class="attr">ease</span>: <span class="string">&quot;linear&quot;</span>,</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>效果预览(图片压缩了的，所以效果可能看起来不太好)<img src="https://xizhi-picgo.oss-cn-guangzhou.aliyuncs.com/%E5%89%8D%E7%AB%AF/particle%E7%B2%92%E5%AD%90%E7%89%B9%E6%95%88/preview.gif">但是这样的话我们会发现每一个粒子都太单调了，虽然有颜色，但是都是正方形，那么如何设置成自己喜欢的粒子呢？</li><li>给粒子添加纹理<br>准备好你的纹理，其实就是一张图片，jpg，png 等格式都可以，可以直接去网上扒，也可以使用我的 <a href="/img/categories/前端/three/particle.png" download="particle.png" target="_blank">点击下载</a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> texture = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">TextureLoader</span>().<span class="title function_">load</span>(<span class="string">&quot;./particle.png&quot;</span>);</span><br></pre></td></tr></table></figure>为粒子材质设置纹理<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> material = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PointsMaterial</span>(&#123;</span><br><span class="line">  <span class="attr">map</span>: texture, <span class="comment">//纹理</span></span><br><span class="line">  <span class="attr">alphaMap</span>: texture, <span class="comment">//透明纹理</span></span><br><span class="line">  <span class="attr">size</span>: <span class="number">5</span>, <span class="comment">//粒子大小</span></span><br><span class="line">  <span class="attr">depthWrite</span>: <span class="literal">false</span>, <span class="comment">//是否开启深度描写</span></span><br><span class="line">  <span class="attr">blending</span>: <span class="variable constant_">THREE</span>.<span class="property">AdditiveBlending</span>, <span class="comment">//混合模式</span></span><br><span class="line">  <span class="attr">transparent</span>: <span class="literal">false</span>, <span class="comment">//是否透明</span></span><br><span class="line">  <span class="attr">vertexColors</span>: <span class="literal">true</span>, <span class="comment">//设置顶点的颜色</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li>效果预览(图片压缩了的，所以效果可能看起来不太好)  <img src="/img/categories/前端/three/pre_final.gif"></li><li>完整代码  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">content</span>=<span class="string">&quot;width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    * &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">html</span>,<span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/three@latest/build/three.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/gsap/3.11.5/gsap.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> scene = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Scene</span>()</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> camera = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PerspectiveCamera</span>(</span></span><br><span class="line"><span class="language-javascript">      <span class="number">75</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="number">0.1</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="number">10000</span></span></span><br><span class="line"><span class="language-javascript">  )</span></span><br><span class="line"><span class="language-javascript">  camera.<span class="property">position</span>.<span class="title function_">set</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">10</span>)</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> renderer = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">WebGLRenderer</span>()</span></span><br><span class="line"><span class="language-javascript">  renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>)</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(renderer.<span class="property">domElement</span>)</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> <span class="title function_">render</span> = (<span class="params"></span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">        renderer.<span class="title function_">render</span>(scene, camera)</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">requestAnimationFrame</span>(render)</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">render</span>()</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;resize&quot;</span>, <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">//更新摄像头</span></span></span><br><span class="line"><span class="language-javascript">      camera.<span class="property">aspect</span> = <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">//更新摄像机的投影矩阵</span></span></span><br><span class="line"><span class="language-javascript">      camera.<span class="title function_">updateProjectionMatrix</span>()</span></span><br><span class="line"><span class="language-javascript">      renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>)</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">//设置渲染器的像素比</span></span></span><br><span class="line"><span class="language-javascript">      renderer.<span class="title function_">setPixelRatio</span>(<span class="variable language_">window</span>.<span class="property">devicePixelRatio</span>)</span></span><br><span class="line"><span class="language-javascript">  &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> texture = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">TextureLoader</span>().<span class="title function_">load</span>(<span class="string">&#x27;./particle.png&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> count = <span class="number">1000</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> positions = <span class="keyword">new</span> <span class="title class_">Float32Array</span>(count * <span class="number">3</span> / <span class="number">10</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> colors = <span class="keyword">new</span> <span class="title class_">Float32Array</span>(count * <span class="number">3</span> / <span class="number">10</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> particleGeometry = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferGeometry</span>()</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> material = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PointsMaterial</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">map</span>: texture,   <span class="comment">//纹理</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">alphaMap</span>: texture,  <span class="comment">//透明纹理</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">size</span>: <span class="number">10</span>,    <span class="comment">//粒子大小</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">depthWrite</span>: <span class="literal">false</span>,  <span class="comment">//是否开启深度描写</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">blending</span>: <span class="variable constant_">THREE</span>.<span class="property">AdditiveBlending</span>,   <span class="comment">//混合模式</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">transparent</span>: <span class="literal">false</span>, <span class="comment">//是否透明</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">vertexColors</span>: <span class="literal">true</span>, <span class="comment">//设置顶点的颜色</span></span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; count / <span class="number">10</span> * <span class="number">3</span>; j++) &#123;</span></span><br><span class="line"><span class="language-javascript">      positions[j * <span class="number">3</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">1500</span> - <span class="number">750</span></span></span><br><span class="line"><span class="language-javascript">      positions[j * <span class="number">3</span> + <span class="number">1</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">1500</span> - <span class="number">750</span></span></span><br><span class="line"><span class="language-javascript">      positions[j * <span class="number">3</span> + <span class="number">2</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">1000</span> - <span class="number">500</span></span></span><br><span class="line"><span class="language-javascript">      colors[j * <span class="number">3</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>()</span></span><br><span class="line"><span class="language-javascript">      colors[j * <span class="number">3</span> + <span class="number">1</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>()</span></span><br><span class="line"><span class="language-javascript">      colors[j * <span class="number">3</span> + <span class="number">2</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>()</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    particleGeometry.<span class="title function_">setAttribute</span>(<span class="string">&quot;position&quot;</span>, <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferAttribute</span>(positions, <span class="number">3</span>))</span></span><br><span class="line"><span class="language-javascript">    particleGeometry.<span class="title function_">setAttribute</span>(<span class="string">&quot;color&quot;</span>, <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferAttribute</span>(colors, <span class="number">3</span>))</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> points = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Points</span>(particleGeometry, material)</span></span><br><span class="line"><span class="language-javascript">    scene.<span class="title function_">add</span>(points)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    gsap.<span class="title function_">to</span>(points.<span class="property">position</span>, &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">z</span>: -<span class="number">800</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">duration</span>: <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">5</span> + <span class="number">3</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">repeat</span>: -<span class="number">1</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">ease</span>: <span class="string">&#x27;linear&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="尾声"><a href="#尾声" class="headerlink" title="尾声"></a>尾声</h3><ul><li>弊端<blockquote><p> 我这里是使用了多个粒子系统来解决突兀问题，其实这种方式是不可取的，因为使用多个粒子系统会导致浏览器卡死，总之就是会消耗很多性能，如果想要解决突兀问题的话，可以考虑为每一个粒子添加单独的动画，而不是更改粒子系统的位置，每次当粒子到达目标位置的时候就马上回到原来到位置</p></blockquote></li><li>改进方向<blockquote><p>其实还有很多可以改进的地方，比如粒子的初始位置，还可以更加细化一些，还有就是可以设置粒子运动轨迹，让它不只是改变z轴的方向，让它的轨迹更加自由</p></blockquote></li><li>心声<blockquote><p> 感谢各位旅人阅读我的文章，如果有更加好的想法或者是遇到了问题欢迎与我交流</p></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> three.js </tag>
            
            <tag> javascript </tag>
            
            <tag> particleEffect </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于three.js实现VR看房效果</title>
      <link href="/posts/0.html"/>
      <url>/posts/0.html</url>
      
        <content type="html"><![CDATA[<h3 id="初始化一个-vue-项目-这里是基于-vue-环境来快速搭建"><a href="#初始化一个-vue-项目-这里是基于-vue-环境来快速搭建" class="headerlink" title="初始化一个 vue 项目(这里是基于 vue 环境来快速搭建)"></a>初始化一个 vue 项目(这里是基于 vue 环境来快速搭建)</h3><blockquote><p>关于环境说明：浏览器环境和 vue 环境都可以，只是用 vue 开发会更加便利，前提是得安装 node.js<br>打开终端，windows 用户 win + R 输入 cmd</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init vue@latest</span><br></pre></td></tr></table></figure><p>然后会要你填项目的名字，输入完之后一路按回车就好，然后分别执行以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> &lt;你的项目&gt;</span><br><span class="line">npm install</span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure><p>之后 vue 会在你电脑上开启一个小型服务器，你可以直接在浏览器网址栏通过输入 localhost:5173 访问它，这样你的项目就初始化好了<br>然后按 ctrl + c 退出服务器<br>然后记得将你的 vue 项目再次初始化(就是把不需要的东西都删了)</p></blockquote><h3 id="下载-three-js"><a href="#下载-three-js" class="headerlink" title="下载 three.js"></a>下载 three.js</h3><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install three</span><br></pre></td></tr></table></figure></blockquote><h3 id="在-App-vue-文件里面初始化-three-js-的基本配置-这里采用-setup-响应式声明的方式"><a href="#在-App-vue-文件里面初始化-three-js-的基本配置-这里采用-setup-响应式声明的方式" class="headerlink" title="在 App.vue 文件里面初始化 three.js 的基本配置(这里采用 setup 响应式声明的方式)"></a>在 App.vue 文件里面初始化 three.js 的基本配置(这里采用 setup 响应式声明的方式)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"><span class="comment">//导入three</span></span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="variable constant_">THREE</span> <span class="keyword">from</span> <span class="string">&quot;three&quot;</span>;</span><br><span class="line"><span class="comment">//添加控制器</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">OrbitControls</span> &#125; <span class="keyword">from</span> <span class="string">&quot;three/examples/jsm/controls/OrbitControls&quot;</span>;</span><br><span class="line"><span class="comment">//引入挂载钩子函数</span></span><br><span class="line"><span class="keyword">import</span> &#123; onMounted &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="comment">//场景的初始化</span></span><br><span class="line"><span class="keyword">const</span> scene = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Scene</span>();</span><br><span class="line"><span class="comment">//初始化相机</span></span><br><span class="line"><span class="keyword">const</span> camera = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PerspectiveCamera</span>(</span><br><span class="line">  <span class="number">75</span>,</span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>,</span><br><span class="line">  <span class="number">0.1</span>,</span><br><span class="line">  <span class="number">1000</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">//设置相机的位置</span></span><br><span class="line">camera.<span class="property">position</span>.<span class="property">z</span> = <span class="number">0.1</span>;</span><br><span class="line"><span class="comment">//初始化渲染器</span></span><br><span class="line"><span class="keyword">const</span> renderer = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">WebGLRenderer</span>();</span><br><span class="line">renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>);</span><br><span class="line"><span class="comment">//初始化控制器</span></span><br><span class="line"><span class="keyword">const</span> orbitControls = <span class="keyword">new</span> <span class="title class_">OrbitControls</span>(camera, <span class="variable language_">document</span>.<span class="property">body</span>);</span><br><span class="line">orbitControls.<span class="property">enableDamping</span> = <span class="literal">true</span>;</span><br><span class="line"><span class="comment">//渲染函数</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">render</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  renderer.<span class="title function_">render</span>(scene, camera);</span><br><span class="line">  orbitControls.<span class="title function_">update</span>();</span><br><span class="line">  <span class="title function_">requestAnimationFrame</span>(render);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="title function_">onMounted</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(renderer.<span class="property">domElement</span>)</span><br><span class="line">  <span class="title function_">render</span>();</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="开始加载场景-准备好一张hdr全景图或者是-6-张全方位图-可以网上扒，没有的话可以使用我的-点击下载全景图"><a href="#开始加载场景-准备好一张hdr全景图或者是-6-张全方位图-可以网上扒，没有的话可以使用我的-点击下载全景图" class="headerlink" title="开始加载场景(准备好一张hdr全景图或者是 6 张全方位图)可以网上扒，没有的话可以使用我的 点击下载全景图"></a>开始加载场景(准备好一张hdr全景图或者是 6 张全方位图)可以网上扒，没有的话可以使用我的 <a href="https://xizhi-picgo.oss-cn-guangzhou.aliyuncs.com/%E5%89%8D%E7%AB%AF/vr%E7%9C%8B%E6%88%BF/BrightMichiganFunRoom.hdr" download="BrightMichiganFunRoom.hdr" target="_blank">点击下载全景图</a></h3><p>在上面的代码的基础上添加下面的代码(import导入代码放在头部)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//导入加载器，用来加载图片</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">RGBELoader</span> &#125; <span class="keyword">from</span> <span class="string">&quot;three/examples/jsm/loaders/RGBELoader&quot;</span>;</span><br><span class="line"><span class="comment">//添加球  HDR全景展示</span></span><br><span class="line"><span class="comment">// 5代表半径，32代表顶点数量</span></span><br><span class="line"><span class="keyword">const</span> sphereGeometry = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">SphereGeometry</span>(<span class="number">5</span>, <span class="number">32</span>, <span class="number">32</span>);</span><br><span class="line"><span class="comment">// 初始化加载器</span></span><br><span class="line"><span class="keyword">const</span> loader = <span class="keyword">new</span> <span class="title class_">RGBELoader</span>();</span><br><span class="line"><span class="comment">// 加载全景图</span></span><br><span class="line">loader.<span class="title function_">load</span>(<span class="string">&quot;./imgs/BrightMichiganFunRoom.hdr&quot;</span>, <span class="function">(<span class="params">texture</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 创建球的材质并设置纹理</span></span><br><span class="line">  <span class="keyword">const</span> material = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">MeshBasicMaterial</span>(&#123;</span><br><span class="line">    <span class="attr">map</span>: texture,</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="comment">// 创建球</span></span><br><span class="line">  <span class="keyword">const</span> sphere = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Mesh</span>(sphereGeometry, material);</span><br><span class="line">  <span class="comment">// 设置z轴方向缩放为-1是为了让全景图展示在球的内部，不然的话全景图就会展示在球的表面</span></span><br><span class="line">  sphere.<span class="property">geometry</span>.<span class="title function_">scale</span>(<span class="number">1</span>, <span class="number">1</span>, -<span class="number">1</span>);</span><br><span class="line">  <span class="comment">// 添加球</span></span><br><span class="line">  scene.<span class="title function_">add</span>(sphere);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="进入终端，输入下面命令查看效果"><a href="#进入终端，输入下面命令查看效果" class="headerlink" title="进入终端，输入下面命令查看效果"></a>进入终端，输入下面命令查看效果</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run dev</span><br></pre></td></tr></table></figure><h3 id="效果预览"><a href="#效果预览" class="headerlink" title="效果预览"></a>效果预览</h3><img src="https://xizhi-picgo.oss-cn-guangzhou.aliyuncs.com/vrkanfang.gif"><h3 id="全局代码"><a href="#全局代码" class="headerlink" title="全局代码"></a>全局代码</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">  <span class="comment">//导入three</span></span><br><span class="line">  <span class="keyword">import</span> * <span class="keyword">as</span> <span class="variable constant_">THREE</span> <span class="keyword">from</span> <span class="string">&#x27;three&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">import</span> &#123; <span class="title class_">RGBELoader</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;three/examples/jsm/loaders/RGBELoader&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//添加控制器</span></span><br><span class="line">  <span class="keyword">import</span> &#123; <span class="title class_">OrbitControls</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;three/examples/jsm/controls/OrbitControls&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">import</span> &#123; onMounted &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//场景的初始化</span></span><br><span class="line">  <span class="keyword">const</span> scene = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Scene</span>();</span><br><span class="line">  <span class="comment">//初始化相机</span></span><br><span class="line">  <span class="keyword">const</span> camera = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PerspectiveCamera</span>(<span class="number">75</span>, <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>, <span class="number">0.1</span>, <span class="number">1000</span>);</span><br><span class="line">  <span class="comment">//设置相机的位置</span></span><br><span class="line">  camera.<span class="property">position</span>.<span class="property">z</span> = <span class="number">0.1</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//初始化渲染器</span></span><br><span class="line">  <span class="keyword">const</span> renderer = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">WebGLRenderer</span>();</span><br><span class="line">  renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> orbitControls = <span class="keyword">new</span> <span class="title class_">OrbitControls</span>(camera, <span class="variable language_">document</span>.<span class="property">body</span>);</span><br><span class="line">  orbitControls.<span class="property">enableDamping</span> = <span class="literal">true</span>;;</span><br><span class="line">  <span class="comment">//渲染函数</span></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">render</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="comment">//渲染器渲染</span></span><br><span class="line">    renderer.<span class="title function_">render</span>(scene, camera);</span><br><span class="line">    <span class="comment">//控制器更新</span></span><br><span class="line">    orbitControls.<span class="title function_">update</span>();</span><br><span class="line">    <span class="comment">//浏览器渲染函数</span></span><br><span class="line">    <span class="title function_">requestAnimationFrame</span>(render);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//挂载完毕后调用</span></span><br><span class="line">  <span class="title function_">onMounted</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(renderer.<span class="property">domElement</span>)</span><br><span class="line">    <span class="comment">//执行渲染函数</span></span><br><span class="line">    <span class="title function_">render</span>();</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//这里是使用6张全方位图的方式</span></span><br><span class="line">  <span class="comment">//添加立方体  VR看房</span></span><br><span class="line">  <span class="comment">// const boxGeometry = new THREE.BoxGeometry(10, 10, 10);</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// let arr = [&#x27;l&#x27;, &#x27;r&#x27;, &#x27;u&#x27;, &#x27;d&#x27;, &#x27;b&#x27;, &#x27;f&#x27;];</span></span><br><span class="line">  <span class="comment">// let boxMaterials = [];</span></span><br><span class="line">  <span class="comment">// arr.forEach((item) =&gt; &#123;</span></span><br><span class="line">  <span class="comment">//   //纹理加载</span></span><br><span class="line">  <span class="comment">//   let texture = new THREE.TextureLoader().load(`./imgs/$&#123;item&#125;.jpg`);</span></span><br><span class="line">    </span><br><span class="line">  <span class="comment">//   if(item === &#x27;u&#x27; || item === &#x27;d&#x27;) &#123;</span></span><br><span class="line">  <span class="comment">//     texture.rotation = Math.PI;</span></span><br><span class="line">  <span class="comment">//     texture.center.set(0.5, 0.5);</span></span><br><span class="line">  <span class="comment">//     boxMaterials.push(new THREE.MeshBasicMaterial(&#123;</span></span><br><span class="line">  <span class="comment">//       map: texture</span></span><br><span class="line">  <span class="comment">//     &#125;));</span></span><br><span class="line">  <span class="comment">//   &#125; else &#123;</span></span><br><span class="line">  <span class="comment">//     boxMaterials.push(new THREE.MeshBasicMaterial(&#123;</span></span><br><span class="line">  <span class="comment">//       map: texture</span></span><br><span class="line">  <span class="comment">//     &#125;));</span></span><br><span class="line">  <span class="comment">//   &#125;</span></span><br><span class="line">  <span class="comment">// &#125;);</span></span><br><span class="line">  <span class="comment">// const cube = new THREE.Mesh(boxGeometry, boxMaterials);</span></span><br><span class="line">  <span class="comment">// cube.geometry.scale(1, 1, -1);</span></span><br><span class="line">  <span class="comment">// scene.add(cube);</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">//添加球  HDR全景展示</span></span><br><span class="line">  <span class="keyword">const</span> sphereGeometry = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">SphereGeometry</span>(<span class="number">5</span>, <span class="number">32</span>, <span class="number">32</span>);</span><br><span class="line">  <span class="keyword">const</span> loader = <span class="keyword">new</span> <span class="title class_">RGBELoader</span>();</span><br><span class="line">  loader.<span class="title function_">load</span>(<span class="string">&#x27;./imgs/BrightMichiganFunRoom.hdr&#x27;</span>, <span class="function">(<span class="params">texture</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> material = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">MeshBasicMaterial</span>(&#123;</span><br><span class="line">      <span class="attr">map</span>: texture</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">const</span> sphere = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Mesh</span>(sphereGeometry, material);</span><br><span class="line">    sphere.<span class="property">geometry</span>.<span class="title function_">scale</span>(<span class="number">1</span>, <span class="number">1</span>, -<span class="number">1</span>);</span><br><span class="line">    scene.<span class="title function_">add</span>(sphere);</span><br><span class="line">  &#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  </span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  * &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">padding</span>: <span class="number">0</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">margin</span>: <span class="number">0</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> three.js </tag>
            
            <tag> VR </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的个人博客！</title>
      <link href="/posts/9520.html"/>
      <url>/posts/9520.html</url>
      
        <content type="html"><![CDATA[<h1 id="从-hexo-框架开始"><a href="#从-hexo-框架开始" class="headerlink" title="从 hexo 框架开始"></a>从 hexo 框架开始</h1><blockquote><p>曾经一直想着拥有自己的博客，现在终于实现了，一开始是想着学了 vue 和 springboot 两个框架后，自己搭建一个博客，但是写着写着发现效率好低，做着很多重复性工作(才不是我的代码封装性不好)，总之就是想写好的话需要很久的时间，因为样式、脚本、字体等等都要自己弄，终究是以失败告终，后来问 chat 才发现原来有现成的博客框架 hexo，当知道这点的时候可开心了，马上就去了解这个框架，这个框架用起来倒是不难，大部分博客该有的功能都帮我实现了，但是我要的是一个个性化的博客，我想要随意的改变我博客的每一个地方，然后发现 hexo 有很多的主题，于是…</p></blockquote><hr><h1 id="主题选择之旅"><a href="#主题选择之旅" class="headerlink" title="主题选择之旅"></a>主题选择之旅</h1><blockquote><p>于是又开启主题学习之旅，但是主题的选择又成为了一个难题，于是我上网看了大部分人所使用的主题，有一个 Aurora 主题我挺喜欢的，一个极光主题，很有科技感和未来感，不过看起来太花哨了，色彩很重，我想要我的博客色彩淡一些，于是选择了 butterfly 主题，这个主题网上有教程，所以学习起来不是很难，我很快就配置好了这个主题，但是新的问题又来了…</p></blockquote><h1 id="开始魔改"><a href="#开始魔改" class="headerlink" title="开始魔改"></a>开始魔改</h1><blockquote><p>虽然是使用了一个主题，但是这个主题毕竟还是别人的，总有地方是自己还想要进一步改造的，所以需要对主题进行魔改，这个 b 站上有教程，一开始是跟着安知鱼这个博主进行修改的，整个过程还是比较简单轻松的，很快就改造的有模有样了，但是终究是跟着别人改的，还不会自己改，所以我又开始研究如何自己魔改，然后研究了一下主题的源代码，发现…</p></blockquote><h1 id="自己魔改"><a href="#自己魔改" class="headerlink" title="自己魔改"></a>自己魔改</h1><blockquote><p>我发现原来魔改好简单，一开始看到.pug 和.styl 文件我还以为是我不熟悉的语言写的文件，然后仔细一看.pug 文件不就是简单版的 html 文件吗，.styl 文件就是简单版的 css 文件，岂可修！！！搞得我还以为我要学习新的语言，除了语法有点区别外其他基本一样，所以我很快就上手了自己魔改。其实魔改挺有意思的，我现在有点乐在其中了哈哈</p></blockquote><h1 id="学习收获"><a href="#学习收获" class="headerlink" title="学习收获"></a>学习收获</h1><blockquote><p>这次博客搭建学到了挺多的东西，比如我只知道 css 可以定义变量，却不知道具体该怎么使用，现在对变量声明和使用都熟悉了，然后就是学习到了很多新的插件和新的思维方式与概念，还认识到了很多优秀的博主，了解到了更多工具网站，比如制作徽标，icon 等等</p></blockquote><h1 id="心声"><a href="#心声" class="headerlink" title="心声"></a>心声</h1><blockquote><p>这个博客承载着我的热爱与热情，这个博客会见证我的成长，我也会见证这个博客的成长，另外我搭建这个博客的原因有很多，一是自己真的想要一个博客用来分享自己的学习成果，自己的生活，记录自己的成长轨迹，二是想结交更多朋友，想认识更多来自互联网的旅人，与我一起交流，不仅仅是编程，还有生活琐事，三是想在这互联网上搭建一个栖息的地方，供互联网中的旅人休息，同时也是想在互联网中留下自己的足迹，四是我生日快到了哈哈，我想为 19 岁的我送上一份最棒的生日礼物，18 岁的我实现了高中的梦想—-成为一名程序员！我那时候的高中生活是很无趣的，每天就是写作业，考试，吃饭睡觉，每天重复着无趣的活动，直到遇到了编程，我的世界变得有趣起来，所以开始下定决心要成为一名程序员！高考结束后我立马就开始投入了编程的学习，那真是一段非常充实的时光，我的世界也变得丰富多彩起来！到现在接触编程已经快一年了，能自己写出不错的东西了，但是我的征程还才开始，后面还有很长一段征程要走，所以我希望 19 岁的我能保持我 18 岁的热情，让心永远向阳、不忘初心、不停留在过往、以风为方向勇往直前！保持那个斗志昂扬不认输的我！有梦埋在心底，为实现至死不渝！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
            <tag> hexo </tag>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title></title>
      <link href="/css/categorybar.css"/>
      <url>/css/categorybar.css</url>
      
        <content type="html"><![CDATA[/* 首页分类条展示 */#category-bar{    padding: 0.4rem 1rem 0.4rem 0.5rem;    background: var(--xingzhi-card-bg);    border-radius: 12px;    display: flex;    white-space: nowrap;    overflow: hidden;    margin-bottom: 1rem;    border: var(--style-border);  }    @media screen and (max-width: 768px){    #category-bar{      border-radius: 0;    }  }    #category #category-bar{    padding: 0;    border: none;  }    #category a.category-bar-item.select a{    display: none;  }    .category-in-bar{    display: flex;    white-space: nowrap;  }    .category-in-bar-tips{    margin-right: 1rem;  }    .category-bar-items{    white-space: nowrap;    overflow-x: scroll;    display: flex;  }        .category-bar-items::-webkit-scrollbar{    display: none;  }    .category-bar-item a{    padding: 0.1rem 0.5rem;    margin: 0 0.25rem;    font-weight: bold;    border-radius: 12px;  }    .category-bar-item:hover a{    background: var(--xingzhi-main);    color: var(--xingzhi-white);  }    .category-bar-item.select a {    background: var(--xingzhi-main);    color: var(--xingzhi-white);    border-radius: 12px;  }    .category-bar-more{    margin-left: 1rem;    font-weight: bold;  }]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/color.css"/>
      <url>/css/color.css</url>
      
        <content type="html"><![CDATA[/* 颜色 */:root {    --xingzhi-theme-op: #4259ef23;    --xingzhi-gray-op: #9999992b;    --xingzhi-theme-top: var(--xingzhi-theme);    --xingzhi-white: #fff;    --xingzhi-white-op: rgba(255, 255, 255, 0.2);    --xingzhi-black: #000;    --xingzhi-black-op: rgba(0, 0, 0, 0.2);    --xingzhi-none: #00000000;    --xingzhi-gray: #999999;    --xingzhi-yellow: #ffc93e;    --xingzhi-border-radius: 8px;    --xingzhi-main: var(--xingzhi-theme);    --xingzhi-main-op: var(--xingzhi-theme-op);    --xingzhi-shadow-theme: 0 8px 12px -3px var(--xingzhi-theme-op);    --xingzhi-shadow-main: 0 8px 12px -3px var(--xingzhi-main-op);    --xingzhi-shadow-blue: 0 8px 12px -3px rgba(40, 109, 234, 0.2);    --xingzhi-shadow-white: 0 8px 12px -3px rgba(255, 255, 255, 0.2);    --xingzhi-shadow-black: 0 0 12px 4px rgba(0, 0, 0, 0.05);    --xingzhi-shadow-yellow: 0px 38px 77px -26px rgba(255, 201, 62, 0.12);    --xingzhi-shadow-red: 0 8px 12px -3px #ee7d7936;    --xingzhi-shadow-green: 0 8px 12px -3px #87ee7936;    --xingzhi-shadow-border: 0 8px 16px -4px #2c2d300c;    --xingzhi-shadow-blackdeep: 0 2px 16px -3px rgba(0, 0, 0, 0.15);    --xingzhi-logo-color: linear-gradient(215deg, #4584ff 30%, #ff7676 70%);    --style-border: 1px solid var(--xingzhi-card-border);    --xingzhi-blue-main: #3b70fc;    --style-border-hover: 1px solid var(--xingzhi-main);    --style-border-dashed: 1px dashed var(--xingzhi-theme-op);    --style-border-avatar: 4px solid var(--xingzhi-background);    --style-border-always: 1px solid var(--xingzhi-card-border);    --xingzhi-white-acrylic1: #fefeff !important;    --xingzhi-white-acrylic2: #fcfdff !important;    --xingzhi-black-acrylic2: #08080a !important;    --xingzhi-black-acrylic1: #0b0b0e !important;    --xingzhi-main-none: #b8b8b800 !important;      }    [data-theme="light"] {    --xingzhi-theme: #3b70fc;    --xingzhi-theme-op: #4259ef23;    --xingzhi-blue: #3b70fc;    --xingzhi-red: #d8213c;    --xingzhi-pink: #ff7c7c;    --xingzhi-green: #57bd6a;    --xingzhi-fontcolor: #363636;    --xingzhi-background: #f7f9fe;    --xingzhi-reverse: #000;    --xingzhi-maskbg: rgba(255, 255, 255, 0.6);    --xingzhi-maskbgdeep: rgba(255, 255, 255, 0.85);    --xingzhi-hovertext: var(--xingzhi-theme);    --xingzhi-ahoverbg: #f7f7fa;    --xingzhi-lighttext: var(--xingzhi-main);    --xingzhi-secondtext: rgba(60, 60, 67, 0.6);    --xingzhi-scrollbar: rgba(60, 60, 67, 0.4);    --xingzhi-card-btn-bg: #edf0f7;    --xingzhi-post-blockquote-bg: #fafcff;    --xingzhi-post-tabs-bg: #f2f5f8;    --xingzhi-secondbg: #edf0f7;    --xingzhi-shadow-nav: 0 5px 12px -5px rgba(102, 68, 68, 0.05);    --xingzhi-card-bg: #fff;    --xingzhi-shadow-lightblack: 0 5px 12px -5px rgba(102, 68, 68, 0);    --xingzhi-shadow-light2black: 0 5px 12px -5px rgba(102, 68, 68, 0);    --xingzhi-card-border: #c0c6d8;  }    [data-theme="dark"] {    --global-bg: #191919;    --xingzhi-theme: #0084ff;    --xingzhi-theme-op: #0084ff23;    --xingzhi-blue: #0084ff;    --xingzhi-red: #ff3842;    --xingzhi-pink: #ff7c7c;    --xingzhi-green: #57bd6a;    --xingzhi-fontcolor: #f7f7fa;    --xingzhi-background: #18171d;    --xingzhi-reverse: #fff;    --xingzhi-maskbg: rgba(0, 0, 0, 0.6);    --xingzhi-maskbgdeep: rgba(0, 0, 0, 0.85);    --xingzhi-hovertext: #0a84ff;    --xingzhi-ahoverbg: #fff;    --xingzhi-lighttext: #f2b94b;    --xingzhi-secondtext: #a1a2b8;    --xingzhi-scrollbar: rgba(200, 200, 223, 0.4);    --xingzhi-card-btn-bg: #30343f;    --xingzhi-post-blockquote-bg: #000;    --xingzhi-post-tabs-bg: #121212;    --xingzhi-secondbg: #30343f;    --xingzhi-shadow-nav: 0 5px 20px 0px rgba(28, 28, 28, 0.4);    --xingzhi-card-bg: #1d1b26;    --xingzhi-shadow-lightblack: 0 5px 12px -5px rgba(102, 68, 68, 0);    --xingzhi-shadow-light2black: 0 5px 12px -5px rgba(102, 68, 68, 0);    --xingzhi-card-border: #42444a;  }]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/console.css"/>
      <url>/css/console.css</url>
      
        <content type="html"><![CDATA[#console.show {  opacity: 1;  pointer-events: all;}#console {  display: flex;  position: fixed;  width: 100vw;  height: 100vh;  top: 0;  left: 0;  z-index: 9999;  justify-content: center;  opacity: 0;  transition: 0.3s ease-out;  flex-direction: column;  align-items: center;  pointer-events: none;  -webkit-user-select: none;}#console .close-btn {  width: 100%;  height: 60px;  position: fixed;  right: max(0, calc((100% - 1400px) / 2));  top: 0;  font-size: 35px;  color: var(--xingzhi-fontcolor);  cursor: pointer;  transition: 0.3s;  display: flex;  align-items: center;  justify-content: center;  max-width: 1400px;}#console.show .close-btn i {  transform: rotate(0);}#console .close-btn i {  font-size: 32px;  margin-right: 1.5rem;  margin-left: auto;  transition: 0.3s;  line-height: 1;  transform: rotate(-30deg);  transition: 0.6s;}#console .button-group {  display: flex;  margin: 1rem auto 0 auto;  justify-content: center;  width: fit-content;}#console .button-group .console-btn-item:not(:last-child) {  margin-right: 0.5rem;}#console .button-group .console-btn-item {  width: 60px;  height: 60px;  transition: 0.3s;  cursor: pointer;}#console .button-group .console-btn-item a {  width: 100%;  height: 100%;  background: var(--xingzhi-card-bg);  border: var(--style-border);  border-radius: 60px;  display: flex;  align-items: center;  justify-content: center;  color: var(--xingzhi-fontcolor);}a.darkmode_switchbutton {  padding: 4px 8px !important;  cursor: pointer;  margin: 0 !important;  font-size: 0.9rem;  color: var(--xingzhi-fontcolor);}#console .button-group .console-btn-item a i {  font-size: 24px;}#console.show .console-mask {  backdrop-filter: saturate(180%) blur(20px);  -webkit-backdrop-filter: blur(20px);  transform: translateZ(0);  animation: 0.6s ease 0s 1 normal none running to_show;}#console .console-mask {  background: var(--xingzhi-maskbgdeep);  backdrop-filter: saturate(180%) blur(20px);  -webkit-backdrop-filter: blur(20px);  width: 100vw;  height: 100vh;  top: 0;  left: 0;  position: absolute;  z-index: -1;  -webkit-backface-visibility: hidden;  -webkit-transform-style: preserve-3d;  transform: translateZ(0);}#console .button-group .console-btn-item:hover a {  color: var(--xingzhi-white);  background: var(--xingzhi-main);}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[#web_bg {  width: 100%;  height: 100%;  top: 0;  left: 0;  opacity: 1;  position: fixed;  z-index: -999;  background: var(--xingzhi-background);}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/header_nav.css"/>
      <url>/css/header_nav.css</url>
      
        <content type="html"><![CDATA[#page-header.not-top-img {  margin-bottom: 0;}#page-header {  background-image: none !important;  display: flex;  justify-content: center;}#page-header.not-top-img:not(.nav-fixed) #nav {  background: var(--xingzhi-none);  transition: 0.3s;}#page-header.not-top-img #nav {  transition: 0.3s;  background: var(--xingzhi-card-bg);}#page-header.nav-fixed > #nav,#page-header.not-top-img > #nav {  box-shadow: none;}#page-header #nav {  box-shadow: none;  transition: 0.3s;  display: flex;  justify-content: center;  z-index: 1000 !important;  -webkit-user-select: none;}#nav.show {  top: 0;  transition: 0.2s;  position: fixed;  z-index: 91;}#nav.show {  opacity: 1;  filter: none;}#nav {  padding: 0;  flex-wrap: nowrap;}#nav {  position: absolute;  top: 0;  z-index: 90;  display: flex;  flex-wrap: wrap;  -webkit-box-align: center;  align-items: center;  padding: 0 36px;  width: 100%;  height: 60px;  font-size: 1.3em;  opacity: 0;  transition: all 0.5s ease 0s;  outline: 1px solid var(--xingzhi-none);}#page-header.not-top-img:not(.nav-fixed) #nav {  background: var(--xingzhi-none);  transition: 0.3s;}#page-header.not-top-img #nav {  transition: 0.3s;  background: var(--xingzhi-card-bg);}#page-header.nav-fixed > #nav,#page-header.not-top-img > #nav {  box-shadow: none;}#page-header #nav #nav-group {  max-width: 1400px;  width: 100%;  display: flex;  position: relative;  padding: 0 1.5rem;  align-items: center;}.page #nav a {  color: var(--xingzhi-fontcolor);}#nav a {  border-radius: 8px;}#nav #blog_name {  flex-wrap: nowrap;  height: 60px;  display: flex;  align-items: center;  z-index: 102;  transition: 0.3s;}.page .back-home-button {  color: var(--xingzhi-fontcolor);}.back-home-button {  display: flex;  width: 35px;  height: 35px;  padding: 0 !important;  align-items: center;  justify-content: center;  margin-right: 4px;  transition: 0.3s;  border-radius: 8px;  color: var(--xingzhi-white);  border-radius: 40px;}#page-header.not-top-img #nav .back-home-button i {  font-size: 20px;}i.xingzhifont {  font-size: 22px;  line-height: 1;}.page #nav #site-name {  color: var(--xingzhi-white);  position: relative;  display: flex;}@media screen and (min-width: 900px) {  #page-name-mask {    width: 100%;    height: 100%;    position: absolute;    overflow: hidden;    left: 0;  }  #page-name {    align-items: center;    display: flex;    border-radius: 12px;    height: 40px;    position: absolute;    top: 62px;    left: 0;    right: 0;    margin: auto;    justify-content: center;    animation-timing-function: ease-out;    -webkit-animation-timing-function: ease-out;  }  #nav #page-name-text {    display: inline;    font-weight: 700;    padding: 4px 8px;    opacity: 0;    transition: 0.1s;    text-overflow: ellipsis;    overflow: hidden;    white-space: nowrap;    position: relative;    text-align: center;    cursor: pointer;    top: 0;    font-size: 0.9rem;    animation-timing-function: ease-in;    -webkit-animation-timing-function: ease-in;  }}#nav #menus {  display: flex;  justify-content: center;  width: 100%;  position: absolute;  height: 60px;  left: 0;  margin: 0;  transform: translateZ(0);}#nav .menus_items {  position: relative;  width: fit-content;  text-align: center;  left: 0;  right: 0;  top: 0;  display: flex;  flex-direction: row;  justify-content: center;}#nav .menus_items .menus_item {  padding: 0 0.4rem;  display: flex;  flex-direction: column;  align-items: center;  margin: auto;  position: relative;}#menus > div.menus_items > div > a {  letter-spacing: 0.3rem;  font-weight: 700;  padding: 0 0.8em 0 1em;  height: 35px;  line-height: 35px;  -webkit-transition: color 0s !important;  -moz-transition: color 0s !important;  -o-transition: color 0s !important;  -ms-transition: color 0s !important;  transition: color 0s !important;}#nav .site-page {  position: relative;  /* padding-bottom: 6px; */  font-size: 0.8em;  cursor: pointer;}#nav .site-page {  text-shadow: 0.05rem 0.05rem 0.1rem transparent;  border-radius: 8px;}#nav .menus_items .menus_item i.expand {  display: none;}#nav .menus_items .menus_item i.expand {  padding: 4px;  transition: transform 0.3s ease 0s;}#page-header #nav #nav-right {  position: absolute;  right: 0;  z-index: 102;  display: flex;  flex-direction: row;  height: 100%;  align-items: center;  margin-right: 1.5rem;  overflow: hidden;}#page-header #nav #nav-right > div {  margin-left: 1rem;  padding: 0;}.nav-button {  cursor: pointer;}#blog_name #site-name .title {  -webkit-transition: 0.3s;  -moz-transition: 0.3s;  -o-transition: 0.3s;  -ms-transition: 0.3s;  transition: 0.3s;  letter-spacing: normal;  font-size: 1.2rem;  padding: 0 5px;  line-height: 2rem;  -webkit-transition: color 0s;  -moz-transition: color 0s;  -o-transition: color 0s;  -ms-transition: color 0s;  transition: color 0s;}#nav #blog_name a,#nav #menus a,#nav #nav-right #toggle-menu a,#nav #nav-right .nav-button a,#nav .mask-name-container a {  border-radius: 50px;}#site-name {  padding: 0 2px;  height: 35px;  line-height: 35px;  position: relative;  display: -webkit-box;  display: -moz-box;  display: -webkit-flex;  display: -ms-flexbox;  display: box;  display: flex;  -webkit-box-align: center;  -moz-box-align: center;  -o-box-align: center;  -ms-flex-align: center;  -webkit-align-items: center;  align-items: center;  -webkit-box-pack: center;  -moz-box-pack: center;  -o-box-pack: center;  -ms-flex-pack: center;  -webkit-justify-content: center;  justify-content: center;  -webkit-transition: 0.3s;  -moz-transition: 0.3s;  -o-transition: 0.3s;  -ms-transition: 0.3s;  transition: 0.3s;}#blog_name #site-name i {  position: absolute;  -webkit-transition: 0.3s;  -moz-transition: 0.3s;  -o-transition: 0.3s;  -ms-transition: 0.3s;  transition: 0.3s;  font-size: 1rem;  opacity: 0;  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";  filter: alpha(opacity=0);}#page-header.not-top-img #nav #blog_name #site-name:hover,#page-header.not-top-img #nav #blog_name .back-home-button:hover,#page-header.not-top-img #nav #nav-right #toggle-menu:hover,#page-header.not-top-img #nav #nav-right .nav-button a:hover {  color: var(--xingzhi-white);  background: var(--xingzhi-main);  -webkit-box-shadow: var(--xingzhi-shadow-main);  box-shadow: var(--xingzhi-shadow-main);}#blog_name #site-name:hover .title {  opacity: 0;  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";  filter: alpha(opacity=0);}#blog_name #site-name:hover i {  color: #fff;  opacity: 1;  -ms-filter: none;  filter: none;}#nav i {  font-size: 1.2rem;  font-weight: 700;}.page #menus > div.menus_items > .menus_item:hover > a {  color: var(--xingzhi-card-bg);}.page #nav a:hover {  color: var(--xingzhi-card-bg);  background: var(--xingzhi-lighttext);  transition: 0.3s;  box-shadow: var(--xingzhi-shadow-main);}#nav .site-page:hover {  color: var(--xingzhi-white) !important;}#page-header #nav .nav-button a {  height: 35px;  width: 35px;  display: -webkit-box;  display: -moz-box;  display: -webkit-flex;  display: -ms-flexbox;  display: box;  display: flex;  -webkit-box-align: center;  -moz-box-align: center;  -o-box-align: center;  -ms-flex-align: center;  -webkit-align-items: center;  align-items: center;  -webkit-box-pack: center;  -moz-box-pack: center;  -o-box-pack: center;  -ms-flex-pack: center;  -webkit-justify-content: center;  justify-content: center;  -webkit-transition: background 0.3s ease-in-out, color 0s ease-in-out;  -moz-transition: background 0.3s ease-in-out, color 0s ease-in-out;  -o-transition: background 0.3s ease-in-out, color 0s ease-in-out;  -ms-transition: background 0.3s ease-in-out, color 0s ease-in-out;  transition: background 0.3s ease-in-out, color 0s ease-in-out;}#page-header #nav #nav-left .nav-button a i,#page-header #nav #nav-right .nav-button a i {  line-height: 1;  -webkit-transition: 0.3s;  -moz-transition: 0.3s;  -o-transition: 0.3s;  -ms-transition: 0.3s;  transition: 0.3s;}#page-header:not(.nav-fixed) #nav-totop {  width: 0;  transform: scale(0);  transition: 0.3s;  margin-left: 0 !important;  overflow: hidden;  transition: 0.3s ease-in;}#nav-totop {  position: relative;  width: 35px;  height: 35px;  transition: 0.3s;  display: flex;  border-radius: 40px;  transition: all 0.3s ease-in-out;  align-items: center;}#page-header #nav #nav-right .nav-button a.totopbtn {  width: 25px;  height: 25px;  border-radius: 40px;  background: var(--heo-fontcolor);  color: var(--heo-card-bg);  position: absolute;  top: 5px;  right: 5px;  transition: 0.3s;}#page-header #nav #nav-left .nav-button a i,#page-header #nav #nav-right .nav-button a i {  line-height: 1;  font-size: 22px;}#page-header:not(.nav-fixed) #percent {  transition: 0.3s;}.nav-fixed #nav-totop #percent,.page #nav-totop #percent {  font-size: 12px;  border-radius: 35px;  display: flex;  justify-content: center;  align-items: center;  transition: 0.3s;  white-space: nowrap;}#nav-totop #percent {  font-size: 12px;  border-radius: 35px;  display: flex;  justify-content: center;  align-items: center;  transition: 0.3s;  white-space: nowrap;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/hometop.css"/>
      <url>/css/hometop.css</url>
      
        <content type="html"><![CDATA[#home_top {    max-width: 1400px;    margin: auto;    margin-top: .5rem;    padding: 0 1.5rem;    width: 100%}@media screen and (max-width: 768px) {    #home_top {        padding:0;        margin-top: 0    }}.recent-top-post-group {    border-radius: 12px;    overflow: hidden;    overflow-x: auto;    width: 100%;    margin-bottom: 0}.recent-post-top {    display: flex;    flex-direction: row;    flex-wrap: nowrap;    width: 100%;    overflow-x: scroll}.recent-post-top::-webkit-scrollbar {    display: none}.recent-post-top .recent-post-item {    display: flex;    width: 200px;    flex-direction: column;    align-items: flex-start;    margin-left: .5rem;    background: var(--xingzhi-card-bg);    border-radius: 12px;    overflow: hidden;    min-width: 200px;    height: 164px;    max-height: 164px;    border: var(--style-border-always);    transition: .3s;    position: relative;    box-shadow: var(--xingzhi-shadow-border)}@media screen and (max-width: 768px) {    .recent-post-top .recent-post-item {        border-radius:8px;        box-shadow: none;        clip-path: inset(0 0 0 0 round 8px)    }    .recent-post-top .recent-post-item:last-child {        margin-right: 1rem    }}@media screen and (min-width: 1300px) {    .recent-post-top .recent-post-item {        margin-right:0;        margin-bottom: .5rem    }    .recent-post-top .recent-post-item:active {        transform: scale(.97)    }    .recent-post-top {        overflow-x: visible    }    .recent-top-post-group {        overflow: visible;        overflow-x: visible    }}span.recent-post-top-text {    position: absolute;    top: 0;    left: -40px;    display: flex;    z-index: 1;    background: var(--xingzhi-theme);    color: var(--xingzhi-white);    padding: 2px 8px;    font-size: .6rem;    border-radius: 12px 0 12px 0;    transition: .3s;    cursor: pointer}.recent-post-item:hover .recent-post-top-text {    left: 0}@media screen and (min-width: 1300px) {    .recent-post-top .recent-post-item:hover {        border:var(--style-border-hover);        box-shadow: var(--xingzhi-shadow-main);        transform: scale(1.03)    }    .recent-post-top .recent-post-item:active {        transform: scale(.97)    }}@media screen and (max-width: 768px) {    .recent-top-post-group {        border-radius:0;        background: var(--xingzhi-background)    }    .recent-post-top-text {        display: none!important    }    .recent-post-top .recent-post-item .post_cover img {        border-radius: 8px 8px 0 0!important    }}.recent-post-top .recent-post-item .post_cover a {    height: 100px;    overflow: hidden;    display: flex}.recent-post-top .recent-post-item .post_cover img {    object-fit: cover;    width: 100%;    background: var(--xingzhi-secondbg);    border-radius: 12px 12px 0 0}.recent-post-top .recent-post-item:hover .post_cover img {    transform: scale(1)}.recent-post-top .recent-post-item .recent-post-info {    padding: .3rem .5rem .3rem .5rem!important;    transition: .3s}.recent-post-top .recent-post-item:hover .recent-post-info a {    color: var(--xingzhi-fontcolor)}@media screen and (max-width: 1300px) {    .recent-post-top .recent-post-item:hover .recent-post-info a {        color:var(--xingzhi-theme);        transition: .3s    }}.recent-post-top .recent-post-item .recent-post-info .article-title {    -webkit-line-clamp: 2;    overflow: hidden;    display: -webkit-box;    -webkit-box-orient: vertical;    line-height: 1.5;    justify-content: center;    align-items: flex-end;    align-content: center;    padding-top: .5rem;    font-weight: 700;    font-size: .8rem!important;    padding: 0!important}.categoryItem {  overflow: hidden;  transform: scale(1);  transition: all 0.8s cubic-bezier(0.65, 0.15, 0.37, 1.19);  height: 48%;  border-radius: 12px;}a.categoryButton {  height: 100%;  width: 100%;  background: var(--xingzhi-card-bg);  border-radius: 12px;  display: inline-block;  text-align: left;  line-height: 4em;  font-weight: bold;  font-size: 0.9rem;  color: var(--xingzhi-white);  transition: all 0.8s cubic-bezier(0.39, 0.575, 0.565, 1);  transform: scale(1);  overflow: hidden;  font-family: PingFang SC, Hiragino Sans GB, Microsoft YaHei;}a.categoryButton i {  transform: scale(1.0) rotate(15deg);}@media screen and (min-width: 1300px) {  a.categoryButton:active {    transform: scale(0.97);  }}@media screen and (max-width: 768px) {  a.categoryButton {    border-radius: 8px;  }  .categoryItem {    border-radius: 0px;    height: 47%;    box-shadow: none !important;  }}a.categoryButton:after {  top: 50px;  width: 1rem;  left: 21px;  height: 2px;  background: var(--xingzhi-white);  content: "";  border-radius: 1px;  position: absolute;}.categoryButtonText {  padding-left: 21px;}a.categoryButton i {  font-size: 5rem;  opacity: 0.2;  position: absolute;  right: 0%;  top: 20%;  transition: 0.3s;  width: 100px;  text-align: center;  filter: blur(2px);}@media screen and (max-width: 768px) {  a.categoryButton i {    display: none;  }  .recent-post-top .categoryGroup {    min-width: 130px !important;    margin-bottom: 0.5rem;    margin-left: 1rem;    max-height: 164px;    overflow: hidden;    position: relative;  }}.topGroup {  display: flex;}#bannerGroup {  display: flex;}div#banners {  display: none;}.topGroup .todayCard {    display: none;}@media screen and (min-width: 1300px) {  .topGroup {    display: flex;    flex-direction: row;    flex-wrap: wrap;    justify-content: flex-end;    height: calc(328px + 0.5rem);    align-content: space-between;    width: calc(600px + 1.5rem);    position: relative;  }  div#bannerGroup {    width: calc(100% - 600px - 2rem);    margin-right: 0.5rem;    height: calc(328px + 0.5rem);    display: flex;    flex-direction: column;    justify-content: space-between;  }  div#banners {    display: flex;    width: 100%;    height: 76%;    background: var(--xingzhi-card-bg);    margin-bottom: 0.5rem;    border: var(--style-border);    border-radius: 12px;    overflow: hidden;    position: relative;    box-shadow: var(--xingzhi-shadow-border);    flex-direction: column;    overflow: hidden;    transition: 0.3s;    clip-path: inset(0 0 0 0 round 12px);  }  div#banners:hover {    box-shadow: var(--xingzhi-shadow-main);  }  #banners.flink {    margin-bottom: 0.5rem;  }  #banners .banner-button-group {    position: absolute;    right: 2rem;    top: 2rem;    display: flex;  }  #banners .banner-button {    padding: 8px 12px;    background: var(--xingzhi-fontcolor);    border-radius: 12px;    color: var(--xingzhi-card-bg);    display: flex;    align-items: center;    z-index: 1;    transition: 0.3s;    cursor: pointer;    box-shadow: var(--xingzhi-shadow-black);  }  #banners .banner-button.secondary {    background: var(--xingzhi-secondbg);    border: var(--style-border-always);    color: var(--xingzhi-lighttext);    margin-right: 1rem;    box-shadow: var(--xingzhi-shadow-border);  }  #banners .banner-button:hover {    background: var(--xingzhi-theme);    color: var(--xingzhi-white);  }  #banners .banner-button i {    margin-right: 8px;    font-size: 1rem;  }  .banners-title {    top: 2rem;    left: 1.5rem;    position: absolute;    display: flex;    flex-direction: column;  }    .banners-title-big {    font-size: 36px;    line-height: 1;    font-weight: bold;    margin-bottom: 8px;  }  .banners-title-small {    font-size: 12px;    line-height: 1;    color: var(--xingzhi-secondtext);    margin-top: 8px;    margin-bottom: 0.5rem;  }  #banner-hover {    position: absolute;    width: 100%;    height: 100%;    top: 0;    left: 0;    background: var(--xingzhi-theme);    color: var(--xingzhi-white);    padding-left: 0.5rem;    display: flex;    flex-direction: column;    justify-content: center;    opacity: 0;    transition: cubic-bezier(0.71, 0.15, 0.16, 1.15) 0.6s;  }  .bannerText {    font-size: 4rem;    line-height: 4rem;    font-weight: bold;  }  .banner-righticon {    font-size: 4rem;    opacity: 0.6;  }  #banners:hover #banner-hover {    opacity: 1;    padding-left: 2rem;    background: #4259efc9;    backdrop-filter: blur(15px);    -webkit-backdrop-filter: blur(15px);    /* -webkit-backface-visibility: hidden; */    /* -webkit-transform-style: preserve-3d; */    transition: 0.3s;    background-size: 200%;    cursor: pointer;  }    #banners #banner-hover i {        font-size: 80px;        opacity: 0.4;    }    .topGroup .todayCard {        position: absolute;        width: calc(600px + 1rem);        height: 100%;        z-index: 1;        top: 0;        left: 0;        background: var(--xingzhi-card-bg);        border-radius: 12px;        margin-left: 0.5rem;        overflow: hidden;        transition: 0.3s;        display: flex;        cursor: pointer;        pointer-events: all;    }    .topGroup .todayCard::after {        position: absolute;        content: '';        width: 100%;        height: 100%;        top: 0;        left: 0;    }    .topGroup .todayCard.hide {        opacity: 0;        pointer-events: none;    }    .topGroup .todayCard .todayCard-info {        position: absolute;        bottom: 2rem;        left: 2rem;        z-index: 2;        color: var(--xingzhi-white);        max-width: 60%;        transition: 0.3s;    }    .topGroup .todayCard.hide .todayCard-info {        bottom: 1rem;        opacity: 0;    }    .topGroup .todayCard .todayCard-info .todayCard-tips {        opacity: 0.8;        font-size: 0.6rem;    }    .topGroup .todayCard .todayCard-info .todayCard-title {        font-size: 28px;        font-weight: bold;        line-height: 36px;    }    .topGroup .banner-button-group {        position: absolute;        right: 2rem;        bottom: 2rem;        display: flex;        transition: 0.3s;    }    .topGroup .todayCard.hide .banner-button-group {        bottom: 1rem;    }    .topGroup .banner-button {        background: var(--xingzhi-white-op);        border-radius: 20px;        color: var(--xingzhi-white);        display: flex;        align-items: center;        z-index: 1;        transition: 0.3s;        cursor: pointer;        backdrop-filter: saturate(180%) blur(20px);        -webkit-backdrop-filter: blur(20px);        transform: translateZ(0);        height: 40px;        width: 118px;        justify-content: center;    }    .topGroup .banner-button:hover {        background: var(--xingzhi-theme);        color: var(--xingzhi-white);    }    .topGroup .banner-button i {        margin-right: 8px;        font-size: 22px;    }    .topGroup .todayCard .todayCard-cover {        position: absolute;        min-width: 100%;        min-height: 100%;        top: 0;        left: 0;        background-size: cover;        z-index: -1;        transition: 0.3s;    }    .topGroup .todayCard.hide .todayCard-cover {        transform: scale(1.2);    }}.tags-group-icon {    width: 120px;    height: 120px;    border-radius: 30px}.tags-group-all {    display: flex;    transform: rotate(-30deg)}.tags-group-all.nowrapMove {    transform: rotate(0);    padding-bottom: 2rem}.tags-group-wrapper {    margin-top: 5rem;    display: flex;    flex-wrap: nowrap;    animation: rowup 60s linear infinite}.nowrapMove .tags-group-wrapper {    margin-top: 7rem;    animation: rowup 120s linear infinite}.tags-group-icon-pair .tags-group-icon:nth-child(even) {    margin-top: 1rem;    transform: translate(-60px)}.tags-group-icon-pair {    margin-left: 1rem}.tags-group-icon {    display: flex;    align-items: center;    justify-content: center;    color: #fff;    font-size: 66px;    font-weight: 700;    box-shadow: var(--xingzhi-shadow-blackdeep)}.nowrapMove .tags-group-icon {    border-radius: 50%}.tags-group-icon img {    width: 60%}.nowrapMove .tags-group-icon img {    min-width: 100%;    min-height: 100%;    border-radius: 50%;    object-fit: cover}.categoryItem:hover i {    opacity: .8;    transition: .8s;    transition-delay: .15s;    transform: scale(1.03) rotate(0);    font-size: 2.5rem;    filter: blur(0)}@media screen and (min-width: 1300px) {    .categoryItem:hover i {        transform:scale(1.03) rotate(0)    }}.cate-button-text {    box-shadow: var(--xingzhi-shadow-black)}.recent-post-top .categoryGroup {    display: flex;    flex-direction: column;    justify-content: space-between;    min-width: 200px}.categoryGroup .categoryItem:nth-child(3) {    display: none}@media screen and (min-width: 1300px) {    .recent-post-top .categoryGroup {        flex-direction:row;        height: 24%    }    .categoryItem {        width: calc(100% / 3 - .33rem);        height: 100%;        margin-right: .5rem    }    .categoryItem:last-child {        margin-right: 0    }    .categoryItem:hover {        width: 50%    }    .categoryGroup .categoryItem:nth-child(3) {        display: flex    }}a.categoryButton.bikan {    background: linear-gradient(to right,#358bff,#15c6ff);    background-size: 200%}a.categoryButton.remen {    background: linear-gradient(to right,#f65,#ffbf37);    background-size: 200%}a.categoryButton.shiyong {    background: linear-gradient(to right,#18e7ae,#1eebeb);    background-size: 200%}[data-theme=dark] a.categoryButton.bikan {    background: linear-gradient(to right,#0653b8,#2fcbff);    background-size: 200%}[data-theme=dark] a.categoryButton.remen {    background: linear-gradient(to right,#e22a16,#da980c);    background-size: 200%}[data-theme=dark] a.categoryButton.shiyong {    background: linear-gradient(to right,#099e74,#0ea4a4);    background-size: 200%}a.categoryButton:hover {    background-position: 100% 0}@keyframes rowup {    from {        transform: translateX(0)    }    to {        transform: translateX(-50%)    }}#recent-post-top .recent-post-item .post_cover {    width: 100%;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/iconfont.css"/>
      <url>/css/iconfont.css</url>
      
        <content type="html"><![CDATA[@font-face {  font-family: "iconfont"; /* Project id 4264124 */  src: url('//at.alicdn.com/t/c/font_4264124_pi5gdetbxgc.woff2?t=1695397440182') format('woff2'),       url('//at.alicdn.com/t/c/font_4264124_pi5gdetbxgc.woff?t=1695397440182') format('woff'),       url('//at.alicdn.com/t/c/font_4264124_pi5gdetbxgc.ttf?t=1695397440182') format('truetype');}.xingzhifont {  font-family: "iconfont" !important;  font-size: 16px;  font-style: normal;  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;}.icon-arrow-up-line:before {  content: "\e67a";}.icon-moon-clear-fill:before {  content: "\e835";}.icon-side-bar-fill:before {  content: "\e676";}.icon-keyboard-box-fill:before {  content: "\ee2d";}.icon-cc-close-crude:before {  content: "\e62a";}.icon-igw-f-dashboard-rectangle:before {  content: "\e664";}.icon-shezhi-xianxing:before {  content: "\e8b7";}.icon-touzi:before {  content: "\e76d";}.icon-gongjiao:before {  content: "\e62d";}.icon-shouye:before {  content: "\e751";}.icon-grip-vertical:before {  content: "\eb3d";}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/blogex.js"/>
      <url>/js/blogex.js</url>
      
        <content type="html"><![CDATA[function checkOpen() {}function addStylesheetRule(e) {//   document.styleSheets[0].addRule(":root", e);  document.styleSheets[0].insertRule(":root", e)}function handleStyles(e) {  "light" == getContrastYIQ(e) && (e = LightenDarkenColor(colorHex(e), -50)),    addStylesheetRule(`--xingzhi-main:${e}!important`),    addStylesheetRule(`--xingzhi-main-op:${e}23!important`),    addStylesheetRule(`--xingzhi-main-op-deep:${e}dd!important`),    addStylesheetRule(`--xingzhi-main-op-light:${e}0d!important`),    addStylesheetRule(`--xingzhi-main-none:${e}00!important`),    xingzhi.initThemeColor(),    document.getElementById("coverdiv").classList.add("loaded");}function handleDefaultStyles() {  addStylesheetRule("--xingzhi-main: var(--xingzhi-theme)!important"),    addStylesheetRule("--xingzhi-main-op: var(--xingzhi-theme-op)!important"),    addStylesheetRule(      "--xingzhi-main-op-deep:var(--xingzhi-theme-op-deep)!important"    ),    addStylesheetRule(      "--xingzhi-main-op-light:var(--xingzhi-theme-op-light)!important"    ),    addStylesheetRule(      "--xingzhi-main-none: var(--xingzhi-theme-none)!important"    ),    xingzhi.initThemeColor();}async function coverColor() {  const e = document.getElementById("post-cover")?.src;  if (e)    try {      const t = await fetch(e + "?imageAve");      if (t.ok) {        handleStyles("#" + (await t.json()).RGB.slice(2));      }    } catch (e) {      console.error("Failed to fetch the image", e);    }  else handleDefaultStyles();}function padZero(e, t = 2) {  return (Array(t).join("0") + e).slice(-t);}function colorHex(e) {  if (/#([0-9a-f]{3}|[0-9a-f]{6})/i.test(e)) return e;  if (/^(rgb|RGB)/.test(e)) {    let t = e.replace(/(?:\(|\)|rgb|RGB)*/g, "").split(","),      o = "#";    for (let e of t) {      o += padZero((+e).toString(16));    }    return o;  }  return e;}function colorRgb(e) {  let t = e.toLowerCase();  if (t && /^#([0-9a-f]{3}|[0-9a-f]{6})$/i.test(t)) {    if (4 === t.length) {      let e = "#";      for (let o = 1; o < 4; o += 1) e += t.slice(o, o + 1).repeat(2);      t = e;    }    let e = [];    for (let o = 1; o < 7; o += 2) e.push(parseInt("0x" + t.slice(o, o + 2)));    return `rgb(${e.join(",")})`;  }  return t;}function LightenDarkenColor(e, t) {  let o = !1;  "#" == e[0] && ((e = e.slice(1)), (o = !0));  let n = parseInt(e, 16),    a = (n >> 16) + t,    i = ((n >> 8) & 255) + t,    r = (255 & n) + t;  return (    (a = Math.min(255, Math.max(0, a))),    (i = Math.min(255, Math.max(0, i))),    (r = Math.min(255, Math.max(0, r))),    (o ? "#" : "") + (r | (i << 8) | (a << 16)).toString(16).padStart(6, "0")  );}function getContrastYIQ(e) {  let t = colorRgb(e).match(/^rgb\((\d+),\s*(\d+),\s*(\d+)\)$/);  return (299 * t[1] + 587 * t[2] + 114 * t[3]) / 255e3 >= 0.5    ? "light"    : "dark";}function navTitle() {  var e = document.title.replace(" | 张洪xingzhi", "");  document.getElementById("page-name-text").innerHTML = e;}function showcopy() {  if (void 0 !== GLOBAL_CONFIG.Snackbar)    btf.snackbarShow(GLOBAL_CONFIG.copy.success);  else {    const e = ctx.previousElementSibling;    (e.innerText = GLOBAL_CONFIG.copy.success),      (e.style.opacity = 1),      setTimeout(() => {        e.style.opacity = 0;      }, 700);  }}(checkOpen.toString = function () {  this.opened = !0;}),  (window.onload = function () {    for (      var e = document.getElementsByClassName("copybtn"), t = 0;      t < e.length;      t++    )      document        .getElementsByClassName("copybtn")        [t].addEventListener("click", function () {          showcopy();        });    xingzhi.initThemeColor();  });var getTimeState = () => {    var e = new Date().getHours(),      t = "";    return (      e >= 0 && e <= 5        ? (t = "睡个好觉，保证精力充沛")        : e > 5 && e <= 10        ? (t = "一日之计在于晨")        : e > 10 && e <= 14        ? (t = "吃饱了才有力气干活")        : e > 14 && e <= 18        ? (t = "集中精力，攻克难关")        : e > 18 && e <= 24 && (t = "不要太劳累了，早睡更健康"),      t    );  },  switchDarkMode = () => {    "dark" === document.documentElement.getAttribute("data-theme")      ? (activateLightMode(),        saveToLocal.set("theme", "light", 2),        void 0 !== GLOBAL_CONFIG.Snackbar &&          btf.snackbarShow(GLOBAL_CONFIG.Snackbar.night_to_day, !1, 2e3),        $(".menu-darkmode-text").text("深色模式"))      : (activateDarkMode(),        saveToLocal.set("theme", "dark", 2),        void 0 !== GLOBAL_CONFIG.Snackbar &&          btf.snackbarShow(GLOBAL_CONFIG.Snackbar.day_to_night, !1, 2e3),        $(".menu-darkmode-text").text("浅色模式")),      handleCases()    //   updateCharts();  },  handleCases = () => {    "function" == typeof utterancesTheme && utterancesTheme(),      "object" == typeof FB && window.loadFBComment(),      window.DISQUS &&        document.getElementById("disqus_thread").children.length &&        setTimeout(() => window.disqusReset(), 200);  },  updateCharts = () => {    let e =      "light" === document.documentElement.getAttribute("data-theme")        ? "#363636"        : "#F7F7FA";    [      { id: "posts-chart", options: postsOption, instance: postsChart },      { id: "tags-chart", options: tagsOption, instance: tagsChart },      {        id: "categories-chart",        options: categoriesOption,        instance: categoriesChart,      },    ].forEach((t) => {      if (document.getElementById(t.id)) {        let o = { ...t.options };        (o.textStyle.color = e),          (o.title.textStyle.color = e),          o.xAxis &&            ((o.xAxis.axisLine.lineStyle.color = e),            (o.yAxis.axisLine.lineStyle.color = e)),          o.legend && (o.legend.textStyle.color = e),          t.instance.setOption(o);      }    });  },  navFn = { switchDarkMode: switchDarkMode };function RemoveRewardMask() {  $(".reward-main").attr("style", "display: none"),    $("#quit-box").attr("style", "display: none");}function AddRewardMask() {  $(".reward-main").attr("style", "display: flex"),    $("#quit-box").attr("style", "display: flex");}function travelling() {  fetch("https://moments.zhxingzhi.com/randomfriend")    .then((e) => e.json())    .then((e) => {      var t = e.link,        o =          "点击前往按钮进入随机一个友链，不保证跳转网站的安全性和可用性。本次随机到的是本站友链：「" +          e.name +          "」";      document.styleSheets[0].addRule(        ":root",        "--xingzhi-snackbar-time:8000ms!important"      ),        Snackbar.show({          text: o,          duration: 8e3,          pos: "top-center",          actionText: "前往",          onActionClick: function (e) {            $(e).css("opacity", 0), window.open(t, "_blank");          },        });    });}function toforeverblog() {  Snackbar.show({    text: "点击前往按钮进入「十年之约」项目中的成员博客，不保证跳转网站的安全性和可用性",    duration: 8e3,    pos: "top-center",    actionText: "前往",    onActionClick: function (e) {      $(e).css("opacity", 0),        window.open(link, "https://www.foreverblog.cn/go.html");    },  });}function totraveling() {  btf.snackbarShow(    "即将跳转到「开往」项目的成员博客，不保证跳转网站的安全性和可用性",    !1,    5e3  ),    setTimeout(function () {      window.open("https://www.travellings.cn/go.html");    }, "5000");}function removeLoading() {  setTimeout(function () {    preloader.endLoading();  }, 3e3);}function addFriendLink() {  var e = document.getElementsByClassName("el-textarea__inner")[0];  let t = document.createEvent("HTMLEvents");  t.initEvent("input", !0, !0),    (e.value =      "昵称（请勿包含博客等字样）：\n网站地址（要求博客地址，请勿提交个人主页）：\n头像图片url（请提供尽可能清晰的图片，我会上传到我自己的图床）：\n描述：\n类型（生活类或者技术类）：）"),    e.dispatchEvent(t),    xingzhi.scrollTo("友情链接申请"),    e.focus(),    e.setSelectionRange(-1, -1);}function getArrayItems(e, t) {  var o = [];  for (var n in e) o.push(e[n]);  for (var a = [], i = 0; i < t && o.length > 0; i++) {    var r = Math.floor(Math.random() * o.length);    (a[i] = o[r]), o.splice(r, 1);  }  return a;}function bindTodayCardHoverEvent() {  $(".topGroup").hover(    function () {},    function () {      (hoverOnCommentBarrage = !1),        document.getElementById("todayCard").classList.remove("hide"),        (document.getElementById("todayCard").style.zIndex = 1);    }  );}function owoBig() {  new MutationObserver((e) => {    for (let t of e)      if ("childList" === t.type)        for (let e of t.addedNodes)          if (e.classList && e.classList.contains("OwO-body")) {            let t = e,              o = "",              n = !0,              a = document.createElement("div");            (a.id = "owo-big"),              document.querySelector("body").appendChild(a),              t.addEventListener("contextmenu", (e) => e.preventDefault()),              t.addEventListener("mouseover", (e) => {                "LI" === e.target.tagName &&                  n &&                  ((n = !1),                  (o = setTimeout(() => {                    let t = 3 * e.target.clientWidth,                      o = e.x - e.offsetX - (t - e.target.clientWidth) / 2,                      n = e.y - e.offsetY;                    (a.style.height = 3 * e.target.clientHeight + "px"),                      (a.style.width = t + "px"),                      (a.style.left = o + "px"),                      (a.style.top = n + "px"),                      (a.style.display = "flex"),                      (a.innerHTML = `<img src="${                        e.target.querySelector("img").src                      }">`);                  }, 300)));              }),              t.addEventListener("mouseout", (e) => {                (a.style.display = "none"), (n = !0), clearTimeout(o);              });          }  }).observe(document.getElementById("post-comment"), {    childList: !0,    subtree: !0,  });}function initObserver() {  var e = document.getElementById("post-comment"),    t = document.getElementById("pagination");  e &&    t &&    new IntersectionObserver(function (e) {      e.forEach(function (e) {        e.isIntersecting          ? (t.classList.add("show-window"),            (document.querySelector(".comment-barrage").style.bottom =              "-200px"))          : (t.classList.remove("show-window"),            (document.querySelector(".comment-barrage").style.bottom = "0px"));      });    }).observe(e);}function percent() {  let e = document.documentElement.scrollTop || window.pageYOffset,    t =      Math.max(        document.body.scrollHeight,        document.documentElement.scrollHeight,        document.body.offsetHeight,        document.documentElement.offsetHeight,        document.body.clientHeight,        document.documentElement.clientHeight      ) - document.documentElement.clientHeight,    o = Math.round((e / t) * 100),    n = document.querySelector("#percent");  var a = window.scrollY + document.documentElement.clientHeight;  (document.getElementById("post-comment") || document.getElementById("footer"))    .offsetTop < a || o > 90    ? (document.querySelector("#nav-totop").classList.add("long"),      (n.innerHTML = "返回顶部"))    : (document.querySelector("#nav-totop").classList.remove("long"),      o >= 0 && (n.innerHTML = o)),    (endresult = t - e),    endresult < 100      ? $(".needEndHide").addClass("hide")      : $(".needEndHide").removeClass("hide"),    (window.onscroll = percent);}function addKeyShotListener() {  $(window).off("keydown"),    $(window).off("keyup"),    $(window).on("keydown", keyDownEvent),    $(window).on("keyup", keyUpEvent);}function keyDownEvent(e) {  if (    (27 == e.keyCode &&      (xingzhi.hideLoading(), xingzhi.hideConsole(), rm.hideRightMenu()),    xingzhi_keyboard && e.shiftKey && !xingzhi_intype)  ) {    if (      (16 == e.keyCode &&        document.querySelector("#keyboard-tips").classList.add("show"),      75 == e.keyCode)    )      return xingzhi.keyboardToggle(), !1;    if (65 == e.keyCode) return xingzhi.showConsole(), !1;    if (77 == e.keyCode) return xingzhi.musicToggle(), !1;    if (82 == e.keyCode) return toRandomPost(), !1;    if (72 == e.keyCode) return pjax.loadUrl("/"), !1;    if (68 == e.keyCode) return rm.switchDarkMode(), !1;    if (70 == e.keyCode) return pjax.loadUrl("/moments/"), !1;    if (76 == e.keyCode) return pjax.loadUrl("/link/"), !1;    if (80 == e.keyCode) return pjax.loadUrl("/about/"), !1;    if (84 == e.keyCode) return pjax.loadUrl("/tlink/"), !1;  }}function keyUpEvent(e) {  16 == e.keyCode &&    document.querySelector("#keyboard-tips").classList.remove("show");}function checkUrlAndAddHideBanner() {  var e = window.location.href;  if (/\/page\//.test(e)) {    var t = document.getElementById("recent-top-post-group"),      o = document.getElementById("bbTimeList");    t && (t.classList.add("more-page"), o.classList.add("more-page"));  }}function open_all_tags() {  document    .querySelectorAll(".card-allinfo .card-tag-cloud")    .forEach(function (e) {      e.classList.add("all-tags");    });  var e = document.getElementById("more-tags-btn");  e && e.parentNode.removeChild(e);}function listenToPageInputPress() {  var e = document.getElementById("toPageText"),    o = document.getElementById("toPageButton");  if (e) {    var a = document.querySelectorAll(".page-number");    (t = a[a.length - 1].innerHTML), (n = +t);    var i = document.getElementById("myElementId");    if (1 == n) (i = document.querySelector(".toPageGroup")) && i.remove();    e.addEventListener("keydown", (e) => {      13 === e.keyCode && (xingzhi.toPage(), pjax.loadUrl(o.href));    }),      e.addEventListener("input", function () {        "" === e.value || "0" === e.value          ? o.classList.remove("haveValue")          : o.classList.add("haveValue");        var t = document.querySelectorAll(".page-number"),          n = +t[t.length - 1].innerHTML;        +document.getElementById("toPageText").value > n && (e.value = n);      });  }}function initBlog() {  (window.commentBarrageInitialized = !1),    coverColor(),    addRightMenuClickEvent(),    navTitle(),    percent(),    listenToPageInputPress(),    xingzhi.topPostScroll(),    xingzhi.sayhi(),    xingzhi.addTag(),    xingzhi.stopImgRightDrag(),    xingzhi.addFriendLinksInFooter(),    xingzhi.addPowerLinksInPostRightSide(),    xingzhi.qrcodeCreate(),    xingzhi.hidecookie(),    xingzhi.onlyHome(),    xingzhi.addNavBackgroundInit(),    xingzhi.initIndexEssay(),    xingzhi.chageTimeFormate(),    xingzhi.reflashEssayWaterFall(),    xingzhi.darkModeStatus(),    xingzhi.categoriesBarActive(),    xingzhi.initThemeColor(),    xingzhi.hideLoading(),    xingzhi.tagPageActive(),    xingzhi.removeBodyPaceClass(),    xingzhi.lottieAnimation("footer_mini_logo"),    xingzhi.lottieAnimation("lottie_avatar"),    xingzhiGPT.aiExplanation(),    AIEngine(),    addAIToggleListener(),    initObserver(),    checkUrlAndAddHideBanner(),    bindTodayCardHoverEvent(),    initializeCommentBarrage();}document.addEventListener(  "touchstart",  (e) => {    RemoveRewardMask();  },  !1),  $(document)    .unbind("keydown")    .bind("keydown", function (e) {      if ((e.ctrlKey || e.metaKey) && 67 == e.keyCode && "" != selectTextNow)        return (          btf.snackbarShow("复制成功，复制和转载请标注本文地址"),          rm.rightmenuCopyText(selectTextNow),          !1        );    }),  document.addEventListener(    "scroll",    btf.throttle(function () {      xingzhi.initThemeColor();    }, 200)  ),  navigator.serviceWorker.getRegistrations().then(function (e) {    for (let t of e) t.unregister();  }),  (window.onkeydown = function (e) {    123 === e.keyCode &&      btf.snackbarShow("开发者模式已打开，请遵循GPL协议", !1, 3e3);  }),  window.addEventListener("resize", function () {    document.querySelector("#waterfall") && xingzhi.reflashEssayWaterFall();  }),  document.getElementById("post-comment") && owoBig(),  "true" == localStorage.getItem("keyboardToggle")    ? (document.querySelector("#consoleKeyboard").classList.add("on"),      (xingzhi_keyboard = !0))    : (document.querySelector("#consoleKeyboard").classList.remove("on"),      (xingzhi_keyboard = !1)),  addKeyShotListener(),  $("input").focus(function () {    xingzhi_intype = !0;  }),  $("textarea").focus(function () {    xingzhi_intype = !0;  }),  $("input").focusout(function () {    xingzhi_intype = !1;  }),  $("textarea").focusout(function () {    xingzhi_intype = !1;  }),  (window.onfocus = function () {    document.querySelector("#keyboard-tips").classList.remove("show");  }),  document.addEventListener("pjax:click", function () {    console.clear(),      Pace.restart(),      xingzhi.showLoading(),      $(window).prop("keydown", null).off("keydown");  });]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/categorybar.js"/>
      <url>/js/categorybar.js</url>
      
        <content type="html"><![CDATA[categoriesBarActive()topCategoriesBarScroll()//分类条function categoriesBarActive(){  var urlinfo = window.location.pathname;  urlinfo = decodeURIComponent(urlinfo)  console.log(urlinfo);  //判断是否是首页  if (urlinfo == '/'){    if (document.querySelector('#category-bar')){      document.getElementById('category-bar-home').classList.add("select")    }  }else {    // 验证是否是分类链接    var pattern = /\/categories\/.*?\//;    var patbool = pattern.test(urlinfo);    console.log(patbool);    // 获取当前的分类    if (patbool) {      var valuegroup = urlinfo.split("/");      console.log(valuegroup[2]);      // 获取当前分类      var nowCategorie = valuegroup[2];      if (document.querySelector('#category-bar')){        document.getElementById(nowCategorie).classList.add("select");      }    }  }  }//鼠标控制横向滚动function topCategoriesBarScroll(){  if (document.getElementById("category-bar-items")){    let xscroll = document.getElementById("category-bar-items");  xscroll.addEventListener("mousewheel", function (e) {    //计算鼠标滚轮滚动的距离    let v = -e.wheelDelta / 2;    xscroll.scrollLeft += v;    //阻止浏览器默认方法    e.preventDefault();}, false);  }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/hometop.js"/>
      <url>/js/hometop.js</url>
      
        <content type="html"><![CDATA[var bywind = {    hideTodayCard: function() {        document.getElementById("todayCard") && document.getElementById("todayCard").classList.add("hide")    }}$(".topGroup").hover((function() {}), (function() {        document.getElementById("todayCard").classList.remove("hide"),        document.getElementById("todayCard").style.zIndex = 1    }))]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/rightmenu.js"/>
      <url>/js/rightmenu.js</url>
      
        <content type="html"><![CDATA[let rm = {};rm.stopdragimg = $("img"),rm.stopdragimg.on("dragstart", (function() {    return !1})),rm.showRightMenu = function(e, n=0, t=0) {    let o = $("#rightMenu");    o.css("top", n + "px").css("left", t + "px"),    e ? (o.show(), stopMaskScroll()) : o.hide()},rm.hideRightMenu = function() {    rm.showRightMenu(!1),    $("#rightmenu-mask").attr("style", "display: none")};let rmWidth = $("#rightMenu").width(),    rmHeight = $("#rightMenu").height();rm.reloadrmSize = function() {    rmWidth = $("#rightMenu").width(),    rmHeight = $("#rightMenu").height()};let domhref = "",    domImgSrc = "",    globalEvent = null;function imageToBlob(e) {    const n = new Image,        t = document.createElement("canvas"),        o = t.getContext("2d");    return n.crossOrigin = "", n.src = e, new Promise((e => {        n.onload = function() {            t.width = this.naturalWidth,            t.height = this.naturalHeight,            o.drawImage(this, 0, 0),            t.toBlob((n => {                e(n)            }), "image/png", .75)        }    }))}async function copyImage(e) {    const n = await imageToBlob(e),        t = new ClipboardItem({            "image/png": n        });    navigator.clipboard.write([t])}function stopMaskScroll() {    if (document.getElementById("rightmenu-mask")) {        document.getElementById("rightmenu-mask").addEventListener("mousewheel", (function(e) {            rm.hideRightMenu()        }), !1)    }    if (document.getElementById("rightMenu")) {        document.getElementById("rightMenu").addEventListener("mousewheel", (function(e) {            rm.hideRightMenu()        }), !1)    }}window.oncontextmenu = function(e) {    if (document.body.clientWidth > 768) {        let n = e.clientX + 10,            t = e.clientY,            o = $(".rightMenuOther"),            i = $(".rightMenuPlugin"),            c = $("#menu-copytext"),            r = $("#menu-pastetext"),            m = $("#menu-commenttext"),            a = $("#menu-newwindow"),            u = $("#menu-copylink"),            l = $("#menu-copyimg"),            h = $("#menu-downloadimg"),            d = $("#menu-search"),            s = $("#menu-searchBaidu"),            g = $("#menu-music-toggle"),            w = $("#menu-music-back"),            f = $("#menu-music-forward"),            p = $("#menu-music-playlist"),            k = $("#menu-music-copyMusicName"),            y = e.target.href,            M = e.target.currentSrc,            b = !1;        return o.show(), globalEvent = e, selectTextNow && window.getSelection() ? (b = !0, c.show(), m.show(), d.show(), s.show()) : (c.hide(), m.hide(), s.hide(), d.hide()), y ? (b = !0, a.show(), u.show(), domhref = y) : (a.hide(), u.hide()), M ? (b = !0, l.show(), h.show(), domImgSrc = M) : (l.hide(), h.hide()), "input" === e.target.tagName.toLowerCase() || "textarea" === e.target.tagName.toLowerCase() ? (console.log("这是一个输入框"), b = !0, r.show()) : r.hide(), "METING-JS" == e.target.nodeName ? (console.log("这是一个音乐"), b = !0, g.show(), w.show(), f.show(), p.show(), k.show()) : (g.hide(), w.hide(), f.hide(), p.hide(), k.hide()), b ? (o.hide(), i.show()) : i.hide(), rm.reloadrmSize(), n + rmWidth > window.innerWidth && (n -= rmWidth + 10), t + rmHeight > window.innerHeight && (t -= t + rmHeight - window.innerHeight), rm.showRightMenu(!0, t, n), $("#rightmenu-mask").attr("style", "display: flex"), !1    }},rm.downloadimging = !1,rm.writeClipImg = function(e) {    const n = "localhost" === window.location.hostname || "127.0.0.1" === window.location.hostname ? 0 : 1e4;    console.log("按下复制"),    rm.hideRightMenu(),    btf.snackbarShow("正在下载中，请稍后", !1, n),    0 == rm.downloadimging && (rm.downloadimging = !0, setTimeout((function() {        copyImage(e),        btf.snackbarShow("复制成功！图片已添加盲水印，请遵守版权协议"),        rm.downloadimging = !1    }), "${lazyTime}"))},rm.switchDarkMode = function() {    navFn.switchDarkMode(),    rm.hideRightMenu()},rm.copyUrl = function(e) {    $("body").after("<input id='copyVal'></input>");    var n = e,        t = document.getElementById("copyVal");    t.value = n,    t.select(),    t.setSelectionRange(0, t.value.length),    document.execCommand("copy"),    $("#copyVal").remove()},rm.rightmenuCopyText = function(e) {    navigator.clipboard && navigator.clipboard.writeText(e),    rm.hideRightMenu()},rm.copyPageUrl = function() {    var e = window.location.href;    rm.copyUrl(e),    btf.snackbarShow("复制本页链接地址成功", !1, 2e3),    rm.hideRightMenu()},rm.sharePage = function() {    window;    rm.copyUrl(url),    btf.snackbarShow("复制本页链接地址成功", !1, 2e3),    rm.hideRightMenu()};var selectTextNow = "";function selceText() {    var e;    e = document.selection ? document.selection.createRange().text : window.getSelection() + "",    selectTextNow = e || ""}function replaceAll(e, n, t) {    return e.split(n).join(t)}function addRightMenuClickEvent() {    $("#menu-backward").on("click", (function() {        window.history.back(),        rm.hideRightMenu()    })),    $("#menu-forward").on("click", (function() {        window.history.forward(),        rm.hideRightMenu()    })),    $("#menu-refresh").on("click", (function() {        window.location.reload()    })),    $("#menu-top").on("click", (function() {        btf.scrollToDest(0, 500),        rm.hideRightMenu()    })),    $(".menu-link").on("click", rm.hideRightMenu),    $("#menu-darkmode").prop("onclick", null).off("click"),    $("#menu-darkmode").on("click", rm.switchDarkMode),    $("#menu-home").on("click", (function() {        window.location.href = window.location.origin    })),    $("#menu-randomPost").on("click", (function() {        toRandomPost()    })),    $("#menu-commentBarrage").prop("onclick", null).off("click"),    $("#menu-commentBarrage").on("click", xingzhi.switchCommentBarrage),    $("#rightmenu-mask").on("click", rm.hideRightMenu),    $("#rightmenu-mask").contextmenu((function() {        return rm.hideRightMenu(), !1    })),    $("#menu-translate").on("click", (function() {        rm.hideRightMenu(),        translateInitialization()    })),    $("#menu-copy").on("click", rm.copyPageUrl),    $("#menu-pastetext").on("click", rm.pasteText),    $("#menu-copytext").on("click", (function() {        rm.rightmenuCopyText(selectTextNow),        btf.snackbarShow("复制成功，复制和转载请标注本文地址")    })),    $("#menu-commenttext").on("click", (function() {        rm.rightMenuCommentText(selectTextNow)    })),    $("#menu-newwindow").on("click", (function() {        window.open(domhref),        rm.hideRightMenu()    })),    $("#menu-copylink").on("click", rm.copyLink),    $("#menu-downloadimg").on("click", (function() {        xingzhi.downloadImage(domImgSrc, "zhxingzhi")    })),    $("#menu-copyimg").on("click", (function() {        rm.writeClipImg(domImgSrc)    })),    $("#menu-searchBaidu").on("click", rm.searchBaidu),    $("#menu-music-toggle").on("click", xingzhi.musicToggle),    $("#menu-music-back").on("click", xingzhi.musicSkipBack),    $("#menu-music-forward").on("click", xingzhi.musicSkipForward),    $("#menu-music-copyMusicName").on("click", (function() {        rm.rightmenuCopyText(xingzhi.musicGetName()),        btf.snackbarShow("复制歌曲名称成功", !1, 3e3)    }))}document.onmouseup = document.ondbclick = selceText,rm.readClipboard = function() {    navigator.clipboard && navigator.clipboard.readText().then((e => rm.insertAtCaret(globalEvent.target, e)))},rm.insertAtCaret = function(e, n) {    const t = e.selectionStart,        o = e.selectionEnd;    if (document.selection)        e.focus(),        document.selection.createRange().text = n,        e.focus();    else if (t || "0" == t) {        var i = e.scrollTop;        e.value = e.value.substring(0, t) + n + e.value.substring(o, e.value.length),        e.focus(),        e.selectionStart = t + n.length,        e.selectionEnd = t + n.length,        e.scrollTop = i    } else        e.value += n,        e.focus()},rm.pasteText = function() {    rm.readClipboard();    rm.hideRightMenu()},rm.rightMenuCommentText = function(e) {    rm.hideRightMenu();    var n = document.getElementsByClassName("el-textarea__inner")[0];    let t = document.createEvent("HTMLEvents");    t.initEvent("input", !0, !0);    let o = replaceAll(e, "\n", "\n> ");    n.value = "> " + o + "\n\n",    n.dispatchEvent(t);    var i = document.querySelector("#post-comment").offsetTop;    window.scrollTo(0, i - 80),    n.focus(),    n.setSelectionRange(-1, -1),    document.getElementById("comment-tips") && document.getElementById("comment-tips").classList.add("show")},rm.searchBaidu = function() {    btf.snackbarShow("即将跳转到百度搜索", !1, 2e3),    setTimeout((function() {        window.open("https://www.baidu.com/s?wd=" + selectTextNow)    }), "2000"),    rm.hideRightMenu()},rm.copyLink = function() {    rm.rightmenuCopyText(domhref),    btf.snackbarShow("已复制链接地址")};]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/xingzhi.js"/>
      <url>/js/xingzhi.js</url>
      
        <content type="html"><![CDATA[let xingzhi_cookiesTime = null,    xingzhi_musicPlaying = !1,    xingzhi_keyboard = !1,    xingzhi_intype = !1,    xingzhigpt = null,    lastSayHello = "";var xingzhi = {    darkModeStatus: function() {        "light" == ("dark" === document.documentElement.getAttribute("data-theme") ? "dark" : "light") ? $(".menu-darkmode-text").text("深色模式") : $(".menu-darkmode-text").text("浅色模式")    },    initIndexEssay: function() {        if (document.querySelector("#bber-talk"))            new Swiper(".swiper-container", {                direction: "vertical",                loop: !0,                autoplay: {                    delay: 3e3,                    pauseOnMouseEnter: !0                }            })    },    onlyHome: function() {        var e = window.location.pathname;        "/" == (e = decodeURIComponent(e)) ? $(".only-home").attr("style", "display: flex") : $(".only-home").attr("style", "display: none")    },    is_Post: function() {        return window.location.href.indexOf("/p/") >= 0    },    addNavBackgroundInit: function() {        var e = 0,            t = 0;        document.body && (e = document.body.scrollTop),        document.documentElement && (t = document.documentElement.scrollTop),        0 != (e - t > 0 ? e : t) && (document.getElementById("page-header").classList.add("nav-fixed"), document.getElementById("page-header").classList.add("nav-visible"), $("#cookies-window").hide())    },    tagPageActive: function() {        var e = window.location.pathname;        if (/\/tags\/.*?\//.test(e = decodeURIComponent(e))) {            var t = e.split("/")[2];            if (document.querySelector("#tag-page-tags")) {                $("a").removeClass("select");                var o = document.getElementById(t);                o && (o.classList.add("select"), o.style.order = "-1")            }        }    },    categoriesBarActive: function() {        document.querySelector("#category-bar") && $(".category-bar-item").removeClass("select");        var e = window.location.pathname;        if ("/" == (e = decodeURIComponent(e)))            document.querySelector("#category-bar") && document.getElementById("category-bar-home").classList.add("select");        else {            if (/\/categories\/.*?\//.test(e)) {                var t = e.split("/")[2];                if (document.querySelector("#category-bar")) {                    var o = document.getElementById(t);                    o && (o.classList.add("select"), o.style.order = "-1")                }            }        }    },    addFriendLinksInFooter: function() {        fetch("/zhxingzhi/friendlink.json").then((e => e.json())).then((e => {            var t = [],                o = -1;            for (const n of e) {                const e = n.link_list;                for (let n = 0; n < Math.min(e.length, 1); n++) {                    let n = Math.floor(Math.random() * e.length);                    for (; n === o && e.length > 1 || "张洪xingzhi" === e[n].name;)                        n = Math.floor(Math.random() * e.length);                    o = n,                    t.push({                        name: e[n].name,                        link: e[n].link                    }),                    e.splice(n, 1)                }            }            t.pop();            var n = "";            for (let e = 0; e < t.length; ++e) {                var a = t[e];                n += `<a class='footer-item' href='${a.link}'  target="_blank" rel="noopener nofollow">${a.name}</a>`            }            n += "<a class='footer-item' href='/link/'>更多</a>",            document.getElementById("friend-links-in-footer").innerHTML = n        }))    },    stopImgRightDrag: function() {        $("img").on("dragstart", (function() {            return !1        }))    },    topPostScroll: function() {        if (document.getElementById("recent-post-top")) {            let e = document.getElementById("recent-post-top");            e.addEventListener("mousewheel", (function(t) {                e.scrollLeft += -t.wheelDelta / 2,                document.body.clientWidth < 1300 && t.preventDefault()            }), !1)        }    },    sayhi: function() {        document.querySelector("#author-info__sayhi") && (document.getElementById("author-info__sayhi").innerHTML = getTimeState())    },    addTag: function() {        document.querySelector(".xingzhi-tag-new") && $(".xingzhi-tag-new").append('<sup class="xingzhi-tag xingzhi-tag-new-view">N</sup>'),        document.querySelector(".xingzhi-tag-hot") && $(".xingzhi-tag-hot").append('<sup class="xingzhi-tag xingzhi-tag-hot-view">H</sup>')    },    qrcodeCreate: function() {        if (document.getElementById("qrcode")) {            document.getElementById("qrcode").innerHTML = "";            new QRCode(document.getElementById("qrcode"), {                text: window.location.href,                width: 250,                height: 250,                colorDark: "#000",                colorLight: "#ffffff",                correctLevel: QRCode.CorrectLevel.H            })        }    },    reflashEssayWaterFall: function() {        document.querySelector("#waterfall") && setTimeout((function() {            waterfall("#waterfall"),            document.getElementById("waterfall").classList.add("show")        }), 500)    },    chageTimeFormate: function() {        for (var e = document.getElementsByTagName("time"), t = 0; t < e.length; t++) {            var o,                n = e[t].getAttribute("datetime"),                a = new Date(n),                l = (new Date).getTime() - a.getTime(),                i = Math.floor(l / 864e5);            o = 0 === i ? "最近" : 1 === i ? "昨天" : 2 === i ? "前天" : i <= 7 ? i + "天前" : a.getFullYear() !== (new Date).getFullYear() ? a.getFullYear() + "/" + (a.getMonth() + 1) + "/" + a.getDate() : a.getMonth() + 1 + "/" + a.getDate(),            e[t].textContent = o        }    },    downloadImage: function(e, t) {        rm.hideRightMenu(),        0 == rm.downloadimging ? (rm.downloadimging = !0, btf.snackbarShow("正在下载中，请稍后", !1, 1e4), setTimeout((function() {            let o = new Image;            o.setAttribute("crossOrigin", "anonymous"),            o.onload = function() {                let e = document.createElement("canvas");                e.width = o.width,                e.height = o.height,                e.getContext("2d").drawImage(o, 0, 0, o.width, o.height);                let n = e.toDataURL("image/png"),                    a = document.createElement("a"),                    l = new MouseEvent("click");                a.download = t || "photo",                a.href = n,                a.dispatchEvent(l)            },            o.src = e,            btf.snackbarShow("图片已添加盲水印，请遵守版权协议"),            rm.downloadimging = !1        }), "10000")) : btf.snackbarShow("有正在进行中的下载，请稍后再试")    },    switchCommentBarrage: function() {        document.querySelector(".comment-barrage") && ($(".comment-barrage").is(":visible") ? ($(".comment-barrage").hide(), $(".menu-commentBarrage-text").text("显示热评"), document.querySelector("#consoleCommentBarrage").classList.remove("on"), localStorage.setItem("commentBarrageSwitch", "false")) : $(".comment-barrage").is(":hidden") && ($(".comment-barrage").show(), $(".menu-commentBarrage-text").text("关闭热评"), document.querySelector("#consoleCommentBarrage").classList.add("on"), localStorage.removeItem("commentBarrageSwitch"))),        rm.hideRightMenu()    },    hidecookie: function() {        xingzhi_cookiesTime = setTimeout((() => {            document.getElementById("cookies-window").classList.add("cw-hide"),            setTimeout((() => {                $("#cookies-window").hide()            }), 1e3)        }), 3e3)    },    hideTodayCard: function() {        document.getElementById("todayCard") && document.getElementById("todayCard").classList.add("hide")    },    changeThemeColor: function(e) {        null !== document.querySelector('meta[name="theme-color"]') && (document.querySelector('meta[name="theme-color"]').setAttribute("content", e), document.querySelector('meta[name="apple-mobile-web-app-status-bar-style"]').setAttribute("content", e))    },    initThemeColor: function() {        const e = window.scrollY || document.documentElement.scrollTop;        if (xingzhi.is_Post()) {            if (e > 0) {                let e = getComputedStyle(document.documentElement).getPropertyValue("--xingzhi-card-bg");                xingzhi.changeThemeColor(e)            } else if (0 === e) {                let e = getComputedStyle(document.documentElement).getPropertyValue("--xingzhi-main");                xingzhi.changeThemeColor(e)            }        } else if (e > 0) {            let e = getComputedStyle(document.documentElement).getPropertyValue("--xingzhi-card-bg");            xingzhi.changeThemeColor(e)        } else if (0 === e) {            let e = getComputedStyle(document.documentElement).getPropertyValue("--xingzhi-background");            xingzhi.changeThemeColor(e)        }    },    jumpTo: function(e) {        $(document).ready((function() {            $("html,body").animate({                scrollTop: $(e).eq(i).offset().top            }, 500)        }))    },    showLoading: function() {        document.querySelector("#loading-box").classList.remove("loaded");        let e = getComputedStyle(document.documentElement).getPropertyValue("--xingzhi-card-bg");        xingzhi.changeThemeColor(e)    },    hideLoading: function() {        document.querySelector("#loading-box").classList.add("loaded"),        xingzhiGPT.aiExplanation()    },    musicToggle: function() {        xingzhi_musicPlaying ? (document.querySelector("#nav-music").classList.remove("playing"), document.getElementById("menu-music-toggle").innerHTML = '<i class="xingzhifont icon-play-fill"></i><span>播放音乐</span>', document.getElementById("nav-music-hoverTips").innerHTML = "音乐已暂停", document.querySelector("#consoleMusic").classList.remove("on"), xingzhi_musicPlaying = !1) : (document.querySelector("#nav-music").classList.add("playing"), document.getElementById("menu-music-toggle").innerHTML = '<i class="xingzhifont icon-pause-fill"></i><span>暂停音乐</span>', document.querySelector("#consoleMusic").classList.add("on"), xingzhi_musicPlaying = !0),        document.querySelector("meting-js").aplayer.toggle(),        rm.hideRightMenu()    },    musicSkipBack: function() {        document.querySelector("meting-js").aplayer.skipBack(),        rm.hideRightMenu()    },    musicSkipForward: function() {        document.querySelector("meting-js").aplayer.skipForward(),        rm.hideRightMenu()    },    musicGetName: function() {        for (var e = $(".aplayer-title"), t = [], o = e.length - 1; o >= 0; o--)            t[o] = e[o].innerText;        return t[0]    },    showConsole: function() {        document.querySelector("#console").classList.add("show"),        xingzhi.initConsoleState()    },    hideConsole: function() {        document.querySelector("#console").classList.remove("show")    },    keyboardToggle: function() {        xingzhi_keyboard ? (xingzhi_keyboard = !1, document.querySelector("#consoleKeyboard").classList.remove("on"), localStorage.setItem("keyboardToggle", "false")) : (xingzhi_keyboard = !0, document.querySelector("#consoleKeyboard").classList.add("on"), localStorage.setItem("keyboardToggle", "true"))    },    scrollTo: function(e) {        const t = document.getElementById(e);        if (t) {            const e = t.getBoundingClientRect().top + window.pageYOffset - 80,                o = window.pageYOffset,                n = e - o;            let a = null;            window.requestAnimationFrame((function e(t) {                a || (a = t);                const l = t - a,                    i = (c = Math.min(l / 0, 1)) < .5 ? 2 * c * c : (4 - 2 * c) * c - 1;                var c;                window.scrollTo(0, o + n * i),                l < 600 && window.requestAnimationFrame(e)            }))        }    },    hideAsideBtn: () => {        const e = document.documentElement.classList;        e.contains("hide-aside") ? saveToLocal.set("aside-status", "show", 2) : saveToLocal.set("aside-status", "hide", 2),        e.toggle("hide-aside"),        e.contains("hide-aside") ? document.querySelector("#consoleHideAside").classList.add("on") : document.querySelector("#consoleHideAside").classList.remove("on")    },    initConsoleState: function() {        document.documentElement.classList.contains("hide-aside") ? document.querySelector("#consoleHideAside").classList.add("on") : document.querySelector("#consoleHideAside").classList.remove("on")    },    removeBodyPaceClass: function() {        $("body").removeClass(),        $("body").addClass("pace-done")    },    toPage: function() {        console.log("执行跳转");        var e = document.querySelectorAll(".page-number"),            t = parseInt(e[e.length - 1].innerHTML),            o = document.getElementById("toPageText"),            n = parseInt(o.value);        if (!isNaN(n) && n > 0 && "0" !== ("" + n)[0] && n <= t) {            var a,                l = window.location.href.replace(/\/page\/\d+\/$/, "/");            a = 1 === n ? l : l + (l.endsWith("/") ? "" : "/") + "page/" + n + "/",            document.getElementById("toPageButton").href = a        }    },    changeSayHelloText: function() {        const e = ["🤖️ 数码科技爱好者", "🔍 分享与热心帮助", "🏠 智能家居小能手", "🔨 设计开发一条龙", "🤝 专修交互与设计", "🏃 脚踏实地行动派", "🧱 团队小组发动机", "💢 壮汉人狠话不多"],            t = document.getElementById("author-info__sayhi");        let o = e[Math.floor(Math.random() * e.length)];        for (; o === lastSayHello;)            o = e[Math.floor(Math.random() * e.length)];        t.textContent = o,        lastSayHello = o    },    scrollCategoryBarToRight: function() {        var e,            t = document.getElementById("category-bar-items"),            o = document.getElementById("category-bar-next");        var n = t.clientWidth;        t && (t.scrollLeft + t.clientWidth >= t.scrollWidth - 8 ? t.scroll({            left: 0,            behavior: "smooth"        }) : t.scrollBy({            left: n,            behavior: "smooth"        }), t.addEventListener("scroll", (function n() {            clearTimeout(e),            e = setTimeout((function() {                o.style.transform = t.scrollLeft + t.clientWidth >= t.scrollWidth - 8 ? "rotate(180deg)" : "",                t.removeEventListener("scroll", n)            }), 150)        })))    },    addRandomCommentInfo: function() {        const e = `${adjectives[Math.floor(Math.random() * adjectives.length)]}${vegetablesAndFruits[Math.floor(Math.random() * vegetablesAndFruits.length)]}`;        !function() {            for (var t = ["#author", "input[name='comname']", "#inpName", "input[name='author']", "#ds-dialog-name", "#name", "input[name='nick']", "#comment_author"], o = ["#mail", "#email", "input[name='commail']", "#inpEmail", "input[name='email']", "#ds-dialog-email", "input[name='mail']", "#comment_email"], n = 0; n < t.length; n++) {                var a = document.querySelector(t[n]);                if (null != a) {                    a.value = e,                    a.dispatchEvent(new Event("input")),                    a.dispatchEvent(new Event("change"));                    break                }            }            for (var l = 0; l < o.length; l++) {                var i = document.querySelector(o[l]);                if (null != i) {                    i.value = "donotreply@zhxingzhi.com",                    i.dispatchEvent(new Event("input")),                    i.dispatchEvent(new Event("change"));                    break                }            }        }();        var t = document.getElementsByClassName("el-textarea__inner")[0];        t.focus(),        t.setSelectionRange(-1, -1)    },    addPowerLinksInPostRightSide: async function() {        const e = document.getElementById("power-star-image"),            t = document.getElementById("power-star"),            o = document.getElementById("power-star-title"),            n = document.getElementById("power-star-desc");        if (t && e && o && n)            try {                const a = await fetch("/zhxingzhi/powerlink.json"),                    l = await a.json(),                    i = xingzhi.getRandomInt(0, l[0].link_list.length),                    c = l[0].link_list[i];                e.style.backgroundImage = `url(${c.avatar + "_240w"})`,                t.href = c.link,                o.innerText = c.name,                n.innerText = c.descr            } catch (e) {}    },    getRandomInt: function(e, t) {        return Math.floor(Math.random() * (t - e)) + e    },    addCommentCount: function(e) {        var t = document.getElementsByClassName("comment-headline");        t.length > 0 && twikoo.getCommentsCount({            envId: "https://twikoo.zhxingzhi.com",            urls: [window.location.pathname],            includeReply: !0        }).then((function(o) {            for (var n = 0; n < t.length; n++) {                var a = t[n],                    l = a.getElementsByTagName("span")[0];                if (l) {                    var i = document.createElement("span");                    i.innerText = " (" + e + ")",                    a.insertBefore(i, l.nextSibling)                }            }        })).catch((function(e) {            console.error(e)        }))    },    lottieAnimation: function(e) {        var t = document.getElementById(e);        lottie.loadAnimation({            container: t,            renderer: "svg",            loop: !0,            autoplay: !0,            path: "/lottie/" + e + "/data.json"        })    }};// const adjectives = ["美丽的", "英俊的", "聪明的", "勇敢的", "可爱的", "慷慨的", "善良的", "可靠的", "开朗的", "成熟的", "稳重的", "真诚的", "幽默的", "豁达的", "有趣的", "活泼的", "优雅的", "敏捷的", "温柔的", "温暖的", "敬业的", "细心的", "耐心的", "深沉的", "朴素的", "含蓄的", "率直的", "开放的", "务实的", "坚强的", "自信的", "谦虚的", "文静的", "深刻的", "纯真的", "朝气蓬勃的", "慎重的", "大方的", "顽强的", "迷人的", "机智的", "善解人意的", "富有想象力的", "有魅力的", "独立的", "好奇的", "干净的", "宽容的", "尊重他人的", "体贴的", "守信的", "有耐性的", "有责任心的", "有担当的", "有远见的", "有智慧的", "有眼光的", "有冒险精神的", "有爱心的", "有同情心的", "喜欢思考的", "喜欢学习的", "具有批判性思维的", "善于表达的", "善于沟通的", "善于合作的", "善于领导的", "有激情的", "有幽默感的", "有思想的", "有个性的", "有正义感的", "有责任感的", "有创造力的", "有想象力的", "有艺术细胞的", "有团队精神的", "有协调能力的", "有决策能力的", "有组织能力的", "有学习能力的", "有执行能力的", "有分析能力的", "有逻辑思维的", "有创新能力的", "有专业素养的", "有商业头脑的"],//     vegetablesAndFruits = ["萝卜", "白菜", "芹菜", "生菜", "青椒", "辣椒", "茄子", "豆角", "黄瓜", "西红柿", "洋葱", "大蒜", "土豆", "南瓜", "豆腐", "韭菜", "花菜", "西兰花", "蘑菇", "金针菇", "苹果", "香蕉", "橙子", "柠檬", "猕猴桃", "草莓", "葡萄", "桃子", "杏子", "李子", "石榴", "西瓜", "哈密瓜", "蜜瓜", "樱桃", "蓝莓", "柿子", "橄榄", "柚子", "火龙果"];// $(document).ready((function() {//     initBlog()// })),// document.addEventListener("pjax:complete", (function() {//     xingzhiGPTIsRunning = !1,//     xingzhi_aiPostExplanation = "",//     aiTalkMode = !1,//     xingzhiGPTModel = "xingzhiGPT",//     initBlog()// })),// document.addEventListener("pjax:click", (function() {//     console.log("pjax:click"),//     xingzhiGPT_timeoutId && clearTimeout(xingzhiGPT_timeoutId),//     xingzhiGPT_observer && xingzhiGPT_observer.disconnect()// }));]]></content>
      
    </entry>
    
    
  
</search>
