<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>three.js中css3DObject的使用</title>
      <link href="/posts/d7bd4d5a.html"/>
      <url>/posts/d7bd4d5a.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>开发中我们有时候会需要用到在 3D 场景中显示一些文本，图片等等信息，因为文本或者图片信息是需要经常更改的或者说不好做成模型中的一部分的，所以我们一般需要将文本信息单独抽离出来，用一个方便操作的 dom 元素去替代</p><p>而 three.js 中的 CSS3DObject 就是用来干上面这件事的，他可以将一个 dom 元素渲染成为一个 3D 对象，这样的话，我们只需要修改这个 dom 对象的话就可以直接对场景中的 3D 对象进行操作了</p><h2 id="构建一个信息框"><a href="#构建一个信息框" class="headerlink" title="构建一个信息框"></a>构建一个信息框</h2><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><p>要创建一个 3d 信息框，我们需要一个 css3d 渲染器、一个用于放置渲染器渲染结果的容器、一个 dom 元素(用于构建 css3d 对象)、一个 css3d 对象</p><p>引入 three.js 和 css3d 相关的依赖，并初始化场景</p><p>这里假设将 css3D 渲染器的渲染内容放置到了一个 id 为 css3d-container 的 div 中</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="variable constant_">THREE</span> <span class="keyword">from</span> <span class="string">&quot;three&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">OrbitControls</span> &#125; <span class="keyword">from</span> <span class="string">&quot;three/examples/jsm/controls/OrbitControls.js&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  <span class="title class_">CSS3DObject</span>,</span><br><span class="line">  <span class="title class_">CSS3DRenderer</span>,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&quot;three/examples/jsm/renderers/CSS3DRenderer&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> scene = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Scene</span>();</span><br><span class="line"><span class="keyword">const</span> camera = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PerspectiveCamera</span>(</span><br><span class="line">  <span class="number">75</span>,</span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>,</span><br><span class="line">  <span class="number">0.1</span>,</span><br><span class="line">  <span class="number">1000</span></span><br><span class="line">);</span><br><span class="line">camera.<span class="property">position</span>.<span class="title function_">set</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">10</span>);</span><br><span class="line"><span class="keyword">const</span> renderer = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">WebGLRenderer</span>();</span><br><span class="line"><span class="keyword">const</span> css3dRenderer = <span class="keyword">new</span> <span class="title class_">CSS3DRenderer</span>();</span><br><span class="line">css3dRenderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>);</span><br><span class="line">renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>);</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;container&quot;</span>).<span class="title function_">appendChild</span>(renderer.<span class="property">domElement</span>);</span><br><span class="line"><span class="variable language_">document</span></span><br><span class="line">  .<span class="title function_">getElementById</span>(<span class="string">&quot;css3d-container&quot;</span>)</span><br><span class="line">  .<span class="title function_">appendChild</span>(css3dRenderer.<span class="property">domElement</span>);</span><br><span class="line">renderer.<span class="property">domElement</span>.<span class="property">style</span>.<span class="property">width</span> = <span class="string">&quot;100%&quot;</span>;</span><br><span class="line">renderer.<span class="property">domElement</span>.<span class="property">style</span>.<span class="property">height</span> = <span class="string">&quot;100%&quot;</span>;</span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;resize&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">//更新渲染器</span></span><br><span class="line">  renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>);</span><br><span class="line">  <span class="comment">//设置渲染器的像素比</span></span><br><span class="line">  renderer.<span class="title function_">setPixelRatio</span>(<span class="variable language_">window</span>.<span class="property">devicePixelRatio</span>);</span><br><span class="line">  css3dRenderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>);</span><br><span class="line">  camera.<span class="property">aspect</span> = <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>;</span><br><span class="line">  camera.<span class="title function_">updateProjectionMatrix</span>();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> orbitControls = <span class="keyword">new</span> <span class="title class_">OrbitControls</span>(camera, renderer.<span class="property">domElement</span>);</span><br><span class="line">orbitControls.<span class="property">enableDamping</span> = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;resize&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  camera.<span class="property">aspect</span> = <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>;</span><br><span class="line"></span><br><span class="line">  camera.<span class="title function_">updateProjectionMatrix</span>();</span><br><span class="line"></span><br><span class="line">  renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">render</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  renderer.<span class="title function_">render</span>(scene, camera);</span><br><span class="line">  css3dRenderer.<span class="title function_">render</span>(scene, camera);</span><br><span class="line">  orbitControls.<span class="title function_">update</span>();</span><br><span class="line">  <span class="title function_">requestAnimationFrame</span>(render);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="title function_">render</span>();</span><br></pre></td></tr></table></figure><p>创建一个创建 css3DObject 函数<br>调用下面这个函数，就会往场景中添加一个 css3DObject</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">createTag</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> element = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;div&quot;</span>);</span><br><span class="line">  element.<span class="property">className</span> = <span class="string">&quot;elementTag&quot;</span>;</span><br><span class="line">  element.<span class="property">innerHTML</span> = <span class="string">`</span></span><br><span class="line"><span class="string">      &lt;div class=&quot;elementContent&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;h3&gt;css3dTag&lt;/h3&gt;</span></span><br><span class="line"><span class="string">        &lt;p&gt;温度: 26摄氏度&lt;/p&gt;</span></span><br><span class="line"><span class="string">        &lt;p&gt;湿度: 60%&lt;/p&gt;</span></span><br><span class="line"><span class="string">      &lt;/div&gt;</span></span><br><span class="line"><span class="string">    `</span>;</span><br><span class="line">  <span class="keyword">const</span> cssObject3D = <span class="keyword">new</span> <span class="title class_">CSS3DObject</span>(element);</span><br><span class="line">  cssObject3D.<span class="property">position</span>.<span class="title function_">set</span>(<span class="number">0</span>, <span class="number">5</span>, -<span class="number">10</span>);</span><br><span class="line">  cssObject3D.<span class="property">scale</span>.<span class="title function_">set</span>(<span class="number">0.1</span>, <span class="number">0.1</span>, <span class="number">0.1</span>);</span><br><span class="line">  scene.<span class="title function_">add</span>(cssObject3D);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="dom-元素样式部分"><a href="#dom-元素样式部分" class="headerlink" title="dom 元素样式部分"></a>dom 元素样式部分</h3><p>上面我们写了一个构建 css3DObject 的函数，我们为这个 dom 元素和它的子元素添加了一系列类名，接下我我们为他们添加样式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#css3d-container</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: fixed;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">pointer-events</span>: none;</span><br><span class="line">  user-select: none;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">100</span>;</span><br><span class="line">  <span class="attribute">color</span>: white;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.elementTag</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.elementTag</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">1px</span>;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">127</span> <span class="number">177</span> <span class="number">255</span> / <span class="number">75%</span>);</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: -<span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">30deg</span>);</span><br><span class="line">  <span class="attribute">transform-origin</span>: <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.elementTag</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">127</span> <span class="number">177</span> <span class="number">255</span> / <span class="number">75%</span>);</span><br><span class="line">  <span class="attribute">bottom</span>: -<span class="number">65px</span>;</span><br><span class="line">  <span class="attribute">right</span>: -<span class="number">105px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.elementContent</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">20</span>, <span class="number">143</span>, <span class="number">221</span>, <span class="number">0.7</span>);</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">12px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">128</span>, <span class="number">255</span>, <span class="number">0.75</span>);</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="built_in">rgba</span>(<span class="number">127</span>, <span class="number">177</span>, <span class="number">255</span>, <span class="number">0.75</span>);</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#efefef</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.elementContent</span> <span class="selector-tag">h3</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: bold;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>到这里就大功告成了，我们运行代码，就可以看到效果了</p><h2 id="效果预览"><a href="#效果预览" class="headerlink" title="效果预览"></a>效果预览</h2><div id="preview"></div><script type="importmap">  {    "imports": {      "three": "https://unpkg.com/three@0.158.0/build/three.module.js",      "three/addons/": "https://unpkg.com/three@0.158.0/examples/jsm/"    }  }</script><style>    #preview {        width: 100%;        height: 400px;    }.elementTag {  position: relative;}.elementTag::before {  content: "";  position: absolute;  width: 100px;  height: 1px;  display: block;  background-color: rgb(127 177 255 / 75%);  bottom: 0;  right: -100px;  transform: rotate(30deg);  transform-origin: 0 0;}.elementTag::after {  content: "";  position: absolute;  width: 20px;  height: 20px;  border-radius: 50%;  display: block;  background-color: rgb(127 177 255 / 75%);  bottom: -65px;  right: -105px;}.elementContent {  background-color: rgba(20, 143, 221, 0.7);  box-shadow: 0 0 12px rgba(0, 128, 255, 0.75);  border: 1px solid rgba(127, 177, 255, 0.75);  padding: 20px;  color: #efefef;}.elementContent h3 {  font-size: 20px;  font-weight: bold;  margin-bottom: 15px;}</style><script type="module">import * as THREE from "three";import {OrbitControls} from "three/addons/controls/OrbitControls";import {CSS3DRenderer, CSS3DObject} from "three/addons/renderers/CSS3DRenderer";const scene = new THREE.Scene();const camera = new THREE.PerspectiveCamera(  75,  window.innerWidth / window.innerHeight,  0.1,  1000);camera.position.set(0, 0, 10);const renderer = new THREE.WebGLRenderer();const css3dRenderer = new CSS3DRenderer();const container = document.getElementById("preview");css3dRenderer.setSize(container.offsetWidth, container.offsetHeight);renderer.setSize(container.offsetWidth, container.offsetHeight);container.appendChild(renderer.domElement);container.appendChild(css3dRenderer.domElement);container.style.position = 'relative';renderer.domElement.style.width = '100%'renderer.domElement.style.height = '100%'css3dRenderer.domElement.style.position = 'absolute'css3dRenderer.domElement.style.left = '0'css3dRenderer.domElement.style.top = '0'css3dRenderer.domElement.style.pointerEvents = 'none'const resize = () => {  //更新渲染器  renderer.setSize(container.offsetWidth, container.offsetHeight);  css3dRenderer.setSize(container.offsetWidth, container.offsetHeight);  //设置渲染器的像素比  renderer.setPixelRatio(window.devicePixelRatio);  camera.aspect = window.innerWidth / window.innerHeight;  camera.updateProjectionMatrix();}window.addEventListener("resize", resize);const createTag = () => {  const element = document.createElement("div");  element.className = "elementTag";  element.innerHTML = `      <div class="elementContent">        <h3>css3dTag</h3>        <p>温度: 26摄氏度</p>        <p>湿度: 60%</p>      </div>    `;  const cssObject3D = new CSS3DObject(element);  cssObject3D.position.set(0, 5, -10);  cssObject3D.scale.set(0.1, 0.1, 0.1);  scene.add(cssObject3D);};createTag()const orbitControls = new OrbitControls(camera, renderer.domElement);orbitControls.enableDamping = true;const render = () => {  renderer.render(scene, camera);  css3dRenderer.render(scene, camera);  orbitControls.update();  requestAnimationFrame(render);};render();</script>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> three.js </tag>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>echarts图表网站</title>
      <link href="/posts/7dad8147.html"/>
      <url>/posts/7dad8147.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我们在前端开发中，经常要用到图表来实现数据可视化，但是想自己从 0 开始做一个好的图表是非常消耗时间的</p><p>在前阵子使用 ts 和 elementui 开发一个后台的时候，发现了这么一个集成 echarts 的图标的网站，里面有大量的 echarts 使用示例，能够帮助我们快速进行图表开发</p><p>在使用这个网站之前，你最好得有一定的 echarts 基础，不然里面很多配置项你都看不懂</p><a class="tag-Link" target="_blank" href="https://echarts.apache.org/zh/index.html" title="echarts官网">  <div class="tag-link-tips">  引用站外地址，不保证站点的可用性和安全性</div>  <div class="tag-link-bottom"><div class="tag-link-left"><i class="xingzhifont icon-link"></i></div><div class="tag-link-right">  <div class="tag-link-title">echarts官网</div>  <div class="tag-link-sitename">一个基于 JavaScript 的开源可视化图表库</div>  </div><i class="xingzhifont icon-arrow-right-s-line"></i></div></a><h2 id="网站详情"><a href="#网站详情" class="headerlink" title="网站详情"></a>网站详情</h2><p>  <a href="https://img.hoshinagi.top/post/iShot_2023-12-05_11.57.58.png" data-fancybox="images" data-caption="网站首页" class="fancybox">  <img src="https://img.hoshinagi.top/post/iShot_2023-12-05_11.57.58.png" data-lazy-src="https://img.hoshinagi.top/post/iShot_2023-12-05_11.57.58.png" alt="网站首页" class="entered">  </a>  <div class="img-alt is-center">网站首页</div>  </p>  <p>我们需要什么图表，就直接在上面找就好，点进去，它里面会包含图表的配置项和数据项等等，我们只需要将数据项更改为自己的数据项即可</p><p>  <a href="https://img.hoshinagi.top/post/iShot_2023-12-05_12.04.03.png" data-fancybox="images" data-caption="图表详情" class="fancybox">  <img src="https://img.hoshinagi.top/post/iShot_2023-12-05_12.04.03.png" data-lazy-src="https://img.hoshinagi.top/post/iShot_2023-12-05_12.04.03.png" alt="图表详情" class="entered">  </a>  <div class="img-alt is-center">图表详情</div>  </p>  <p>当然 echarts 官网也有很多示例，个人建议是，先看 echarts 官网的实例，如果官网的例子没有你需要的，再从上述网站里面找</p><h2 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h2><p>比如使用网站里的一个柱形图</p><h3 id="引入-echarts-依赖"><a href="#引入-echarts-依赖" class="headerlink" title="引入 echarts 依赖"></a>引入 echarts 依赖</h3><p>引入方式可以参考 echarts 官网，这里是直接通过 CDN 的方式引入</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/echarts@5.4.3/dist/echarts.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后构建一个图表容器，就比如一个 div</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;map&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后初始化图表，图表的配置项设置为拷贝过来的配置项</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> map = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;map&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> myChart = echarts.<span class="title function_">init</span>(map);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> option = &#123;</span><br><span class="line">  <span class="attr">backgroundColor</span>: <span class="string">&quot;#222&quot;</span>,</span><br><span class="line">  <span class="attr">title</span>: &#123;</span><br><span class="line">    <span class="attr">text</span>: <span class="string">&quot;单位:万&quot;</span>,</span><br><span class="line">    <span class="attr">left</span>: <span class="number">30</span>,</span><br><span class="line">    <span class="comment">// 文字颜色</span></span><br><span class="line">    <span class="attr">textStyle</span>: &#123;</span><br><span class="line">      <span class="attr">color</span>: <span class="string">&quot;#4c9bfd&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">color</span>: [<span class="string">&quot;#3398DB&quot;</span>],</span><br><span class="line">  <span class="attr">tooltip</span>: &#123;</span><br><span class="line">    <span class="attr">trigger</span>: <span class="string">&quot;axis&quot;</span>,</span><br><span class="line">    <span class="attr">axisPointer</span>: &#123;</span><br><span class="line">      <span class="comment">// 坐标轴指示器，坐标轴触发有效</span></span><br><span class="line">      <span class="attr">type</span>: <span class="string">&quot;shadow&quot;</span>, <span class="comment">// 默认为直线，可选为：&#x27;line&#x27; | &#x27;shadow&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">grid</span>: &#123;</span><br><span class="line">    <span class="attr">left</span>: <span class="string">&quot;3%&quot;</span>,</span><br><span class="line">    <span class="attr">right</span>: <span class="string">&quot;4%&quot;</span>,</span><br><span class="line">    <span class="attr">bottom</span>: <span class="string">&quot;3%&quot;</span>,</span><br><span class="line">    <span class="attr">containLabel</span>: <span class="literal">true</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">xAxis</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&quot;category&quot;</span>,</span><br><span class="line">      <span class="attr">data</span>: [<span class="string">&quot;1&quot;</span>, <span class="string">&quot;2&quot;</span>, <span class="string">&quot;3&quot;</span>, <span class="string">&quot;4&quot;</span>, <span class="string">&quot;5&quot;</span>, <span class="string">&quot;6&quot;</span>, <span class="string">&quot;7&quot;</span>, <span class="string">&quot;8&quot;</span>, <span class="string">&quot;9&quot;</span>, <span class="string">&quot;10&quot;</span>, <span class="string">&quot;11&quot;</span>, <span class="string">&quot;12&quot;</span>],</span><br><span class="line">      <span class="attr">axisTick</span>: &#123;</span><br><span class="line">        <span class="attr">alignWithLabel</span>: <span class="literal">true</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">//x底部文字</span></span><br><span class="line">      <span class="attr">axisLabel</span>: &#123;</span><br><span class="line">        <span class="attr">textStyle</span>: &#123;</span><br><span class="line">          <span class="attr">color</span>: <span class="string">&quot;#3398DB&quot;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">yAxis</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&quot;value&quot;</span>,</span><br><span class="line">      <span class="comment">//y右侧文字</span></span><br><span class="line">      <span class="attr">axisLabel</span>: &#123;</span><br><span class="line">        <span class="attr">textStyle</span>: &#123;</span><br><span class="line">          <span class="attr">color</span>: <span class="string">&quot;#3398DB&quot;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">// y轴的分割线</span></span><br><span class="line">      <span class="attr">splitLine</span>: &#123;</span><br><span class="line">        <span class="attr">show</span>: <span class="literal">false</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">series</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;收入统计&quot;</span>,</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&quot;bar&quot;</span>,</span><br><span class="line">      <span class="attr">barWidth</span>: <span class="string">&quot;15&quot;</span>,</span><br><span class="line">      <span class="attr">itemStyle</span>: &#123;</span><br><span class="line">        <span class="attr">color</span>: <span class="keyword">new</span> echarts.<span class="property">graphic</span>.<span class="title class_">LinearGradient</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, [</span><br><span class="line">          &#123; <span class="attr">offset</span>: <span class="number">0</span>, <span class="attr">color</span>: <span class="string">&quot;#00fffb&quot;</span> &#125;,</span><br><span class="line">          &#123; <span class="attr">offset</span>: <span class="number">1</span>, <span class="attr">color</span>: <span class="string">&quot;#0061ce&quot;</span> &#125;,</span><br><span class="line">        ]),</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">data</span>: [<span class="number">252</span>, <span class="number">307</span>, <span class="number">456</span>, <span class="number">578</span>, <span class="number">625</span>, <span class="number">600</span>, <span class="number">600</span>, <span class="number">660</span>, <span class="number">310</span>, <span class="number">260</span>, <span class="number">286</span>, <span class="number">410</span>].<span class="title function_">map</span>(</span><br><span class="line">        <span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">if</span> (item &lt; <span class="number">500</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> item;</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> &#123;</span><br><span class="line">              <span class="attr">value</span>: item,</span><br><span class="line">              <span class="attr">itemStyle</span>: &#123;</span><br><span class="line">                <span class="attr">color</span>: <span class="string">&quot;#254065&quot;</span>,</span><br><span class="line">                <span class="attr">opacity</span>: <span class="number">0.5</span>,</span><br><span class="line">              &#125;,</span><br><span class="line">            &#125;;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ),</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;收入统计&quot;</span>,</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&quot;line&quot;</span>,</span><br><span class="line">      <span class="attr">smooth</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">tooltip</span>: &#123;</span><br><span class="line">        <span class="attr">trigger</span>: <span class="string">&quot;axis&quot;</span>,</span><br><span class="line">        <span class="attr">axisPointer</span>: &#123;</span><br><span class="line">          <span class="comment">// 坐标轴指示器，坐标轴触发有效</span></span><br><span class="line">          <span class="attr">type</span>: <span class="string">&quot;line&quot;</span>, <span class="comment">// 默认为直线，可选为：&#x27;line&#x27; | &#x27;shadow&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">areaStyle</span>: &#123;</span><br><span class="line">        <span class="attr">opacity</span>: <span class="number">0.2</span>,</span><br><span class="line">        <span class="attr">color</span>: <span class="keyword">new</span> echarts.<span class="property">graphic</span>.<span class="title class_">LinearGradient</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">offset</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">color</span>: <span class="string">&quot;#36d9ab&quot;</span>,</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">offset</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">color</span>: <span class="string">&quot;#02137c&quot;</span>,</span><br><span class="line">          &#125;,</span><br><span class="line">        ]),</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">data</span>: [<span class="number">252</span>, <span class="number">307</span>, <span class="number">456</span>, <span class="number">578</span>, <span class="number">625</span>, <span class="number">600</span>, <span class="number">600</span>, <span class="number">660</span>, <span class="number">310</span>, <span class="number">260</span>, <span class="number">286</span>, <span class="number">410</span>].<span class="title function_">map</span>(</span><br><span class="line">        <span class="function">(<span class="params">item</span>) =&gt;</span> item * <span class="number">1.5</span></span><br><span class="line">      ),</span><br><span class="line">    &#125;,</span><br><span class="line">  ],</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">myChart.<span class="title function_">setOption</span>(option);</span><br></pre></td></tr></table></figure><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p>大功告成，效果预览</p><div id="map" style="width: 100%;height: 400px"></div><script src="https://cdn.jsdelivr.net/npm/echarts@5.4.3/dist/echarts.min.js"></script><script>const map = document.getElementById('map')const myChart = echarts.init(map)myChart.setOption({  backgroundColor: '#222',  title: {    text: '单位:万',    left: 30,    // 文字颜色    textStyle: {      color: '#4c9bfd'    }  },  color: ['#3398DB'],  tooltip: {    trigger: 'axis',    axisPointer: {      // 坐标轴指示器，坐标轴触发有效      type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'    }  },  grid: {    left: '3%',    right: '4%',    bottom: '3%',    containLabel: true  },  xAxis: [    {      type: 'category',      data: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'],      axisTick: {        alignWithLabel: true      },      //x底部文字      axisLabel: {        textStyle: {          color: '#3398DB'        }      }    }  ],  yAxis: [    {      type: 'value',      //y右侧文字      axisLabel: {        textStyle: {          color: '#3398DB'        }      },      // y轴的分割线      splitLine: {        show: false      }    }  ],  series: [    {      name: '收入统计',      type: 'bar',      barWidth: '15',      itemStyle: {        color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [          { offset: 0, color: '#00fffb' },          { offset: 1, color: '#0061ce' }        ])      },      data: [252, 307, 456, 578, 625, 600, 600, 660, 310, 260, 286, 410].map(item => {        if (item < 500) {          return item        } else {          return {            value: item,            itemStyle: {              color: '#254065',              opacity: 0.5            }          }        }      })    },    {      name: '收入统计',      type: 'line',      smooth: true,      tooltip: {        trigger: 'axis',        axisPointer: {          // 坐标轴指示器，坐标轴触发有效          type: 'line' // 默认为直线，可选为：'line' | 'shadow'        }      },      areaStyle: {        opacity: 0.2,        color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [          {            offset: 0,            color: '#36d9ab'          },          {            offset: 1,            color: '#02137c'          }        ])      },      data: [252, 307, 456, 578, 625, 600, 600, 660, 310, 260, 286, 410].map((item) => item * 1.5)    }  ]})</script>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站 </tag>
            
            <tag> echarts </tag>
            
            <tag> 推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用着色器打造光带效果</title>
      <link href="/posts/e64a01ff.html"/>
      <url>/posts/e64a01ff.html</url>
      
        <content type="html"><![CDATA[<h3 id="预期效果预览"><a href="#预期效果预览" class="headerlink" title="预期效果预览"></a>预期效果预览</h3><p>在一个平面上，实现一条光带从平面的一侧扫到平面的另一侧</p><div id="preview" style="height: 400px; position: relative; padding: 40px;"></div><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>因为在着色器语言中，我们实现每一种效果其实都是对每一个顶点的位置或者是颜色大小进行操作</p><p>在上述效果中，我们不需要对位置和大小进行操作，只需要对平面对应的顶点的颜色进行操作就好</p><p>所以我们可以传递一个时间参数给着色器，然后让着色器根据时间的变化和当前定点的 x 轴的值和 z 轴的值，对当前顶点的颜色进行改变</p><h3 id="代码实现思路"><a href="#代码实现思路" class="headerlink" title="代码实现思路"></a>代码实现思路</h3><p>其实无非就是根据当前当前顶点的坐标值跟时间进行挂钩，形成一个经过原点并且关于 y 轴对称的一元二次函数，然后再加上一个固定值，最后加上一个负号</p><!-- 函数最终的表达式就是-x²+a --><p class='p logo cyan'>函数最终的表达式就是-x²+a</p><p>这样的话，随着时间的变化，就会有一个区域的值大于 0，一部分区域的值小于 0，将结果大于 0 的顶点的颜色设置为指定颜色，这样就形成了光带效果</p><p>下面代码是令 x = (vPosition.x+vPosition.y-uTime)，a = 40.0<br>如果你想让光带从左到右进行扫过，就不需要添加 vPosition.y，就只让顶点的 x 轴坐标和时间进行挂钩，反之亦然</p><h3 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="variable constant_">THREE</span> <span class="keyword">from</span> <span class="string">&quot;three&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">OrbitControls</span> &#125; <span class="keyword">from</span> <span class="string">&quot;three/addons/controls/OrbitControls&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">OrbitControls</span> &#125; <span class="keyword">from</span> <span class="string">&quot;three/examples/jsm/controls/OrbitControls&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> scene = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Scene</span>();</span><br><span class="line"><span class="keyword">const</span> camera = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PerspectiveCamera</span>(</span><br><span class="line">  <span class="number">75</span>,</span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>,</span><br><span class="line">  <span class="number">0.1</span>,</span><br><span class="line">  <span class="number">1000</span></span><br><span class="line">);</span><br><span class="line">camera.<span class="property">position</span>.<span class="title function_">set</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">500</span>);</span><br><span class="line">scene.<span class="title function_">add</span>(camera);</span><br><span class="line"><span class="keyword">const</span> renderer = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">WebGLRenderer</span>();</span><br><span class="line">renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>);</span><br><span class="line"><span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(renderer.<span class="property">domElement</span>);</span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;resize&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>);</span><br><span class="line">  camera.<span class="property">aspect</span> = <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>;</span><br><span class="line">  camera.<span class="title function_">updateProjectionMatrix</span>();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> orbitControls = <span class="keyword">new</span> <span class="title class_">OrbitControls</span>(camera, renderer.<span class="property">domElement</span>);</span><br><span class="line">orbitControls.<span class="property">enableDamping</span> = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建平面网格</span></span><br><span class="line"><span class="keyword">const</span> planeGeometry = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PlaneGeometry</span>(<span class="number">200</span>, <span class="number">200</span>, <span class="number">1000</span>, <span class="number">1000</span>);</span><br><span class="line"><span class="keyword">const</span> shaderMaterial = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">ShaderMaterial</span>(&#123;</span><br><span class="line">  <span class="attr">transparent</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">side</span>: <span class="variable constant_">THREE</span>.<span class="property">DoubleSide</span>,</span><br><span class="line">  <span class="attr">vertexShader</span>: <span class="string">`</span></span><br><span class="line"><span class="string">        varying vec3 vPosition;</span></span><br><span class="line"><span class="string">        void main() &#123;</span></span><br><span class="line"><span class="string">            vec4 modelPosition = modelMatrix * vec4(position, 1.0);</span></span><br><span class="line"><span class="string">            vec4 viewPosition = viewMatrix * modelPosition;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">            vPosition = position;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">            gl_Position = projectionMatrix * viewPosition;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    `</span>,</span><br><span class="line">  <span class="attr">fragmentShader</span>: <span class="string">`</span></span><br><span class="line"><span class="string">        varying vec3 vPosition;</span></span><br><span class="line"><span class="string">        uniform float uTime;</span></span><br><span class="line"><span class="string">        void main() &#123;</span></span><br><span class="line"><span class="string">            float LightLineMix = -(vPosition.x+vPosition.y-uTime)*(vPosition.x+vPosition.y-uTime)+40.0;</span></span><br><span class="line"><span class="string">  </span></span><br><span class="line"><span class="string">            if(LightLineMix&gt;0.0)&#123;</span></span><br><span class="line"><span class="string">                gl_FragColor = mix(gl_FragColor,vec4(0.8,1.0,1.0,1.0),LightLineMix / 40.0);</span></span><br><span class="line"><span class="string">                return;</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">            gl_FragColor = vec4(0.3,0.8,0.6, 1.0);</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    `</span>,</span><br><span class="line">  <span class="attr">uniforms</span>: &#123;</span><br><span class="line">    <span class="attr">uTime</span>: &#123;</span><br><span class="line">      <span class="attr">value</span>: -<span class="number">500</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> plane = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Mesh</span>(planeGeometry, shaderMaterial);</span><br><span class="line">scene.<span class="title function_">add</span>(plane);</span><br><span class="line"></span><br><span class="line">gsap.<span class="title function_">to</span>(plane.<span class="property">material</span>.<span class="property">uniforms</span>.<span class="property">uTime</span>, &#123;</span><br><span class="line">  <span class="attr">value</span>: <span class="number">500</span>,</span><br><span class="line">  <span class="attr">duration</span>: <span class="number">3</span>,</span><br><span class="line">  <span class="attr">repeat</span>: -<span class="number">1</span>,</span><br><span class="line">  <span class="attr">ease</span>: <span class="string">&quot;linear&quot;</span>,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">render</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  renderer.<span class="title function_">render</span>(scene, camera);</span><br><span class="line">  <span class="comment">//   material.uniforms.uTime.value = clock.getElapsedTime();</span></span><br><span class="line">  orbitControls.<span class="title function_">update</span>();</span><br><span class="line">  <span class="title function_">requestAnimationFrame</span>(render);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="title function_">render</span>();</span><br></pre></td></tr></table></figure><script type="importmap">  {    "imports": {      "three": "https://unpkg.com/three@0.158.0/build/three.module.js",      "three/addons/": "https://unpkg.com/three@0.158.0/examples/jsm/"    }  }</script><script type="module">import * as THREE from "three";import {OrbitControls} from "three/addons/controls/OrbitControls";const scene = new THREE.Scene();const camera = new THREE.PerspectiveCamera(  75,  window.innerWidth / window.innerHeight,  0.1,  1000);camera.position.set(0, 0, 300);scene.add(camera);const renderer = new THREE.WebGLRenderer();renderer.setSize(window.innerWidth, window.innerHeight);document.getElementById("preview").appendChild(renderer.domElement);renderer.domElement.style.width = '100%'renderer.domElement.style.height = '90%'renderer.domElement.style.position = 'absolute'renderer.domElement.style.top = '0'renderer.domElement.style.left = '0'// document.body.appendChild(renderer.domElement);window.addEventListener("resize", () => {  renderer.setSize(window.innerWidth, window.innerHeight);  camera.aspect = window.innerWidth / window.innerHeight;  camera.updateProjectionMatrix();});const orbitControls = new OrbitControls(camera, renderer.domElement);orbitControls.enableDamping = true;// 创建平面网格const planeGeometry = new THREE.PlaneGeometry(200, 200, 1000, 1000);const shaderMaterial = new THREE.ShaderMaterial({    transparent: true,    side: THREE.DoubleSide,    vertexShader: `        uniform float uTime;        varying vec3 vPosition;        void main() {            vec4 modelPosition = modelMatrix * vec4(position, 1.0);            vec4 viewPosition = viewMatrix * modelPosition;            vPosition = position;            gl_Position = projectionMatrix * viewPosition;        }    `,    fragmentShader: `        varying vec3 vPosition;        uniform float uTime;        void main() {            float LightLineMix = -(vPosition.x+vPosition.y-uTime)*(vPosition.x+vPosition.y-uTime)+40.0;            if(LightLineMix>0.0){                gl_FragColor = mix(gl_FragColor,vec4(0.8,1.0,1.0,1.0),LightLineMix / 40.0);                return;            }            gl_FragColor = vec4(0.1,0.1,0.1, 1.0);        }    `,    uniforms: {        uTime: {            value: -500        }    }})const plane = new THREE.Mesh(planeGeometry, shaderMaterial);scene.add(plane);gsap.to(plane.material.uniforms.uTime, {    value: 500,    duration: 3,    repeat: -1,    ease: "linear",})const render = () => {  renderer.render(scene, camera);//   material.uniforms.uTime.value = clock.getElapsedTime();  orbitControls.update();  requestAnimationFrame(render);};render();</script>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> three.js </tag>
            
            <tag> 特效 </tag>
            
            <tag> 着色器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>three.js中的曲线应用</title>
      <link href="/posts/bd423138.html"/>
      <url>/posts/bd423138.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>结束了着色器的学习，现在开始学习 three.js 中的曲线应用</p><p>我们来尝试着做让一个物体围绕着曲线进行运动</p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>原理比较简单，就是创建一条曲线，将曲线分成很多份，然后获取其中每一份的位置，再赋值给物体，这样物体就会沿着曲线运动了</p><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p>首先初始化一下 three.js 的场景</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="variable constant_">THREE</span> <span class="keyword">from</span> <span class="string">&quot;three&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">OrbitControls</span> &#125; <span class="keyword">from</span> <span class="string">&quot;three/examples/jsm/controls/OrbitControls&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> scene = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Scene</span>();</span><br><span class="line"><span class="keyword">const</span> camera = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PerspectiveCamera</span>(</span><br><span class="line">  <span class="number">75</span>,</span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>,</span><br><span class="line">  <span class="number">0.1</span>,</span><br><span class="line">  <span class="number">1000</span></span><br><span class="line">);</span><br><span class="line">camera.<span class="property">position</span>.<span class="title function_">set</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">10</span>);</span><br><span class="line"><span class="keyword">const</span> renderer = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">WebGLRenderer</span>();</span><br><span class="line">renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>);</span><br><span class="line"><span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(renderer.<span class="property">domElement</span>);</span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;resize&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">//更新渲染器</span></span><br><span class="line">  renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>);</span><br><span class="line">  <span class="comment">//设置渲染器的像素比</span></span><br><span class="line">  renderer.<span class="title function_">setPixelRatio</span>(<span class="variable language_">window</span>.<span class="property">devicePixelRatio</span>);</span><br><span class="line">  camera.<span class="property">aspect</span> = <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>;</span><br><span class="line">  camera.<span class="title function_">updateProjectionMatrix</span>();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> orbitControls = <span class="keyword">new</span> <span class="title class_">OrbitControls</span>(camera, renderer.<span class="property">domElement</span>);</span><br><span class="line">orbitControls.<span class="property">enableDamping</span> = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> axesHelper = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">AxesHelper</span>(<span class="number">10</span>);</span><br><span class="line">scene.<span class="title function_">add</span>(axesHelper);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> dirLight = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">DirectionalLight</span>(<span class="number">0xffffff</span>);</span><br><span class="line">dirLight.<span class="property">position</span>.<span class="title function_">set</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">scene.<span class="title function_">add</span>(dirLight);</span><br><span class="line"><span class="keyword">const</span> light = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">AmbientLight</span>(<span class="number">0xffffff</span>, <span class="number">0.5</span>); <span class="comment">// soft white light</span></span><br><span class="line">scene.<span class="title function_">add</span>(light);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;resize&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  camera.<span class="property">aspect</span> = <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>;</span><br><span class="line"></span><br><span class="line">  camera.<span class="title function_">updateProjectionMatrix</span>();</span><br><span class="line"></span><br><span class="line">  renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> clock = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Clock</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">render</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  renderer.<span class="title function_">render</span>(scene, camera);</span><br><span class="line">  <span class="keyword">const</span> elapsed = clock.<span class="title function_">getElapsedTime</span>();</span><br><span class="line">  orbitControls.<span class="title function_">update</span>();</span><br><span class="line">  <span class="title function_">requestAnimationFrame</span>(render);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="title function_">render</span>();</span><br></pre></td></tr></table></figure><p>接下来我们创建一个球体，并添加到场景中</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> sphereGeometry = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">SphereGeometry</span>(<span class="number">0.2</span>, <span class="number">32</span>, <span class="number">32</span>);</span><br><span class="line"><span class="keyword">const</span> sphereMaterial = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">MeshBasicMaterial</span>(&#123; <span class="attr">color</span>: <span class="number">0xffff00</span> &#125;);</span><br><span class="line"><span class="keyword">const</span> sphere = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Mesh</span>(sphereGeometry, sphereMaterial);</span><br><span class="line">scene.<span class="title function_">add</span>(sphere);</span><br></pre></td></tr></table></figure><p>然后我们再来创建一条曲线</p><p>下面的代码先是创建了一条闭合曲线，然后将这条曲线分割成 50 个点，获取到顶点后再根据顶点创建网格对象，然后再创建了一个线条材质，最后根据材质和网格创建一个曲线线条并添加到场景中</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建曲线</span></span><br><span class="line"><span class="keyword">const</span> curve = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">CatmullRomCurve3</span>(</span><br><span class="line">  [</span><br><span class="line">    <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Vector3</span>(-<span class="number">10</span>, <span class="number">0</span>, <span class="number">10</span>),</span><br><span class="line">    <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Vector3</span>(-<span class="number">5</span>, <span class="number">5</span>, <span class="number">5</span>),</span><br><span class="line">    <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Vector3</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>),</span><br><span class="line">    <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Vector3</span>(<span class="number">5</span>, -<span class="number">5</span>, <span class="number">5</span>),</span><br><span class="line">    <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Vector3</span>(<span class="number">10</span>, <span class="number">0</span>, <span class="number">10</span>),</span><br><span class="line">  ],</span><br><span class="line">  <span class="literal">true</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">const</span> points = curve.<span class="title function_">getPoints</span>(<span class="number">50</span>);</span><br><span class="line"><span class="keyword">const</span> geometry = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferGeometry</span>().<span class="title function_">setFromPoints</span>(points);</span><br><span class="line"><span class="keyword">const</span> material = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">LineBasicMaterial</span>(&#123; <span class="attr">color</span>: <span class="number">0xffffff</span> &#125;);</span><br><span class="line"><span class="keyword">const</span> line = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Line</span>(geometry, material);</span><br><span class="line">scene.<span class="title function_">add</span>(line);</span><br></pre></td></tr></table></figure><p>这样我们的场景就能看到线条和球了</p><p>接下来我们获取每个顶点的位置并将其赋值给球，达到让球跟随曲线进行运动</p><p>修改渲染函数如下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">render</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  renderer.<span class="title function_">render</span>(scene, camera);</span><br><span class="line">  <span class="keyword">const</span> elapsed = clock.<span class="title function_">getElapsedTime</span>();</span><br><span class="line">  <span class="keyword">const</span> time = (elapsed / <span class="number">10</span>) % <span class="number">1</span>;</span><br><span class="line">  sphere.<span class="property">position</span>.<span class="title function_">copy</span>(curve.<span class="title function_">getPointAt</span>(time));</span><br><span class="line">  orbitControls.<span class="title function_">update</span>();</span><br><span class="line">  <span class="title function_">requestAnimationFrame</span>(render);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>clock.getElapsedTime() 方法可以获取当前距离时钟开启的时间，如果时钟运行了 1 秒就返回 1 秒</p><p>curve.getPointAt() 方法需要传入一个 0-1 的 float 类型的值，这里我们将时间模除以 1，得到一个 0-1 的 float 型变量，再传入到参数中，这样我们就获取到了曲线上的每一个顶点的位置，然后再将其位置赋值给我们的圆球</p><p>这样我们就能看到球在曲线上进行运动了</p><h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><p>完整代码如下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="variable constant_">THREE</span> <span class="keyword">from</span> <span class="string">&quot;three&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">OrbitControls</span> &#125; <span class="keyword">from</span> <span class="string">&quot;three/examples/jsm/controls/OrbitControls&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> scene = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Scene</span>();</span><br><span class="line"><span class="keyword">const</span> camera = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PerspectiveCamera</span>(</span><br><span class="line">  <span class="number">75</span>,</span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>,</span><br><span class="line">  <span class="number">0.1</span>,</span><br><span class="line">  <span class="number">1000</span></span><br><span class="line">);</span><br><span class="line">camera.<span class="property">position</span>.<span class="title function_">set</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">10</span>);</span><br><span class="line"><span class="keyword">const</span> renderer = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">WebGLRenderer</span>();</span><br><span class="line">renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>);</span><br><span class="line"><span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(renderer.<span class="property">domElement</span>);</span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;resize&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">//更新渲染器</span></span><br><span class="line">  renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>);</span><br><span class="line">  <span class="comment">//设置渲染器的像素比</span></span><br><span class="line">  renderer.<span class="title function_">setPixelRatio</span>(<span class="variable language_">window</span>.<span class="property">devicePixelRatio</span>);</span><br><span class="line">  camera.<span class="property">aspect</span> = <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>;</span><br><span class="line">  camera.<span class="title function_">updateProjectionMatrix</span>();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> orbitControls = <span class="keyword">new</span> <span class="title class_">OrbitControls</span>(camera, renderer.<span class="property">domElement</span>);</span><br><span class="line">orbitControls.<span class="property">enableDamping</span> = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> axesHelper = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">AxesHelper</span>(<span class="number">10</span>);</span><br><span class="line">scene.<span class="title function_">add</span>(axesHelper);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> dirLight = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">DirectionalLight</span>(<span class="number">0xffffff</span>);</span><br><span class="line">dirLight.<span class="property">position</span>.<span class="title function_">set</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">scene.<span class="title function_">add</span>(dirLight);</span><br><span class="line"><span class="keyword">const</span> light = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">AmbientLight</span>(<span class="number">0xffffff</span>, <span class="number">0.5</span>); <span class="comment">// soft white light</span></span><br><span class="line">scene.<span class="title function_">add</span>(light);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> sphereGeometry = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">SphereGeometry</span>(<span class="number">0.2</span>, <span class="number">32</span>, <span class="number">32</span>);</span><br><span class="line"><span class="keyword">const</span> sphereMaterial = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">MeshBasicMaterial</span>(&#123; <span class="attr">color</span>: <span class="number">0xffff00</span> &#125;);</span><br><span class="line"><span class="keyword">const</span> sphere = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Mesh</span>(sphereGeometry, sphereMaterial);</span><br><span class="line">scene.<span class="title function_">add</span>(sphere);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> curve = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">CatmullRomCurve3</span>(</span><br><span class="line">  [</span><br><span class="line">    <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Vector3</span>(-<span class="number">10</span>, <span class="number">0</span>, <span class="number">10</span>),</span><br><span class="line">    <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Vector3</span>(-<span class="number">5</span>, <span class="number">5</span>, <span class="number">5</span>),</span><br><span class="line">    <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Vector3</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>),</span><br><span class="line">    <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Vector3</span>(<span class="number">5</span>, -<span class="number">5</span>, <span class="number">5</span>),</span><br><span class="line">    <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Vector3</span>(<span class="number">10</span>, <span class="number">0</span>, <span class="number">10</span>),</span><br><span class="line">  ],</span><br><span class="line">  <span class="literal">true</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">const</span> points = curve.<span class="title function_">getPoints</span>(<span class="number">50</span>);</span><br><span class="line"><span class="keyword">const</span> geometry = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferGeometry</span>().<span class="title function_">setFromPoints</span>(points);</span><br><span class="line"><span class="keyword">const</span> material = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">LineBasicMaterial</span>(&#123; <span class="attr">color</span>: <span class="number">0xffffff</span> &#125;);</span><br><span class="line"><span class="keyword">const</span> line = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Line</span>(geometry, material);</span><br><span class="line">scene.<span class="title function_">add</span>(line);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;resize&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  camera.<span class="property">aspect</span> = <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>;</span><br><span class="line"></span><br><span class="line">  camera.<span class="title function_">updateProjectionMatrix</span>();</span><br><span class="line"></span><br><span class="line">  renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> clock = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Clock</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">render</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  renderer.<span class="title function_">render</span>(scene, camera);</span><br><span class="line">  <span class="keyword">const</span> elapsed = clock.<span class="title function_">getElapsedTime</span>();</span><br><span class="line">  <span class="keyword">const</span> time = (elapsed / <span class="number">10</span>) % <span class="number">1</span>;</span><br><span class="line">  sphere.<span class="property">position</span>.<span class="title function_">copy</span>(curve.<span class="title function_">getPointAt</span>(time));</span><br><span class="line">  orbitControls.<span class="title function_">update</span>();</span><br><span class="line">  <span class="title function_">requestAnimationFrame</span>(render);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="title function_">render</span>();</span><br></pre></td></tr></table></figure><h2 id="效果预览"><a href="#效果预览" class="headerlink" title="效果预览"></a>效果预览</h2><div class="tip info"><p>如果遇到没有显示或者显示有点问题请刷新一下界面，因为加载可能比较消耗性能和时间</p></div><div id="preview"></div><script type="importmap">  {    "imports": {      "three": "https://unpkg.com/three@0.158.0/build/three.module.js",      "three/addons/": "https://unpkg.com/three@0.158.0/examples/jsm/"    }  }</script><script type="module">import * as THREE from "three";import {OrbitControls} from "three/addons/controls/OrbitControls";const scene = new THREE.Scene();const camera = new THREE.PerspectiveCamera(  75,  window.innerWidth / window.innerHeight,  0.1,  1000);camera.position.set(0, 0, 10);const renderer = new THREE.WebGLRenderer();renderer.setSize(window.innerWidth, window.innerHeight);document.getElementById("preview").appendChild(renderer.domElement);renderer.domElement.style.width = '100%'renderer.domElement.style.height = '100%'window.addEventListener("resize", () => {  //更新渲染器  renderer.setSize(window.innerWidth, window.innerHeight);  //设置渲染器的像素比  renderer.setPixelRatio(window.devicePixelRatio);  camera.aspect = window.innerWidth / window.innerHeight;  camera.updateProjectionMatrix();});const orbitControls = new OrbitControls(camera, renderer.domElement);orbitControls.enableDamping = true;// const axesHelper = new THREE.AxesHelper(10);// scene.add(axesHelper);const dirLight = new THREE.DirectionalLight(0xffffff);dirLight.position.set(0, 0, 1);scene.add(dirLight);const light = new THREE.AmbientLight(0xffffff, 0.5); // soft white lightscene.add(light);const sphereGeometry = new THREE.SphereGeometry(0.2, 32, 32);const sphereMaterial = new THREE.MeshBasicMaterial({ color: 0xffff00 });const sphere = new THREE.Mesh(sphereGeometry, sphereMaterial);scene.add(sphere);const curve = new THREE.CatmullRomCurve3(  [    new THREE.Vector3(-10, 0, 10),    new THREE.Vector3(-5, 5, 5),    new THREE.Vector3(0, 0, 0),    new THREE.Vector3(5, -5, 5),    new THREE.Vector3(10, 0, 10),  ],  true);const points = curve.getPoints(50);const geometry = new THREE.BufferGeometry().setFromPoints(points);const material = new THREE.LineBasicMaterial({ color: 0xffffff });const line = new THREE.Line(geometry, material);scene.add(line);window.addEventListener("resize", () => {  camera.aspect = window.innerWidth / window.innerHeight;  camera.updateProjectionMatrix();  renderer.setSize(window.innerWidth, window.innerHeight);});const clock = new THREE.Clock();const render = () => {  renderer.render(scene, camera);  const elapsed = clock.getElapsedTime();  const time = (elapsed / 10) % 1;  sphere.position.copy(curve.getPointAt(time));  orbitControls.update();  requestAnimationFrame(render);};render();</script>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> three.js </tag>
            
            <tag> 应用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用着色器打造烟花效果</title>
      <link href="/posts/5caab59b.html"/>
      <url>/posts/5caab59b.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>重新学习一遍着色器语言，现在进行到粒子特效最后一关了，使用着色器编写一个烟花效果</p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>我们先想象一下我们现实生活中的烟花是什么样子的，先是烟花升空，然后在空中爆炸，散发出很多颜色不同的光，最后逐渐消失</p><p>然后我们开始思考，将上面的行为进行程序化</p><p>烟花升空的话，我们可以采用一个大型的粒子，然后逐渐移动它的y轴坐标，当到达目标位置之后，记录它的位置，再见它移除场景，然后在这个位置创建很多小粒子，并逐渐朝四周发散，达到爆炸效果，最后消失</p><h2 id="开始编写代码"><a href="#开始编写代码" class="headerlink" title="开始编写代码"></a>开始编写代码</h2><p>原理还是比较简单的，我不知道我有没有说明白，下面我也会逐一进行解释</p><p>这里就不再赘述开发环境，我是基于vue环境进行开发的，装完vue环境后再装一下three.js</p><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><p>开发3D必备环境，准备场景、相机和渲染器</p><p>删除原来App.vue文件中的script标签中的内容，在App.vue文件中的script标签中写入以下内容</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="variable constant_">THREE</span> <span class="keyword">from</span> <span class="string">&quot;three&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> scene = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Scene</span>();</span><br><span class="line"><span class="keyword">const</span> camera = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PerspectiveCamera</span>(</span><br><span class="line">  <span class="number">75</span>,</span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>,</span><br><span class="line">  <span class="number">0.1</span>,</span><br><span class="line">  <span class="number">1000</span></span><br><span class="line">);</span><br><span class="line">camera.<span class="property">position</span>.<span class="property">z</span> = -<span class="number">10</span>;</span><br><span class="line">scene.<span class="title function_">add</span>(camera);</span><br><span class="line"><span class="keyword">const</span> renderer = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">WebGLRenderer</span>();</span><br><span class="line"><span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(renderer.<span class="property">domElement</span>);</span><br><span class="line">renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>);</span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;resize&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>);</span><br><span class="line">  camera.<span class="property">aspect</span> = <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>;</span><br><span class="line">  camera.<span class="title function_">updateProjectionMatrix</span>();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> orbitControls = <span class="keyword">new</span> <span class="title class_">OrbitControls</span>(camera, renderer.<span class="property">domElement</span>);</span><br><span class="line">orbitControls.<span class="property">enableDamping</span> = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">render</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="title function_">requestAnimationFrame</span>(render);</span><br><span class="line">  renderer.<span class="title function_">render</span>(scene, camera);</span><br><span class="line">  orbitControls.<span class="title function_">update</span>();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="title function_">render</span>();</span><br></pre></td></tr></table></figure><p>到这里我们的基本环境就准备好了</p><h3 id="创建初始烟花"><a href="#创建初始烟花" class="headerlink" title="创建初始烟花"></a>创建初始烟花</h3><p>这里为了方便开发，采用面向对象的方式进行开发</p><p>新建一个js文件，创建一个烟花类并导出去</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="variable constant_">THREE</span> <span class="keyword">from</span> <span class="string">&quot;three&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">class</span> <span class="title class_">FireWork</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">color, to, <span class="keyword">from</span> = &#123; x: <span class="number">0</span>, y: <span class="number">0</span>, z: <span class="number">0</span> &#125;</span>) &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>构造函数接受三个参数，一个是烟花的颜色，一个是烟花要发射到的位置，一个是烟花的初始位置</p><p>接下来我们开始思考，我们的烟花类需要做什么，首先是构建一个初始的烟花，然后创建着色器对粒子进行绘制，然后创建烟花的参数并传递给着色器进行进一步绘制，再将烟花添加到场景</p><p>我们先做到上面的效果，在构造函数里面创建初始的烟花</p><p>下面代码主要是创建一个初始烟花的几何体和顶点、片元着色器，并设置了一系列参数比如飞行时间、飞行速度、飞行方向等，并创建了一个函数用于将烟花添加到场景中，然后创建了一个更新函数，用于将时间传递给着色器</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="variable constant_">THREE</span> <span class="keyword">from</span> <span class="string">&quot;three&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">class</span> <span class="title class_">FireWork</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">color, to, <span class="keyword">from</span> = &#123; x: <span class="number">0</span>, y: <span class="number">0</span>, z: <span class="number">0</span> &#125;</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">startFireworkColor</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Color</span>(color);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">startGeometry</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferGeometry</span>();</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">startPositionArray</span> = <span class="keyword">new</span> <span class="title class_">Float32Array</span>([<span class="keyword">from</span>.<span class="property">x</span>, <span class="keyword">from</span>.<span class="property">y</span>, <span class="keyword">from</span>.<span class="property">z</span>]);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">startGeometry</span>.<span class="title function_">setAttribute</span>(</span><br><span class="line">      <span class="string">&quot;position&quot;</span>,</span><br><span class="line">      <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferAttribute</span>(<span class="variable language_">this</span>.<span class="property">startPositionArray</span>, <span class="number">3</span>)</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> astepArray = <span class="keyword">new</span> <span class="title class_">Float32Array</span>(<span class="number">3</span>);</span><br><span class="line">    astepArray[<span class="number">0</span>] = to.<span class="property">x</span> - <span class="keyword">from</span>.<span class="property">x</span>;</span><br><span class="line">    astepArray[<span class="number">1</span>] = to.<span class="property">y</span> - <span class="keyword">from</span>.<span class="property">y</span>;</span><br><span class="line">    astepArray[<span class="number">2</span>] = to.<span class="property">z</span> - <span class="keyword">from</span>.<span class="property">z</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">startGeometry</span>.<span class="title function_">setAttribute</span>(</span><br><span class="line">      <span class="string">&quot;aStep&quot;</span>,</span><br><span class="line">      <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferAttribute</span>(astepArray, <span class="number">3</span>)</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">flyTime</span> = <span class="number">1</span> + <span class="title class_">Math</span>.<span class="title function_">random</span>();</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">flyingSpeed</span> = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">10</span> + <span class="number">50</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">flying</span> = <span class="literal">true</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">end</span> = <span class="literal">false</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">explode</span> = <span class="literal">false</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">explodeTime</span> = <span class="title class_">Math</span>.<span class="title function_">random</span>() + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> m = <span class="title class_">Math</span>.<span class="title function_">sqrt</span>(</span><br><span class="line">      <span class="title class_">Math</span>.<span class="title function_">pow</span>(astepArray[<span class="number">0</span>], <span class="number">2</span>) +</span><br><span class="line">        <span class="title class_">Math</span>.<span class="title function_">pow</span>(astepArray[<span class="number">1</span>], <span class="number">2</span>) +</span><br><span class="line">        <span class="title class_">Math</span>.<span class="title function_">pow</span>(astepArray[<span class="number">2</span>], <span class="number">2</span>)</span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">const</span> astepDirection = [</span><br><span class="line">      astepArray[<span class="number">0</span>] / m,</span><br><span class="line">      astepArray[<span class="number">1</span>] / m,</span><br><span class="line">      astepArray[<span class="number">2</span>] / m,</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">fireworkShowPosition</span> = &#123;</span><br><span class="line">      <span class="attr">x</span>: astepDirection[<span class="number">0</span>] * <span class="variable language_">this</span>.<span class="property">flyTime</span> * <span class="variable language_">this</span>.<span class="property">flyingSpeed</span>,</span><br><span class="line">      <span class="attr">y</span>: astepDirection[<span class="number">1</span>] * <span class="variable language_">this</span>.<span class="property">flyTime</span> * <span class="variable language_">this</span>.<span class="property">flyingSpeed</span>,</span><br><span class="line">      <span class="attr">z</span>: astepDirection[<span class="number">2</span>] * <span class="variable language_">this</span>.<span class="property">flyTime</span> * <span class="variable language_">this</span>.<span class="property">flyingSpeed</span>,</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">startMaterial</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">ShaderMaterial</span>(&#123;</span><br><span class="line">      <span class="attr">vertexShader</span>: <span class="string">`attribute vec3 aStep;</span></span><br><span class="line"><span class="string">    uniform float uTime;</span></span><br><span class="line"><span class="string">    uniform float uSize;</span></span><br><span class="line"><span class="string">    uniform float uSpeed;</span></span><br><span class="line"><span class="string">    uniform float uFlyTime;</span></span><br><span class="line"><span class="string">    void main() &#123;</span></span><br><span class="line"><span class="string">        vec4 modelPosition = modelMatrix * vec4(position, 1.0);</span></span><br><span class="line"><span class="string">        if (uTime &lt;= uFlyTime) &#123;</span></span><br><span class="line"><span class="string">            modelPosition.xyz += normalize(aStep) * uTime * uSpeed;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        vec4 viewPosition = viewMatrix * modelPosition;</span></span><br><span class="line"><span class="string">        gl_Position = projectionMatrix * viewPosition;</span></span><br><span class="line"><span class="string">        // gl_PointSize = 200.0 / -viewPosition.z;</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">        gl_PointSize = uSize / -viewPosition.z * 10.0;</span></span><br><span class="line"><span class="string">    &#125;`</span>,</span><br><span class="line">      <span class="attr">fragmentShader</span>: <span class="string">`</span></span><br><span class="line"><span class="string">    uniform vec3 uColor;</span></span><br><span class="line"><span class="string">    void main() &#123;</span></span><br><span class="line"><span class="string">        float distanceToCenter = distance(gl_PointCoord, vec2(0.5));</span></span><br><span class="line"><span class="string">        float strength = 1.0 - distanceToCenter * 2.0;</span></span><br><span class="line"><span class="string">        strength = pow(strength, 1.5);</span></span><br><span class="line"><span class="string">        gl_FragColor = vec4(uColor, strength);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">`</span>,</span><br><span class="line">      <span class="attr">transparent</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">blending</span>: <span class="variable constant_">THREE</span>.<span class="property">AdditiveBlending</span>,</span><br><span class="line">      <span class="attr">depthWrite</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="attr">uniforms</span>: &#123;</span><br><span class="line">        <span class="attr">uTime</span>: &#123;</span><br><span class="line">          <span class="attr">value</span>: <span class="number">0</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">uSize</span>: &#123;</span><br><span class="line">          <span class="attr">value</span>: <span class="number">80</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">uSpeed</span>: &#123;</span><br><span class="line">          <span class="attr">value</span>: <span class="variable language_">this</span>.<span class="property">flyingSpeed</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">uFlyTime</span>: &#123;</span><br><span class="line">          <span class="attr">value</span>: <span class="variable language_">this</span>.<span class="property">flyTime</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">uColor</span>: &#123;</span><br><span class="line">          <span class="attr">value</span>: <span class="variable language_">this</span>.<span class="property">startFireworkColor</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">startPoint</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Points</span>(<span class="variable language_">this</span>.<span class="property">startGeometry</span>, <span class="variable language_">this</span>.<span class="property">startMaterial</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">clock</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Clock</span>();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">addScene</span>(<span class="params">scene, camera</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">scene</span> = scene;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">camera</span> = camera;</span><br><span class="line">    scene.<span class="title function_">add</span>(<span class="variable language_">this</span>.<span class="property">startPoint</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">update</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">end</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> elapsedTime = <span class="variable language_">this</span>.<span class="property">clock</span>.<span class="title function_">getElapsedTime</span>();</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">startMaterial</span>.<span class="property">uniforms</span>.<span class="property">uTime</span>.<span class="property">value</span> = <span class="variable language_">this</span>.<span class="property">clock</span>.<span class="title function_">getElapsedTime</span>();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来我们添加一个创建烟花的函数，并在鼠标点击之后创建烟花</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> fireWorkArr = [];</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">createFireWorks</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">let</span> color = <span class="string">`hsl(<span class="subst">$&#123;<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">360</span>)&#125;</span>, 100%, 80%)`</span>;</span><br><span class="line">  <span class="keyword">let</span> <span class="keyword">from</span> = &#123;</span><br><span class="line">    <span class="attr">x</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">y</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">z</span>: <span class="number">0</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">let</span> to = &#123;</span><br><span class="line">    <span class="attr">x</span>: <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">20</span> - <span class="number">5</span>,</span><br><span class="line">    <span class="attr">y</span>: <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">20</span> + <span class="number">20</span>,</span><br><span class="line">    <span class="attr">z</span>: <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">20</span> - <span class="number">5</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">let</span> fireWork = <span class="keyword">new</span> <span class="title class_">FireWork</span>(color, to, <span class="keyword">from</span>);</span><br><span class="line">  fireWorkArr.<span class="title function_">push</span>(fireWork);</span><br><span class="line">  fireWork.<span class="title function_">addScene</span>(scene, camera);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, createFireWorks);</span><br></pre></td></tr></table></figure><p>然后我们修改渲染函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">render</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="title function_">requestAnimationFrame</span>(render);</span><br><span class="line">  fireWorkArr.<span class="title function_">forEach</span>(<span class="function">(<span class="params">fireWork</span>) =&gt;</span> &#123;</span><br><span class="line">    fireWork.<span class="title function_">update</span>();</span><br><span class="line">  &#125;);</span><br><span class="line">  renderer.<span class="title function_">render</span>(scene, camera);</span><br><span class="line">  orbitControls.<span class="title function_">update</span>();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="title function_">render</span>();</span><br></pre></td></tr></table></figure><p>然后在终端运行npm run dev，打开服务器就能看到效果了</p><h3 id="创建爆炸的烟花"><a href="#创建爆炸的烟花" class="headerlink" title="创建爆炸的烟花"></a>创建爆炸的烟花</h3><p>在Firework类中创建一个创建烟花的函数</p><p>下面这个函数创建了烟花的数量、烟花的方向等参数，</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">createFirework</span>(<span class="params">to</span>) &#123;</span><br><span class="line">    <span class="comment">//创建爆炸之后的烟花</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">fireworkCount</span> = <span class="number">200</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">fireworkGeometry</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferGeometry</span>();</span><br><span class="line">    <span class="keyword">const</span> fireworkPositionArray = <span class="keyword">new</span> <span class="title class_">Float32Array</span>(<span class="variable language_">this</span>.<span class="property">fireworkCount</span> * <span class="number">3</span>);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">fireworkScaleArray</span> = <span class="keyword">new</span> <span class="title class_">Float32Array</span>(<span class="variable language_">this</span>.<span class="property">fireworkCount</span>);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">directionArray</span> = <span class="keyword">new</span> <span class="title class_">Float32Array</span>(<span class="variable language_">this</span>.<span class="property">fireworkCount</span> * <span class="number">3</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="variable language_">this</span>.<span class="property">fireworkCount</span>; i++) &#123;</span><br><span class="line">      fireworkPositionArray[i * <span class="number">3</span>] = to.<span class="property">x</span>;</span><br><span class="line">      fireworkPositionArray[i * <span class="number">3</span> + <span class="number">1</span>] = to.<span class="property">y</span>;</span><br><span class="line">      fireworkPositionArray[i * <span class="number">3</span> + <span class="number">2</span>] = to.<span class="property">z</span>;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">fireworkScaleArray</span>[i] = <span class="title class_">Math</span>.<span class="title function_">random</span>() + <span class="number">0.5</span>;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">const</span> theta = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">2</span> * <span class="title class_">Math</span>.<span class="property">PI</span>;</span><br><span class="line">      <span class="keyword">const</span> beta = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">2</span> * <span class="title class_">Math</span>.<span class="property">PI</span>;</span><br><span class="line">      <span class="keyword">const</span> radius = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">directionArray</span>[i * <span class="number">3</span>] =</span><br><span class="line">        radius * <span class="title class_">Math</span>.<span class="title function_">sin</span>(theta) + radius * <span class="title class_">Math</span>.<span class="title function_">sin</span>(beta);</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">directionArray</span>[i * <span class="number">3</span> + <span class="number">1</span>] =</span><br><span class="line">        radius * <span class="title class_">Math</span>.<span class="title function_">cos</span>(theta) + radius * <span class="title class_">Math</span>.<span class="title function_">cos</span>(beta);</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">directionArray</span>[i * <span class="number">3</span> + <span class="number">2</span>] =</span><br><span class="line">        radius * <span class="title class_">Math</span>.<span class="title function_">sin</span>(theta) + radius * <span class="title class_">Math</span>.<span class="title function_">cos</span>(beta);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">fireworkGeometry</span>.<span class="title function_">setAttribute</span>(</span><br><span class="line">      <span class="string">&quot;position&quot;</span>,</span><br><span class="line">      <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferAttribute</span>(fireworkPositionArray, <span class="number">3</span>)</span><br><span class="line">    );</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">fireworkGeometry</span>.<span class="title function_">setAttribute</span>(</span><br><span class="line">      <span class="string">&quot;aScale&quot;</span>,</span><br><span class="line">      <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferAttribute</span>(<span class="variable language_">this</span>.<span class="property">fireworkScaleArray</span>, <span class="number">1</span>)</span><br><span class="line">    );</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">fireworkGeometry</span>.<span class="title function_">setAttribute</span>(</span><br><span class="line">      <span class="string">&quot;direction&quot;</span>,</span><br><span class="line">      <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferAttribute</span>(<span class="variable language_">this</span>.<span class="property">directionArray</span>, <span class="number">3</span>)</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">fireworkMaterial</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">ShaderMaterial</span>(&#123;</span><br><span class="line">      <span class="attr">transparent</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">uniforms</span>: &#123;</span><br><span class="line">        <span class="attr">uSize</span>: &#123;</span><br><span class="line">          <span class="attr">value</span>: <span class="number">60.0</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">uTime</span>: &#123;</span><br><span class="line">          <span class="attr">value</span>: <span class="number">0.0</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">uExplodeTime</span>: &#123;</span><br><span class="line">          <span class="attr">value</span>: <span class="variable language_">this</span>.<span class="property">explodeTime</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">uColor</span>: &#123;</span><br><span class="line">          <span class="attr">value</span>: <span class="variable language_">this</span>.<span class="property">startFireworkColor</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">depthWrite</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="attr">blending</span>: <span class="variable constant_">THREE</span>.<span class="property">AdditiveBlending</span>,</span><br><span class="line">      <span class="attr">vertexShader</span>: <span class="string">`</span></span><br><span class="line"><span class="string">    attribute float aScale;</span></span><br><span class="line"><span class="string">    attribute vec3 direction;</span></span><br><span class="line"><span class="string">    uniform float uSize;</span></span><br><span class="line"><span class="string">    uniform float uTime;</span></span><br><span class="line"><span class="string">    uniform float uExplodeTime;</span></span><br><span class="line"><span class="string">    void main() &#123;</span></span><br><span class="line"><span class="string">        vec4 modelPosition = modelMatrix * vec4(position, 1.0);</span></span><br><span class="line"><span class="string">        modelPosition.xyz += direction * uTime / 2.5;</span></span><br><span class="line"><span class="string">        vec4 viewPosition = viewMatrix * modelPosition;</span></span><br><span class="line"><span class="string">        gl_Position = projectionMatrix * viewPosition;</span></span><br><span class="line"><span class="string">        if (uTime / uExplodeTime &gt;= 0.8) &#123;</span></span><br><span class="line"><span class="string">            gl_PointSize = 0.0;</span></span><br><span class="line"><span class="string">            return;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        gl_PointSize = uSize * aScale / -viewPosition.z * 10.0 * (1.0 - uTime / uExplodeTime);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">`</span>,</span><br><span class="line">      <span class="attr">fragmentShader</span>: <span class="string">`</span></span><br><span class="line"><span class="string">      uniform vec3 uColor;</span></span><br><span class="line"><span class="string">void main() &#123;</span></span><br><span class="line"><span class="string">    float distanceToCenter = distance(gl_PointCoord, vec2(0.5));</span></span><br><span class="line"><span class="string">    float strength = 1.0 - distanceToCenter * 2.0;</span></span><br><span class="line"><span class="string">    strength = pow(strength, 1.5);</span></span><br><span class="line"><span class="string">    gl_FragColor = vec4(uColor, strength);</span></span><br><span class="line"><span class="string">&#125;`</span>,</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">firework</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Points</span>(</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">fireworkGeometry</span>,</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">fireworkMaterial</span></span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>修改update函数如下，到达爆炸时间的时候就让移除初始烟花，并显示爆炸后的烟花</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">update</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">end</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> elapsedTime = <span class="variable language_">this</span>.<span class="property">clock</span>.<span class="title function_">getElapsedTime</span>();</span><br><span class="line">    <span class="keyword">if</span> (elapsedTime &gt;= <span class="variable language_">this</span>.<span class="property">flyTime</span> &amp;&amp; <span class="variable language_">this</span>.<span class="property">flying</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">flying</span> = <span class="literal">false</span>;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">explode</span> = <span class="literal">true</span>;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">clock</span>.<span class="title function_">start</span>();</span><br><span class="line"></span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">createFirework</span>(<span class="variable language_">this</span>.<span class="property">fireworkShowPosition</span>);</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">startPoint</span>.<span class="title function_">clear</span>();</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">scene</span>.<span class="title function_">remove</span>(<span class="variable language_">this</span>.<span class="property">startPoint</span>);</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">startGeometry</span>.<span class="title function_">dispose</span>();</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">startMaterial</span>.<span class="title function_">dispose</span>();</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">scene</span>.<span class="title function_">add</span>(<span class="variable language_">this</span>.<span class="property">firework</span>);</span><br><span class="line">      elapsedTime = <span class="number">0.0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">explode</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">firework</span>.<span class="property">material</span>.<span class="property">uniforms</span>.<span class="property">uTime</span>.<span class="property">value</span> = elapsedTime;</span><br><span class="line">      <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">explodeTime</span> &lt;= elapsedTime) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">scene</span>.<span class="title function_">remove</span>(<span class="variable language_">this</span>.<span class="property">firework</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">firework</span>.<span class="title function_">clear</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">explode</span> = <span class="literal">false</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">end</span> = <span class="literal">true</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">fireworkGeometry</span>.<span class="title function_">dispose</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">fireworkMaterial</span>.<span class="title function_">dispose</span>();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">startMaterial</span>.<span class="property">uniforms</span>.<span class="property">uTime</span>.<span class="property">value</span> = <span class="variable language_">this</span>.<span class="property">clock</span>.<span class="title function_">getElapsedTime</span>();</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><p>这里为了不多弄文件，选择将代码全部堆在App.vue里面了</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">OrbitControls</span> &#125; <span class="keyword">from</span> <span class="string">&quot;three/examples/jsm/controls/OrbitControls&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="variable constant_">THREE</span> <span class="keyword">from</span> <span class="string">&quot;three&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 烟花类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">FireWork</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">color, to, <span class="keyword">from</span> = &#123; x: <span class="number">0</span>, y: <span class="number">0</span>, z: <span class="number">0</span> &#125;</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">startFireworkColor</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Color</span>(color);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">startGeometry</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferGeometry</span>();</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">startPositionArray</span> = <span class="keyword">new</span> <span class="title class_">Float32Array</span>([<span class="keyword">from</span>.<span class="property">x</span>, <span class="keyword">from</span>.<span class="property">y</span>, <span class="keyword">from</span>.<span class="property">z</span>]);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">startGeometry</span>.<span class="title function_">setAttribute</span>(</span><br><span class="line">      <span class="string">&quot;position&quot;</span>,</span><br><span class="line">      <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferAttribute</span>(<span class="variable language_">this</span>.<span class="property">startPositionArray</span>, <span class="number">3</span>)</span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">const</span> astepArray = <span class="keyword">new</span> <span class="title class_">Float32Array</span>(<span class="number">3</span>);</span><br><span class="line">    astepArray[<span class="number">0</span>] = to.<span class="property">x</span> - <span class="keyword">from</span>.<span class="property">x</span>;</span><br><span class="line">    astepArray[<span class="number">1</span>] = to.<span class="property">y</span> - <span class="keyword">from</span>.<span class="property">y</span>;</span><br><span class="line">    astepArray[<span class="number">2</span>] = to.<span class="property">z</span> - <span class="keyword">from</span>.<span class="property">z</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">startGeometry</span>.<span class="title function_">setAttribute</span>(</span><br><span class="line">      <span class="string">&quot;aStep&quot;</span>,</span><br><span class="line">      <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferAttribute</span>(astepArray, <span class="number">3</span>)</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">flyTime</span> = <span class="number">1</span> + <span class="title class_">Math</span>.<span class="title function_">random</span>();</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">flyingSpeed</span> = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">10</span> + <span class="number">50</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">flying</span> = <span class="literal">true</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">end</span> = <span class="literal">false</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">explode</span> = <span class="literal">false</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">explodeTime</span> = <span class="title class_">Math</span>.<span class="title function_">random</span>() + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> m = <span class="title class_">Math</span>.<span class="title function_">sqrt</span>(</span><br><span class="line">      <span class="title class_">Math</span>.<span class="title function_">pow</span>(astepArray[<span class="number">0</span>], <span class="number">2</span>) +</span><br><span class="line">        <span class="title class_">Math</span>.<span class="title function_">pow</span>(astepArray[<span class="number">1</span>], <span class="number">2</span>) +</span><br><span class="line">        <span class="title class_">Math</span>.<span class="title function_">pow</span>(astepArray[<span class="number">2</span>], <span class="number">2</span>)</span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">const</span> astepDirection = [</span><br><span class="line">      astepArray[<span class="number">0</span>] / m,</span><br><span class="line">      astepArray[<span class="number">1</span>] / m,</span><br><span class="line">      astepArray[<span class="number">2</span>] / m,</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">fireworkShowPosition</span> = &#123;</span><br><span class="line">      <span class="attr">x</span>: astepDirection[<span class="number">0</span>] * <span class="variable language_">this</span>.<span class="property">flyTime</span> * <span class="variable language_">this</span>.<span class="property">flyingSpeed</span>,</span><br><span class="line">      <span class="attr">y</span>: astepDirection[<span class="number">1</span>] * <span class="variable language_">this</span>.<span class="property">flyTime</span> * <span class="variable language_">this</span>.<span class="property">flyingSpeed</span>,</span><br><span class="line">      <span class="attr">z</span>: astepDirection[<span class="number">2</span>] * <span class="variable language_">this</span>.<span class="property">flyTime</span> * <span class="variable language_">this</span>.<span class="property">flyingSpeed</span>,</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">startMaterial</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">ShaderMaterial</span>(&#123;</span><br><span class="line">      <span class="attr">vertexShader</span>: <span class="string">`attribute vec3 aStep;</span></span><br><span class="line"><span class="string">    uniform float uTime;</span></span><br><span class="line"><span class="string">    uniform float uSize;</span></span><br><span class="line"><span class="string">    uniform float uSpeed;</span></span><br><span class="line"><span class="string">    uniform float uFlyTime;</span></span><br><span class="line"><span class="string">    void main() &#123;</span></span><br><span class="line"><span class="string">        vec4 modelPosition = modelMatrix * vec4(position, 1.0);</span></span><br><span class="line"><span class="string">        if (uTime &lt;= uFlyTime) &#123;</span></span><br><span class="line"><span class="string">            modelPosition.xyz += normalize(aStep) * uTime * uSpeed;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        vec4 viewPosition = viewMatrix * modelPosition;</span></span><br><span class="line"><span class="string">        gl_Position = projectionMatrix * viewPosition;</span></span><br><span class="line"><span class="string">        // gl_PointSize = 200.0 / -viewPosition.z;</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">        gl_PointSize = uSize / -viewPosition.z * 10.0;</span></span><br><span class="line"><span class="string">    &#125;`</span>,</span><br><span class="line">      <span class="attr">fragmentShader</span>: <span class="string">`uniform vec3 uColor;</span></span><br><span class="line"><span class="string">    void main() &#123;</span></span><br><span class="line"><span class="string">        float distanceToCenter = distance(gl_PointCoord, vec2(0.5));</span></span><br><span class="line"><span class="string">        float strength = 1.0 - distanceToCenter * 2.0;</span></span><br><span class="line"><span class="string">        strength = pow(strength, 1.5);</span></span><br><span class="line"><span class="string">        gl_FragColor = vec4(uColor, strength);</span></span><br><span class="line"><span class="string">    &#125;`</span>,</span><br><span class="line">      <span class="attr">transparent</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">blending</span>: <span class="variable constant_">THREE</span>.<span class="property">AdditiveBlending</span>,</span><br><span class="line">      <span class="attr">depthWrite</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="attr">uniforms</span>: &#123;</span><br><span class="line">        <span class="attr">uTime</span>: &#123;</span><br><span class="line">          <span class="attr">value</span>: <span class="number">0</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">uSize</span>: &#123;</span><br><span class="line">          <span class="attr">value</span>: <span class="number">80</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">uSpeed</span>: &#123;</span><br><span class="line">          <span class="attr">value</span>: <span class="variable language_">this</span>.<span class="property">flyingSpeed</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">uFlyTime</span>: &#123;</span><br><span class="line">          <span class="attr">value</span>: <span class="variable language_">this</span>.<span class="property">flyTime</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">uColor</span>: &#123;</span><br><span class="line">          <span class="attr">value</span>: <span class="variable language_">this</span>.<span class="property">startFireworkColor</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">startPoint</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Points</span>(<span class="variable language_">this</span>.<span class="property">startGeometry</span>, <span class="variable language_">this</span>.<span class="property">startMaterial</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">clock</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Clock</span>();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">addScene</span>(<span class="params">scene, camera</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">scene</span> = scene;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">camera</span> = camera;</span><br><span class="line">    scene.<span class="title function_">add</span>(<span class="variable language_">this</span>.<span class="property">startPoint</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">createFirework</span>(<span class="params">to</span>) &#123;</span><br><span class="line">    <span class="comment">//创建爆炸之后的烟花</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">fireworkCount</span> = <span class="number">200</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">fireworkGeometry</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferGeometry</span>();</span><br><span class="line">    <span class="keyword">const</span> fireworkPositionArray = <span class="keyword">new</span> <span class="title class_">Float32Array</span>(<span class="variable language_">this</span>.<span class="property">fireworkCount</span> * <span class="number">3</span>);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">fireworkScaleArray</span> = <span class="keyword">new</span> <span class="title class_">Float32Array</span>(<span class="variable language_">this</span>.<span class="property">fireworkCount</span>);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">directionArray</span> = <span class="keyword">new</span> <span class="title class_">Float32Array</span>(<span class="variable language_">this</span>.<span class="property">fireworkCount</span> * <span class="number">3</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="variable language_">this</span>.<span class="property">fireworkCount</span>; i++) &#123;</span><br><span class="line">      fireworkPositionArray[i * <span class="number">3</span>] = to.<span class="property">x</span>;</span><br><span class="line">      fireworkPositionArray[i * <span class="number">3</span> + <span class="number">1</span>] = to.<span class="property">y</span>;</span><br><span class="line">      fireworkPositionArray[i * <span class="number">3</span> + <span class="number">2</span>] = to.<span class="property">z</span>;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">fireworkScaleArray</span>[i] = <span class="title class_">Math</span>.<span class="title function_">random</span>() + <span class="number">0.5</span>;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">const</span> theta = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">2</span> * <span class="title class_">Math</span>.<span class="property">PI</span>;</span><br><span class="line">      <span class="keyword">const</span> beta = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">2</span> * <span class="title class_">Math</span>.<span class="property">PI</span>;</span><br><span class="line">      <span class="keyword">const</span> radius = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">directionArray</span>[i * <span class="number">3</span>] =</span><br><span class="line">        radius * <span class="title class_">Math</span>.<span class="title function_">sin</span>(theta) + radius * <span class="title class_">Math</span>.<span class="title function_">sin</span>(beta);</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">directionArray</span>[i * <span class="number">3</span> + <span class="number">1</span>] =</span><br><span class="line">        radius * <span class="title class_">Math</span>.<span class="title function_">cos</span>(theta) + radius * <span class="title class_">Math</span>.<span class="title function_">cos</span>(beta);</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">directionArray</span>[i * <span class="number">3</span> + <span class="number">2</span>] =</span><br><span class="line">        radius * <span class="title class_">Math</span>.<span class="title function_">sin</span>(theta) + radius * <span class="title class_">Math</span>.<span class="title function_">cos</span>(beta);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">fireworkGeometry</span>.<span class="title function_">setAttribute</span>(</span><br><span class="line">      <span class="string">&quot;position&quot;</span>,</span><br><span class="line">      <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferAttribute</span>(fireworkPositionArray, <span class="number">3</span>)</span><br><span class="line">    );</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">fireworkGeometry</span>.<span class="title function_">setAttribute</span>(</span><br><span class="line">      <span class="string">&quot;aScale&quot;</span>,</span><br><span class="line">      <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferAttribute</span>(<span class="variable language_">this</span>.<span class="property">fireworkScaleArray</span>, <span class="number">1</span>)</span><br><span class="line">    );</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">fireworkGeometry</span>.<span class="title function_">setAttribute</span>(</span><br><span class="line">      <span class="string">&quot;direction&quot;</span>,</span><br><span class="line">      <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferAttribute</span>(<span class="variable language_">this</span>.<span class="property">directionArray</span>, <span class="number">3</span>)</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">fireworkMaterial</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">ShaderMaterial</span>(&#123;</span><br><span class="line">      <span class="attr">transparent</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">uniforms</span>: &#123;</span><br><span class="line">        <span class="attr">uSize</span>: &#123;</span><br><span class="line">          <span class="attr">value</span>: <span class="number">60.0</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">uTime</span>: &#123;</span><br><span class="line">          <span class="attr">value</span>: <span class="number">0.0</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">uExplodeTime</span>: &#123;</span><br><span class="line">          <span class="attr">value</span>: <span class="variable language_">this</span>.<span class="property">explodeTime</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">uColor</span>: &#123;</span><br><span class="line">          <span class="attr">value</span>: <span class="variable language_">this</span>.<span class="property">startFireworkColor</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">depthWrite</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="attr">blending</span>: <span class="variable constant_">THREE</span>.<span class="property">AdditiveBlending</span>,</span><br><span class="line">      <span class="attr">vertexShader</span>: <span class="string">`</span></span><br><span class="line"><span class="string">    attribute float aScale;</span></span><br><span class="line"><span class="string">    attribute vec3 direction;</span></span><br><span class="line"><span class="string">    uniform float uSize;</span></span><br><span class="line"><span class="string">    uniform float uTime;</span></span><br><span class="line"><span class="string">    uniform float uExplodeTime;</span></span><br><span class="line"><span class="string">    void main() &#123;</span></span><br><span class="line"><span class="string">        vec4 modelPosition = modelMatrix * vec4(position, 1.0);</span></span><br><span class="line"><span class="string">        modelPosition.xyz += direction * uTime / 2.5;</span></span><br><span class="line"><span class="string">        vec4 viewPosition = viewMatrix * modelPosition;</span></span><br><span class="line"><span class="string">        gl_Position = projectionMatrix * viewPosition;</span></span><br><span class="line"><span class="string">        if (uTime / uExplodeTime &gt;= 0.8) &#123;</span></span><br><span class="line"><span class="string">            gl_PointSize = 0.0;</span></span><br><span class="line"><span class="string">            return;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        gl_PointSize = uSize * aScale / -viewPosition.z * 10.0 * (1.0 - uTime / uExplodeTime);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">`</span>,</span><br><span class="line">      <span class="attr">fragmentShader</span>: <span class="string">`</span></span><br><span class="line"><span class="string">uniform vec3 uColor;</span></span><br><span class="line"><span class="string">void main() &#123;</span></span><br><span class="line"><span class="string">    float distanceToCenter = distance(gl_PointCoord, vec2(0.5));</span></span><br><span class="line"><span class="string">    float strength = 1.0 - distanceToCenter * 2.0;</span></span><br><span class="line"><span class="string">    strength = pow(strength, 1.5);</span></span><br><span class="line"><span class="string">    gl_FragColor = vec4(uColor, strength);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">`</span>,</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">firework</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Points</span>(</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">fireworkGeometry</span>,</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">fireworkMaterial</span></span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">update</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">end</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> elapsedTime = <span class="variable language_">this</span>.<span class="property">clock</span>.<span class="title function_">getElapsedTime</span>();</span><br><span class="line">    <span class="keyword">if</span> (elapsedTime &gt;= <span class="variable language_">this</span>.<span class="property">flyTime</span> &amp;&amp; <span class="variable language_">this</span>.<span class="property">flying</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">flying</span> = <span class="literal">false</span>;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">explode</span> = <span class="literal">true</span>;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">clock</span>.<span class="title function_">start</span>();</span><br><span class="line"></span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">createFirework</span>(<span class="variable language_">this</span>.<span class="property">fireworkShowPosition</span>);</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">startPoint</span>.<span class="title function_">clear</span>();</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">scene</span>.<span class="title function_">remove</span>(<span class="variable language_">this</span>.<span class="property">startPoint</span>);</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">startGeometry</span>.<span class="title function_">dispose</span>();</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">startMaterial</span>.<span class="title function_">dispose</span>();</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">scene</span>.<span class="title function_">add</span>(<span class="variable language_">this</span>.<span class="property">firework</span>);</span><br><span class="line">      elapsedTime = <span class="number">0.0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">explode</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">firework</span>.<span class="property">material</span>.<span class="property">uniforms</span>.<span class="property">uTime</span>.<span class="property">value</span> = elapsedTime;</span><br><span class="line">      <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">explodeTime</span> &lt;= elapsedTime) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">scene</span>.<span class="title function_">remove</span>(<span class="variable language_">this</span>.<span class="property">firework</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">firework</span>.<span class="title function_">clear</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">explode</span> = <span class="literal">false</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">end</span> = <span class="literal">true</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">fireworkGeometry</span>.<span class="title function_">dispose</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">fireworkMaterial</span>.<span class="title function_">dispose</span>();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">startMaterial</span>.<span class="property">uniforms</span>.<span class="property">uTime</span>.<span class="property">value</span> = <span class="variable language_">this</span>.<span class="property">clock</span>.<span class="title function_">getElapsedTime</span>();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建基本环境</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> scene = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Scene</span>();</span><br><span class="line"><span class="keyword">const</span> camera = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PerspectiveCamera</span>(</span><br><span class="line">  <span class="number">75</span>,</span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>,</span><br><span class="line">  <span class="number">0.1</span>,</span><br><span class="line">  <span class="number">1000</span></span><br><span class="line">);</span><br><span class="line">camera.<span class="property">position</span>.<span class="property">z</span> = -<span class="number">10</span>;</span><br><span class="line">camera.<span class="property">position</span>.<span class="property">x</span> = -<span class="number">10</span>;</span><br><span class="line">scene.<span class="title function_">add</span>(camera);</span><br><span class="line"><span class="keyword">const</span> renderer = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">WebGLRenderer</span>();</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;preview&quot;</span>).<span class="title function_">appendChild</span>(renderer.<span class="property">domElement</span>);</span><br><span class="line">renderer.<span class="property">domElement</span>.<span class="property">style</span>.<span class="property">width</span> = <span class="string">&quot;100%&quot;</span>;</span><br><span class="line">renderer.<span class="property">domElement</span>.<span class="property">style</span>.<span class="property">height</span> = <span class="string">&quot;100%&quot;</span>;</span><br><span class="line">renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>);</span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;resize&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>);</span><br><span class="line">  camera.<span class="property">aspect</span> = <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>;</span><br><span class="line">  camera.<span class="title function_">updateProjectionMatrix</span>();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> orbitControls = <span class="keyword">new</span> <span class="title class_">OrbitControls</span>(camera, renderer.<span class="property">domElement</span>);</span><br><span class="line">orbitControls.<span class="property">enableDamping</span> = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> fireWorkArr = [];</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">createFireWorks</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">let</span> color = <span class="string">`hsl(<span class="subst">$&#123;<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">360</span>)&#125;</span>, 100%, 80%)`</span>;</span><br><span class="line">  <span class="keyword">let</span> <span class="keyword">from</span> = &#123;</span><br><span class="line">    <span class="attr">x</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">y</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">z</span>: <span class="number">0</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">let</span> to = &#123;</span><br><span class="line">    <span class="attr">x</span>: <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">20</span> - <span class="number">5</span>,</span><br><span class="line">    <span class="attr">y</span>: <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">20</span> + <span class="number">20</span>,</span><br><span class="line">    <span class="attr">z</span>: <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">20</span> - <span class="number">5</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">let</span> fireWork = <span class="keyword">new</span> <span class="title class_">FireWork</span>(color, to, <span class="keyword">from</span>);</span><br><span class="line">  fireWorkArr.<span class="title function_">push</span>(fireWork);</span><br><span class="line">  fireWork.<span class="title function_">addScene</span>(scene, camera);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, createFireWorks);</span><br><span class="line"></span><br><span class="line"><span class="comment">// const axesHelper = new THREE.AxesHelper(10);</span></span><br><span class="line"><span class="comment">// scene.add(axesHelper);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">render</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="title function_">requestAnimationFrame</span>(render);</span><br><span class="line">  fireWorkArr.<span class="title function_">forEach</span>(<span class="function">(<span class="params">fireWork</span>) =&gt;</span> &#123;</span><br><span class="line">    fireWork.<span class="title function_">update</span>();</span><br><span class="line">  &#125;);</span><br><span class="line">  renderer.<span class="title function_">render</span>(scene, camera);</span><br><span class="line">  orbitControls.<span class="title function_">update</span>();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="title function_">render</span>();</span><br></pre></td></tr></table></figure><h2 id="效果预览"><a href="#效果预览" class="headerlink" title="效果预览"></a>效果预览</h2><div class="tip info"><p>如果遇到没有显示或者显示有点问题请刷新一下界面，因为加载可能比较消耗性能和时间</p></div><div class="tip info"><p>点击场景即可发射烟花，拖拽即可旋转场景</p></div><div id="preview"></div><h2 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h2><p>优化的话可以从粒子纹理入手，让烟花变得更加丰富多彩，然后还可以添加烟花发射和爆炸的声音，让烟花更加真实，还可以针对每一个粒子的运动轨迹、颜色等等进行进一步改进，让烟花更多多姿多彩</p><script type="importmap">  {    "imports": {      "three": "https://unpkg.com/three@0.158.0/build/three.module.js",      "three/addons/": "https://unpkg.com/three@0.158.0/examples/jsm/"    }  }</script><script type="module">import {OrbitControls} from "three/addons/controls/OrbitControls";import * as THREE from "three";class FireWork {  constructor(color, to, from = { x: 0, y: 0, z: 0 }) {    this.startFireworkColor = new THREE.Color(color);    this.startGeometry = new THREE.BufferGeometry();    this.startPositionArray = new Float32Array([from.x, from.y, from.z]);    this.startGeometry.setAttribute(      "position",      new THREE.BufferAttribute(this.startPositionArray, 3)    );    const astepArray = new Float32Array(3);    astepArray[0] = to.x - from.x;    astepArray[1] = to.y - from.y;    astepArray[2] = to.z - from.z;    this.startGeometry.setAttribute(      "aStep",      new THREE.BufferAttribute(astepArray, 3)    );    this.flyTime = 1 + Math.random();    this.flyingSpeed = Math.random() * 10 + 50;    this.flying = true;    this.end = false;    this.explode = false;    this.explodeTime = Math.random() + 1;    const m = Math.sqrt(      Math.pow(astepArray[0], 2) +        Math.pow(astepArray[1], 2) +        Math.pow(astepArray[2], 2)    );    const astepDirection = [      astepArray[0] / m,      astepArray[1] / m,      astepArray[2] / m,    ];    this.fireworkShowPosition = {      x: astepDirection[0] * this.flyTime * this.flyingSpeed,      y: astepDirection[1] * this.flyTime * this.flyingSpeed,      z: astepDirection[2] * this.flyTime * this.flyingSpeed,    };    this.startMaterial = new THREE.ShaderMaterial({      vertexShader: `attribute vec3 aStep;    uniform float uTime;    uniform float uSize;    uniform float uSpeed;    uniform float uFlyTime;    void main() {        vec4 modelPosition = modelMatrix * vec4(position, 1.0);        if (uTime <= uFlyTime) {            modelPosition.xyz += normalize(aStep) * uTime * uSpeed;        }        vec4 viewPosition = viewMatrix * modelPosition;        gl_Position = projectionMatrix * viewPosition;        // gl_PointSize = 200.0 / -viewPosition.z;        gl_PointSize = uSize / -viewPosition.z * 10.0;    }`,      fragmentShader: `uniform vec3 uColor;    void main() {        float distanceToCenter = distance(gl_PointCoord, vec2(0.5));        float strength = 1.0 - distanceToCenter * 2.0;        strength = pow(strength, 1.5);        gl_FragColor = vec4(uColor, strength);    }`,      transparent: true,      blending: THREE.AdditiveBlending,      depthWrite: false,      uniforms: {        uTime: {          value: 0,        },        uSize: {          value: 80,        },        uSpeed: {          value: this.flyingSpeed,        },        uFlyTime: {          value: this.flyTime,        },        uColor: {          value: this.startFireworkColor,        },      },    });    this.startPoint = new THREE.Points(this.startGeometry, this.startMaterial);    this.clock = new THREE.Clock();  }  addScene(scene, camera) {    this.scene = scene;    this.camera = camera;    scene.add(this.startPoint);  }  createFirework(to) {    //创建爆炸之后的烟花    this.fireworkCount = 200;    this.fireworkGeometry = new THREE.BufferGeometry();    const fireworkPositionArray = new Float32Array(this.fireworkCount * 3);    this.fireworkScaleArray = new Float32Array(this.fireworkCount);    this.directionArray = new Float32Array(this.fireworkCount * 3);    for (let i = 0; i < this.fireworkCount; i++) {      fireworkPositionArray[i * 3] = to.x;      fireworkPositionArray[i * 3 + 1] = to.y;      fireworkPositionArray[i * 3 + 2] = to.z;      this.fireworkScaleArray[i] = Math.random() + 0.5;      const theta = Math.random() * 2 * Math.PI;      const beta = Math.random() * 2 * Math.PI;      const radius = Math.random() * 10;      this.directionArray[i * 3] =        radius * Math.sin(theta) + radius * Math.sin(beta);      this.directionArray[i * 3 + 1] =        radius * Math.cos(theta) + radius * Math.cos(beta);      this.directionArray[i * 3 + 2] =        radius * Math.sin(theta) + radius * Math.cos(beta);    }    this.fireworkGeometry.setAttribute(      "position",      new THREE.BufferAttribute(fireworkPositionArray, 3)    );    this.fireworkGeometry.setAttribute(      "aScale",      new THREE.BufferAttribute(this.fireworkScaleArray, 1)    );    this.fireworkGeometry.setAttribute(      "direction",      new THREE.BufferAttribute(this.directionArray, 3)    );    this.fireworkMaterial = new THREE.ShaderMaterial({      transparent: true,      uniforms: {        uSize: {          value: 60.0,        },        uTime: {          value: 0.0,        },        uExplodeTime: {          value: this.explodeTime,        },        uColor: {          value: this.startFireworkColor,        },      },      depthWrite: false,      blending: THREE.AdditiveBlending,      vertexShader: `    attribute float aScale;    attribute vec3 direction;    uniform float uSize;    uniform float uTime;    uniform float uExplodeTime;    void main() {        vec4 modelPosition = modelMatrix * vec4(position, 1.0);        modelPosition.xyz += direction * uTime / 2.5;        vec4 viewPosition = viewMatrix * modelPosition;        gl_Position = projectionMatrix * viewPosition;        if (uTime / uExplodeTime >= 0.8) {            gl_PointSize = 0.0;            return;        }        gl_PointSize = uSize * aScale / -viewPosition.z * 10.0 * (1.0 - uTime / uExplodeTime);    }`,      fragmentShader: `uniform vec3 uColor;void main() {    float distanceToCenter = distance(gl_PointCoord, vec2(0.5));    float strength = 1.0 - distanceToCenter * 2.0;    strength = pow(strength, 1.5);    gl_FragColor = vec4(uColor, strength);}`,    });    this.firework = new THREE.Points(      this.fireworkGeometry,      this.fireworkMaterial    );  }  update() {    if (this.end) {      return;    }    let elapsedTime = this.clock.getElapsedTime();    if (elapsedTime >= this.flyTime && this.flying) {      this.flying = false;      this.explode = true;      this.clock.start();      this.createFirework(this.fireworkShowPosition);      this.startPoint.clear();      this.scene.remove(this.startPoint);      this.startGeometry.dispose();      this.startMaterial.dispose();      this.scene.add(this.firework);      elapsedTime = 0.0;    }    if (this.explode) {      this.firework.material.uniforms.uTime.value = elapsedTime;      if (this.explodeTime <= elapsedTime) {        this.scene.remove(this.firework);        this.firework.clear();        this.explode = false;        this.end = true;        this.fireworkGeometry.dispose();        this.fireworkMaterial.dispose();      }    }    this.startMaterial.uniforms.uTime.value = this.clock.getElapsedTime();  }}const scene = new THREE.Scene();const camera = new THREE.PerspectiveCamera(  75,  window.innerWidth / window.innerHeight,  0.1,  1000);camera.position.z = -10;camera.position.x = -10;scene.add(camera);const renderer = new THREE.WebGLRenderer();document.getElementById("preview").appendChild(renderer.domElement);renderer.domElement.style.width = '100%'renderer.domElement.style.height = '100%'renderer.setSize(window.innerWidth, window.innerHeight);window.addEventListener("resize", () => {  renderer.setSize(window.innerWidth, window.innerHeight);  camera.aspect = window.innerWidth / window.innerHeight;  camera.updateProjectionMatrix();});const orbitControls = new OrbitControls(camera, renderer.domElement);orbitControls.enableDamping = true;let fireWorkArr = [];const createFireWorks = () => {  let color = `hsl(${Math.floor(Math.random() * 360)}, 100%, 80%)`;  let from = {    x: 0,    y: 0,    z: 0,  };  let to = {    x: Math.random() * 20 - 5,    y: Math.random() * 20 + 20,    z: Math.random() * 20 - 5,  };  let fireWork = new FireWork(color, to, from);  fireWorkArr.push(fireWork);  fireWork.addScene(scene, camera);};window.addEventListener("click", createFireWorks);// const axesHelper = new THREE.AxesHelper(10);// scene.add(axesHelper);const render = () => {  requestAnimationFrame(render);  fireWorkArr.forEach((fireWork) => {    fireWork.update();  });  renderer.render(scene, camera);  orbitControls.update();};render();</script>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> three.js </tag>
            
            <tag> 特效 </tag>
            
            <tag> 着色器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自建VPN的一次经历</title>
      <link href="/posts/b0879484.html"/>
      <url>/posts/b0879484.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>因为一直好奇vpn是怎么工作的，所以就想着自己搭建一次vpn</p><p>这次搭建既成功了也失败了，就是能够成功访问国外网站，但是过一会服务器就被强行关闭了，因为服务器厂商不允许使用云服务器搭建vpn</p><p>之后会换一个国外的服务器厂商继续尝试一次搭建</p><h2 id="搭建过程"><a href="#搭建过程" class="headerlink" title="搭建过程"></a>搭建过程</h2><h3 id="购买服务器"><a href="#购买服务器" class="headerlink" title="购买服务器"></a>购买服务器</h3><p>这里要注意的是，服务器必须是境外服务器，比如美国、香港等，不能是大陆服务器</p><div class="tip info"><p>大部分国内的服务器厂商是不允许搭建 vpn 的</p></div><p>服务器我用的是搭建博客的服务器</p><h3 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h3><p>我也是参考了网络上的教程，使用shadowsocksR这个软件进行搭建的</p><p>这里给出教程的链接</p><a class="tag-Link" target="_blank" href="https://v2xtls.org/shadowsocksr-ssr一键脚本/" title="shadowsocksR教程">  <div class="tag-link-tips">  引用站外地址，不保证站点的可用性和安全性</div>  <div class="tag-link-bottom"><div class="tag-link-left"><i class="xingzhifont icon-link"></i></div><div class="tag-link-right">  <div class="tag-link-title">shadowsocksR教程</div>  <div class="tag-link-sitename">shadowsocksR</div>  </div><i class="xingzhifont icon-arrow-right-s-line"></i></div></a><p>先用ssh连接上服务器，然后输入安装脚本，把软件先安装好</p><p>输入下面的安装脚本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -sL https://raw.githubusercontent.com/luciferkids/hijkpw-scripts/main/ssr.sh)</span><br></pre></td></tr></table></figure><p>然后跟着安装教程走下去就好，其中遇到选择的时候选择默认的就好</p><p>安装完成之后会输出下面的内容，可以截图保存</p><p>  <a href="https://img.hoshinagi.top/post/4301699458079_.pic.jpg" data-fancybox="images" data-caption="输出内容" class="fancybox">  <img src="https://img.hoshinagi.top/post/4301699458079_.pic.jpg" data-lazy-src="https://img.hoshinagi.top/post/4301699458079_.pic.jpg" alt="输出内容" class="entered">  </a>  <div class="img-alt is-center">输出内容</div>  </p>  <h3 id="安装客户端"><a href="#安装客户端" class="headerlink" title="安装客户端"></a>安装客户端</h3><p>在你的电脑上安装客户端</p><p>我这里给的是mac端的客户端，其他操作系统的客户端也可以从下面这个链接找</p><a class="tag-Link" target="_blank" href="https://v2xtls.org/shadowsocksr-ssr-mac客户端下载/" title="shadowsocksr客户端">  <div class="tag-link-tips">  引用站外地址，不保证站点的可用性和安全性</div>  <div class="tag-link-bottom"><div class="tag-link-left"><i class="xingzhifont icon-link"></i></div><div class="tag-link-right">  <div class="tag-link-title">shadowsocksr客户端</div>  <div class="tag-link-sitename"></div>  </div><i class="xingzhifont icon-arrow-right-s-line"></i></div></a><h3 id="配置客户端"><a href="#配置客户端" class="headerlink" title="配置客户端"></a>配置客户端</h3><p>进入客户端，打开服务器设置</p><p>  <a href="https://img.hoshinagi.top/post/4301699458079_.pic.jpg" data-fancybox="images" data-caption="编辑配置" class="fancybox">  <img src="https://img.hoshinagi.top/post/4301699458079_.pic.jpg" data-lazy-src="https://img.hoshinagi.top/post/4301699458079_.pic.jpg" alt="编辑配置" class="entered">  </a>  <div class="img-alt is-center">编辑配置</div>  </p>  <p>点击+号，然后输入你的服务器配置，不知道的直接留空就好</p><p>配置完成之后，点击打开shadowsocksr，然后你就可以访问国外网站了</p>]]></content>
      
      
      <categories>
          
          <category> 经验分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> vpn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用着色器打造星系效果</title>
      <link href="/posts/ab9362b2.html"/>
      <url>/posts/ab9362b2.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>现在重新学习一遍着色器，已经学到用着色器打造粒子效果了</p><p>代码其实跟前面打造岩浆效果差不多，也是使用着色器材质，对顶点的x、y、z轴进行规则性的随机分布，然后传递一个时间参数，让顶点的x、y轴位置不断绕着中心改变</p><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><p>这里不再详细赘述环境相关的代码，其实就是安装一下three.js，然后初始化一下场景，写一个渲染函数进行渲染</p><p>这里直接上代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="variable constant_">THREE</span> <span class="keyword">from</span> <span class="string">&quot;three&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">OrbitControls</span> &#125; <span class="keyword">from</span> <span class="string">&quot;three/examples/jsm/controls/OrbitControls&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> scene = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Scene</span>();</span><br><span class="line"><span class="keyword">const</span> camera = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PerspectiveCamera</span>(</span><br><span class="line">  <span class="number">75</span>,</span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>,</span><br><span class="line">  <span class="number">0.1</span>,</span><br><span class="line">  <span class="number">1000</span></span><br><span class="line">);</span><br><span class="line">camera.<span class="property">position</span>.<span class="title function_">set</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">10</span>);</span><br><span class="line">scene.<span class="title function_">add</span>(camera);</span><br><span class="line"><span class="keyword">const</span> renderer = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">WebGLRenderer</span>();</span><br><span class="line">renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>);</span><br><span class="line"><span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(renderer.<span class="property">domElement</span>);</span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;resize&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>);</span><br><span class="line">  camera.<span class="property">aspect</span> = <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>;</span><br><span class="line">  camera.<span class="title function_">updateProjectionMatrix</span>();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> orbitControls = <span class="keyword">new</span> <span class="title class_">OrbitControls</span>(camera, renderer.<span class="property">domElement</span>);</span><br><span class="line">orbitControls.<span class="property">enableDamping</span> = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> clock = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Clock</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">render</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  renderer.<span class="title function_">render</span>(scene, camera);</span><br><span class="line">  orbitControls.<span class="title function_">update</span>();</span><br><span class="line">  <span class="title function_">requestAnimationFrame</span>(render);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="title function_">render</span>();</span><br></pre></td></tr></table></figure><h2 id="打造星系"><a href="#打造星系" class="headerlink" title="打造星系"></a>打造星系</h2><h3 id="添加星系参数"><a href="#添加星系参数" class="headerlink" title="添加星系参数"></a>添加星系参数</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> params = &#123;</span><br><span class="line">  <span class="attr">count</span>: <span class="number">1000</span>, <span class="comment">//数量</span></span><br><span class="line">  <span class="attr">size</span>: <span class="number">0.1</span>, <span class="comment">//大小</span></span><br><span class="line">  <span class="attr">color</span>: <span class="string">&quot;#24C7D6&quot;</span>, <span class="comment">//中心的颜色</span></span><br><span class="line">  <span class="attr">branch</span>: <span class="number">4</span>, <span class="comment">//多少个星臂</span></span><br><span class="line">  <span class="attr">radius</span>: <span class="number">5</span>, <span class="comment">//星系半径</span></span><br><span class="line">  <span class="attr">rotateScale</span>: <span class="number">0.5</span>, <span class="comment">//星系旋转的速度</span></span><br><span class="line">  <span class="attr">endColor</span>: <span class="string">&quot;#A343E3&quot;</span>, <span class="comment">//星系外圈的颜色</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="添加星系纹理，就是星星的图案"><a href="#添加星系纹理，就是星星的图案" class="headerlink" title="添加星系纹理，就是星星的图案"></a>添加星系纹理，就是星星的图案</h3><p>这里需要将路径改为自己图片的路径</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> textureLoader = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">TextureLoader</span>();</span><br><span class="line"><span class="keyword">const</span> particleTexture = textureLoader.<span class="title function_">load</span>(<span class="string">&quot;./textures/particles/1.png&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="创建星系"><a href="#创建星系" class="headerlink" title="创建星系"></a>创建星系</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> geometry = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">let</span> material = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">let</span> points = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">genertateGalaxy</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  geometry = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferGeometry</span>();</span><br><span class="line">  <span class="comment">//随机生成位置</span></span><br><span class="line">  <span class="keyword">const</span> positions = <span class="keyword">new</span> <span class="title class_">Float32Array</span>(params.<span class="property">count</span> * <span class="number">3</span>);</span><br><span class="line">  <span class="comment">//顶点颜色</span></span><br><span class="line">  <span class="keyword">const</span> colors = <span class="keyword">new</span> <span class="title class_">Float32Array</span>(params.<span class="property">count</span> * <span class="number">3</span>);</span><br><span class="line">  <span class="comment">//缩放</span></span><br><span class="line">  <span class="keyword">const</span> aScale = <span class="keyword">new</span> <span class="title class_">Float32Array</span>(params.<span class="property">count</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> centerColor = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Color</span>(params.<span class="property">color</span>);</span><br><span class="line">  <span class="keyword">const</span> endColor = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Color</span>(params.<span class="property">endColor</span>);</span><br><span class="line">  <span class="comment">//循环生成点</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; params.<span class="property">count</span>; i++) &#123;</span><br><span class="line">    <span class="comment">//判断当前的点在那一条分支上</span></span><br><span class="line">    <span class="keyword">const</span> branchAngle = (i % params.<span class="property">branch</span>) * ((<span class="title class_">Math</span>.<span class="property">PI</span> * <span class="number">2</span>) / params.<span class="property">branch</span>);</span><br><span class="line">    <span class="comment">//当前点距离圆心的距离</span></span><br><span class="line">    <span class="comment">// const distance = Math.random() * params.radius * Math.pow(Math.random(), 3);</span></span><br><span class="line">    <span class="keyword">const</span> distance = <span class="title class_">Math</span>.<span class="title function_">random</span>() * params.<span class="property">radius</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> randomX =</span><br><span class="line">      <span class="title class_">Math</span>.<span class="title function_">pow</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">2</span> - <span class="number">1</span>, <span class="number">3</span>) * (params.<span class="property">radius</span> - distance) * <span class="number">0.3</span>;</span><br><span class="line">    <span class="keyword">const</span> randomY =</span><br><span class="line">      <span class="title class_">Math</span>.<span class="title function_">pow</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">2</span> - <span class="number">1</span>, <span class="number">3</span>) * (params.<span class="property">radius</span> - distance) * <span class="number">0.3</span>;</span><br><span class="line">    <span class="keyword">const</span> randomZ =</span><br><span class="line">      <span class="title class_">Math</span>.<span class="title function_">pow</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">2</span> - <span class="number">1</span>, <span class="number">3</span>) * (params.<span class="property">radius</span> - distance) * <span class="number">0.3</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> current = i * <span class="number">3</span>;</span><br><span class="line">    positions[current] =</span><br><span class="line">      <span class="title class_">Math</span>.<span class="title function_">cos</span>(branchAngle + distance * params.<span class="property">rotateScale</span>) * distance +</span><br><span class="line">      randomX;</span><br><span class="line">    positions[current + <span class="number">1</span>] = <span class="number">0</span> + randomY;</span><br><span class="line">    positions[current + <span class="number">2</span>] =</span><br><span class="line">      <span class="title class_">Math</span>.<span class="title function_">sin</span>(branchAngle + distance * params.<span class="property">rotateScale</span>) * distance +</span><br><span class="line">      randomZ;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//混合颜色，形成渐变</span></span><br><span class="line">    <span class="keyword">const</span> mixColor = centerColor.<span class="title function_">clone</span>();</span><br><span class="line">    mixColor.<span class="title function_">lerp</span>(endColor, distance / params.<span class="property">radius</span>);</span><br><span class="line">    colors[current] = mixColor.<span class="property">r</span>;</span><br><span class="line">    colors[current + <span class="number">1</span>] = mixColor.<span class="property">g</span>;</span><br><span class="line">    colors[current + <span class="number">2</span>] = mixColor.<span class="property">b</span>;</span><br><span class="line"></span><br><span class="line">    aScale[i] = <span class="title class_">Math</span>.<span class="title function_">random</span>() + <span class="number">0.1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  geometry.<span class="title function_">setAttribute</span>(<span class="string">&quot;position&quot;</span>, <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferAttribute</span>(positions, <span class="number">3</span>));</span><br><span class="line">  geometry.<span class="title function_">setAttribute</span>(<span class="string">&quot;color&quot;</span>, <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferAttribute</span>(colors, <span class="number">3</span>));</span><br><span class="line">  geometry.<span class="title function_">setAttribute</span>(<span class="string">&quot;aScale&quot;</span>, <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferAttribute</span>(aScale, <span class="number">1</span>));</span><br><span class="line">  <span class="comment">//设置点材质</span></span><br><span class="line">  material = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">ShaderMaterial</span>(&#123;</span><br><span class="line">    <span class="attr">vertexShader</span>: <span class="string">`</span></span><br><span class="line"><span class="string">    // varying float vec3 vColor;</span></span><br><span class="line"><span class="string">    attribute float aScale;</span></span><br><span class="line"><span class="string">    uniform float uTime;</span></span><br><span class="line"><span class="string">    varying vec3 vColor;</span></span><br><span class="line"><span class="string">    void main() &#123;</span></span><br><span class="line"><span class="string">      vec4 modelPosition = modelMatrix * vec4(position, 1.0);</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">      float angle = atan(modelPosition.x, modelPosition.z);</span></span><br><span class="line"><span class="string">      float distanceToCenter = length(modelPosition.xz);</span></span><br><span class="line"><span class="string">      float angleOffset = 1.0 / distanceToCenter * uTime;</span></span><br><span class="line"><span class="string">      angle += angleOffset;</span></span><br><span class="line"><span class="string">      modelPosition.x = cos(angle) * distanceToCenter;</span></span><br><span class="line"><span class="string">      modelPosition.z = sin(angle) * distanceToCenter;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">      vec4 viewPosition = viewMatrix * modelPosition;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">      gl_Position = projectionMatrix * viewPosition;</span></span><br><span class="line"><span class="string">      gl_PointSize = 200.0 / -viewPosition.z * aScale;</span></span><br><span class="line"><span class="string">      vColor = color;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  `</span>,</span><br><span class="line">    <span class="attr">fragmentShader</span>: <span class="string">`</span></span><br><span class="line"><span class="string">    uniform sampler2D uTexture;</span></span><br><span class="line"><span class="string">    varying vec3 vColor;</span></span><br><span class="line"><span class="string">    void main() &#123;</span></span><br><span class="line"><span class="string">      vec4 textureColor = texture2D(uTexture, gl_PointCoord);</span></span><br><span class="line"><span class="string">      gl_FragColor = vec4(vColor, textureColor.r);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  `</span>,</span><br><span class="line">    <span class="comment">// sizeAttenuation: true,</span></span><br><span class="line">    <span class="attr">depthWrite</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">blending</span>: <span class="variable constant_">THREE</span>.<span class="property">AdditiveBlending</span>,</span><br><span class="line">    <span class="attr">transparent</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">vertexColors</span>: <span class="literal">true</span>, <span class="comment">//设置顶点的颜色</span></span><br><span class="line">    <span class="attr">side</span>: <span class="variable constant_">THREE</span>.<span class="property">DoubleSide</span>,</span><br><span class="line">    <span class="attr">uniforms</span>: &#123;</span><br><span class="line">      <span class="attr">uTexture</span>: &#123;</span><br><span class="line">        <span class="attr">value</span>: particleTexture,</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">uTime</span>: &#123;</span><br><span class="line">        <span class="attr">value</span>: <span class="number">0</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;);</span><br><span class="line">  points = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Points</span>(geometry, material);</span><br><span class="line">  scene.<span class="title function_">add</span>(points);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="title function_">genertateGalaxy</span>();</span><br></pre></td></tr></table></figure><h3 id="传递时间参数"><a href="#传递时间参数" class="headerlink" title="传递时间参数"></a>传递时间参数</h3><p>将时间传递给着色器，修改渲染函数如下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">render</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  renderer.<span class="title function_">render</span>(scene, camera);</span><br><span class="line">  material.<span class="property">uniforms</span>.<span class="property">uTime</span>.<span class="property">value</span> = clock.<span class="title function_">getElapsedTime</span>();</span><br><span class="line">  orbitControls.<span class="title function_">update</span>();</span><br><span class="line">  <span class="title function_">requestAnimationFrame</span>(render);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="variable constant_">THREE</span> <span class="keyword">from</span> <span class="string">&quot;three&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">OrbitControls</span> &#125; <span class="keyword">from</span> <span class="string">&quot;three/examples/jsm/controls/OrbitControls&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> scene = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Scene</span>();</span><br><span class="line"><span class="keyword">const</span> camera = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PerspectiveCamera</span>(</span><br><span class="line">  <span class="number">75</span>,</span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>,</span><br><span class="line">  <span class="number">0.1</span>,</span><br><span class="line">  <span class="number">1000</span></span><br><span class="line">);</span><br><span class="line">camera.<span class="property">position</span>.<span class="title function_">set</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">10</span>);</span><br><span class="line">scene.<span class="title function_">add</span>(camera);</span><br><span class="line"><span class="keyword">const</span> renderer = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">WebGLRenderer</span>();</span><br><span class="line">renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>);</span><br><span class="line"><span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(renderer.<span class="property">domElement</span>);</span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;resize&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>);</span><br><span class="line">  camera.<span class="property">aspect</span> = <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>;</span><br><span class="line">  camera.<span class="title function_">updateProjectionMatrix</span>();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> orbitControls = <span class="keyword">new</span> <span class="title class_">OrbitControls</span>(camera, renderer.<span class="property">domElement</span>);</span><br><span class="line">orbitControls.<span class="property">enableDamping</span> = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> textureLoader = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">TextureLoader</span>();</span><br><span class="line"><span class="keyword">const</span> particleTexture = textureLoader.<span class="title function_">load</span>(<span class="string">&quot;./textures/particles/1.png&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> params = &#123;</span><br><span class="line">  <span class="attr">count</span>: <span class="number">1000</span>,</span><br><span class="line">  <span class="attr">size</span>: <span class="number">0.1</span>,</span><br><span class="line">  <span class="attr">color</span>: <span class="string">&quot;#24C7D6&quot;</span>,</span><br><span class="line">  <span class="attr">branch</span>: <span class="number">4</span>,</span><br><span class="line">  <span class="attr">radius</span>: <span class="number">5</span>,</span><br><span class="line">  <span class="attr">rotateScale</span>: <span class="number">0.5</span>,</span><br><span class="line">  <span class="attr">endColor</span>: <span class="string">&quot;#A343E3&quot;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> geometry = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">let</span> material = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">let</span> points = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">genertateGalaxy</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  geometry = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferGeometry</span>();</span><br><span class="line">  <span class="comment">//随机生成位置</span></span><br><span class="line">  <span class="keyword">const</span> positions = <span class="keyword">new</span> <span class="title class_">Float32Array</span>(params.<span class="property">count</span> * <span class="number">3</span>);</span><br><span class="line">  <span class="comment">//顶点颜色</span></span><br><span class="line">  <span class="keyword">const</span> colors = <span class="keyword">new</span> <span class="title class_">Float32Array</span>(params.<span class="property">count</span> * <span class="number">3</span>);</span><br><span class="line">  <span class="comment">//缩放</span></span><br><span class="line">  <span class="keyword">const</span> aScale = <span class="keyword">new</span> <span class="title class_">Float32Array</span>(params.<span class="property">count</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> centerColor = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Color</span>(params.<span class="property">color</span>);</span><br><span class="line">  <span class="keyword">const</span> endColor = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Color</span>(params.<span class="property">endColor</span>);</span><br><span class="line">  <span class="comment">//循环生成点</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; params.<span class="property">count</span>; i++) &#123;</span><br><span class="line">    <span class="comment">//判断当前的点在那一条分支上</span></span><br><span class="line">    <span class="keyword">const</span> branchAngle = (i % params.<span class="property">branch</span>) * ((<span class="title class_">Math</span>.<span class="property">PI</span> * <span class="number">2</span>) / params.<span class="property">branch</span>);</span><br><span class="line">    <span class="comment">//当前点距离圆心的距离</span></span><br><span class="line">    <span class="comment">// const distance = Math.random() * params.radius * Math.pow(Math.random(), 3);</span></span><br><span class="line">    <span class="keyword">const</span> distance = <span class="title class_">Math</span>.<span class="title function_">random</span>() * params.<span class="property">radius</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> randomX =</span><br><span class="line">      <span class="title class_">Math</span>.<span class="title function_">pow</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">2</span> - <span class="number">1</span>, <span class="number">3</span>) * (params.<span class="property">radius</span> - distance) * <span class="number">0.3</span>;</span><br><span class="line">    <span class="keyword">const</span> randomY =</span><br><span class="line">      <span class="title class_">Math</span>.<span class="title function_">pow</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">2</span> - <span class="number">1</span>, <span class="number">3</span>) * (params.<span class="property">radius</span> - distance) * <span class="number">0.3</span>;</span><br><span class="line">    <span class="keyword">const</span> randomZ =</span><br><span class="line">      <span class="title class_">Math</span>.<span class="title function_">pow</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">2</span> - <span class="number">1</span>, <span class="number">3</span>) * (params.<span class="property">radius</span> - distance) * <span class="number">0.3</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> current = i * <span class="number">3</span>;</span><br><span class="line">    positions[current] =</span><br><span class="line">      <span class="title class_">Math</span>.<span class="title function_">cos</span>(branchAngle + distance * params.<span class="property">rotateScale</span>) * distance +</span><br><span class="line">      randomX;</span><br><span class="line">    positions[current + <span class="number">1</span>] = <span class="number">0</span> + randomY;</span><br><span class="line">    positions[current + <span class="number">2</span>] =</span><br><span class="line">      <span class="title class_">Math</span>.<span class="title function_">sin</span>(branchAngle + distance * params.<span class="property">rotateScale</span>) * distance +</span><br><span class="line">      randomZ;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//混合颜色，形成渐变</span></span><br><span class="line">    <span class="keyword">const</span> mixColor = centerColor.<span class="title function_">clone</span>();</span><br><span class="line">    mixColor.<span class="title function_">lerp</span>(endColor, distance / params.<span class="property">radius</span>);</span><br><span class="line">    colors[current] = mixColor.<span class="property">r</span>;</span><br><span class="line">    colors[current + <span class="number">1</span>] = mixColor.<span class="property">g</span>;</span><br><span class="line">    colors[current + <span class="number">2</span>] = mixColor.<span class="property">b</span>;</span><br><span class="line"></span><br><span class="line">    aScale[i] = <span class="title class_">Math</span>.<span class="title function_">random</span>() + <span class="number">0.1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  geometry.<span class="title function_">setAttribute</span>(<span class="string">&quot;position&quot;</span>, <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferAttribute</span>(positions, <span class="number">3</span>));</span><br><span class="line">  geometry.<span class="title function_">setAttribute</span>(<span class="string">&quot;color&quot;</span>, <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferAttribute</span>(colors, <span class="number">3</span>));</span><br><span class="line">  geometry.<span class="title function_">setAttribute</span>(<span class="string">&quot;aScale&quot;</span>, <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferAttribute</span>(aScale, <span class="number">1</span>));</span><br><span class="line">  <span class="comment">//设置点材质</span></span><br><span class="line">  material = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">ShaderMaterial</span>(&#123;</span><br><span class="line">    <span class="attr">vertexShader</span>: <span class="string">`</span></span><br><span class="line"><span class="string">    // varying float vec3 vColor;</span></span><br><span class="line"><span class="string">    attribute float aScale;</span></span><br><span class="line"><span class="string">    uniform float uTime;</span></span><br><span class="line"><span class="string">    varying vec3 vColor;</span></span><br><span class="line"><span class="string">    void main() &#123;</span></span><br><span class="line"><span class="string">      vec4 modelPosition = modelMatrix * vec4(position, 1.0);</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">      float angle = atan(modelPosition.x, modelPosition.z);</span></span><br><span class="line"><span class="string">      float distanceToCenter = length(modelPosition.xz);</span></span><br><span class="line"><span class="string">      float angleOffset = 1.0 / distanceToCenter * uTime;</span></span><br><span class="line"><span class="string">      angle += angleOffset;</span></span><br><span class="line"><span class="string">      modelPosition.x = cos(angle) * distanceToCenter;</span></span><br><span class="line"><span class="string">      modelPosition.z = sin(angle) * distanceToCenter;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">      vec4 viewPosition = viewMatrix * modelPosition;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">      gl_Position = projectionMatrix * viewPosition;</span></span><br><span class="line"><span class="string">      gl_PointSize = 200.0 / -viewPosition.z * aScale;</span></span><br><span class="line"><span class="string">      vColor = color;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  `</span>,</span><br><span class="line">    <span class="attr">fragmentShader</span>: <span class="string">`</span></span><br><span class="line"><span class="string">    uniform sampler2D uTexture;</span></span><br><span class="line"><span class="string">    varying vec3 vColor;</span></span><br><span class="line"><span class="string">    void main() &#123;</span></span><br><span class="line"><span class="string">      // float strength = distance(gl_PointCoord, vec2(0.5));</span></span><br><span class="line"><span class="string">      // strength = 1.0 - (strength * 2.0);</span></span><br><span class="line"><span class="string">      // gl_FragColor = vec4(strength);</span></span><br><span class="line"><span class="string">      vec4 textureColor = texture2D(uTexture, gl_PointCoord);</span></span><br><span class="line"><span class="string">      gl_FragColor = vec4(vColor, textureColor.r);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  `</span>,</span><br><span class="line">    <span class="comment">// sizeAttenuation: true,</span></span><br><span class="line">    <span class="attr">depthWrite</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">blending</span>: <span class="variable constant_">THREE</span>.<span class="property">AdditiveBlending</span>,</span><br><span class="line">    <span class="attr">transparent</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">vertexColors</span>: <span class="literal">true</span>, <span class="comment">//设置顶点的颜色</span></span><br><span class="line">    <span class="attr">side</span>: <span class="variable constant_">THREE</span>.<span class="property">DoubleSide</span>,</span><br><span class="line">    <span class="attr">uniforms</span>: &#123;</span><br><span class="line">      <span class="attr">uTexture</span>: &#123;</span><br><span class="line">        <span class="attr">value</span>: particleTexture,</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">uTime</span>: &#123;</span><br><span class="line">        <span class="attr">value</span>: <span class="number">0</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;);</span><br><span class="line">  points = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Points</span>(geometry, material);</span><br><span class="line">  scene.<span class="title function_">add</span>(points);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="title function_">genertateGalaxy</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> axesHelper = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">AxesHelper</span>(<span class="number">10</span>);</span><br><span class="line">scene.<span class="title function_">add</span>(axesHelper);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> clock = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Clock</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">render</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  renderer.<span class="title function_">render</span>(scene, camera);</span><br><span class="line">  material.<span class="property">uniforms</span>.<span class="property">uTime</span>.<span class="property">value</span> = clock.<span class="title function_">getElapsedTime</span>();</span><br><span class="line">  orbitControls.<span class="title function_">update</span>();</span><br><span class="line">  <span class="title function_">requestAnimationFrame</span>(render);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="title function_">render</span>();</span><br></pre></td></tr></table></figure><h2 id="效果预览"><a href="#效果预览" class="headerlink" title="效果预览"></a>效果预览</h2><div class="tip info"><p>如果遇到没有显示或者显示有点问题请刷新一下界面，因为加载可能比较消耗性能和时间</p></div><div id="preview" style="position: relative;"></div><script type="importmap">  {    "imports": {      "three": "https://unpkg.com/three@0.158.0/build/three.module.js",      "three/addons/": "https://unpkg.com/three@0.158.0/examples/jsm/"    }  }</script><script type="module">import * as THREE from "three";import {OrbitControls} from "three/addons/controls/OrbitControls";const scene = new THREE.Scene();const camera = new THREE.PerspectiveCamera(  75,  window.innerWidth / window.innerHeight,  0.1,  1000);camera.position.set(0, 0, 10);scene.add(camera);const renderer = new THREE.WebGLRenderer();renderer.setSize(window.innerWidth, window.innerHeight);document.getElementById("preview").appendChild(renderer.domElement);renderer.domElement.style.width = '100%'renderer.domElement.style.height = '100%'// document.body.appendChild(renderer.domElement);window.addEventListener("resize", () => {  renderer.setSize(window.innerWidth, window.innerHeight);  camera.aspect = window.innerWidth / window.innerHeight;  camera.updateProjectionMatrix();});const orbitControls = new OrbitControls(camera, renderer.domElement);orbitControls.enableDamping = true;const textureLoader = new THREE.TextureLoader();const particleTexture = textureLoader.load("https://img.hoshinagi.top/post/1.png");const params = {  count: 1000,  size: 0.1,  color: "#24C7D6",  branch: 4,  radius: 5,  rotateScale: 0.5,  endColor: "#A343E3",};let geometry = null;let material = null;let points = null;const genertateGalaxy = () => {  geometry = new THREE.BufferGeometry();  //随机生成位置  const positions = new Float32Array(params.count * 3);  //顶点颜色  const colors = new Float32Array(params.count * 3);  //缩放  const aScale = new Float32Array(params.count);  const centerColor = new THREE.Color(params.color);  const endColor = new THREE.Color(params.endColor);  //循环生成点  for (let i = 0; i < params.count; i++) {    //判断当前的点在那一条分支上    const branchAngle = (i % params.branch) * ((Math.PI * 2) / params.branch);    //当前点距离圆心的距离    // const distance = Math.random() * params.radius * Math.pow(Math.random(), 3);    const distance = Math.random() * params.radius;    const randomX =      (Math.pow(Math.random() * 2 - 1, 3) * (params.radius - distance)) * 0.3;    const randomY =      (Math.pow(Math.random() * 2 - 1, 3) * (params.radius - distance)) * 0.3;    const randomZ =      (Math.pow(Math.random() * 2 - 1, 3) * (params.radius - distance)) * 0.3;    const current = i * 3;    positions[current] =      Math.cos(branchAngle + distance * params.rotateScale) * distance +      randomX;    positions[current + 1] = 0 + randomY;    positions[current + 2] =      Math.sin(branchAngle + distance * params.rotateScale) * distance +      randomZ;    //混合颜色，形成渐变    const mixColor = centerColor.clone();    mixColor.lerp(endColor, distance / params.radius);    colors[current] = mixColor.r;    colors[current + 1] = mixColor.g;    colors[current + 2] = mixColor.b;    aScale[i] = Math.random() + 0.1;  }  geometry.setAttribute("position", new THREE.BufferAttribute(positions, 3));  geometry.setAttribute("color", new THREE.BufferAttribute(colors, 3));  geometry.setAttribute("aScale", new THREE.BufferAttribute(aScale, 1));  //设置点材质  material = new THREE.ShaderMaterial({    vertexShader: `    // varying float vec3 vColor;    attribute float aScale;    uniform float uTime;    varying vec3 vColor;    void main() {      vec4 modelPosition = modelMatrix * vec4(position, 1.0);      float angle = atan(modelPosition.x, modelPosition.z);      float distanceToCenter = length(modelPosition.xz);      float angleOffset = 1.0 / distanceToCenter * uTime;      angle += angleOffset;      modelPosition.x = cos(angle) * distanceToCenter;      modelPosition.z = sin(angle) * distanceToCenter;      vec4 viewPosition = viewMatrix * modelPosition;      gl_Position = projectionMatrix * viewPosition;      gl_PointSize = 200.0 / -viewPosition.z * aScale;      vColor = color;    }  `,    fragmentShader: `    uniform sampler2D uTexture;    varying vec3 vColor;    void main() {      // float strength = distance(gl_PointCoord, vec2(0.5));      // strength = 1.0 - (strength * 2.0);      // gl_FragColor = vec4(strength);      vec4 textureColor = texture2D(uTexture, gl_PointCoord);      gl_FragColor = vec4(vColor, textureColor.r);    }  `,    // sizeAttenuation: true,    depthWrite: false,    blending: THREE.AdditiveBlending,    transparent: true,    vertexColors: true, //设置顶点的颜色    side: THREE.DoubleSide,    uniforms: {      uTexture: {        value: particleTexture,      },      uTime: {        value: 0,      }    },  });  points = new THREE.Points(geometry, material);  scene.add(points);};genertateGalaxy();const clock = new THREE.Clock();const render = () => {  renderer.render(scene, camera);  material.uniforms.uTime.value = clock.getElapsedTime();  orbitControls.update();  requestAnimationFrame(render);};render();</script>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> three.js </tag>
            
            <tag> 特效 </tag>
            
            <tag> 着色器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用着色器打造岩浆效果</title>
      <link href="/posts/c5734c38.html"/>
      <url>/posts/c5734c38.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>因为之前学习的着色器知识已经忘得差不多了，于是自己又重新开始学一遍</p><p>这里是基于浏览器环境进行开发，因为博客环境的话基于浏览器开发比较好</p><p>话不多说直接开始</p><h2 id="准备开发环境"><a href="#准备开发环境" class="headerlink" title="准备开发环境"></a>准备开发环境</h2><h3 id="安装-three-js-和-dat-gui-依赖"><a href="#安装-three-js-和-dat-gui-依赖" class="headerlink" title="安装 three.js 和 dat.gui 依赖"></a>安装 three.js 和 dat.gui 依赖</h3><p>如果你是跟我一样基于浏览器环境，可以直接引入cdn的包</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/three@0.158.0/build/three.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span></span></span><br><span class="line"><span class="tag">  <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/dat.gui@0.7.9/build/dat.gui.min.css&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span></span></span><br><span class="line"><span class="tag">/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/dat.gui@0.7.9/build/dat.gui.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果你是使用npm管理依赖</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install three</span><br><span class="line">npm install dat.gui</span><br></pre></td></tr></table></figure><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>先构建一个平面，尽可能增加平面的顶点数量，然后在顶点着色器中，让顶点的y轴坐标根据x和z轴的坐标进行改变，来达到一个起伏的效果，这样我们就得到了一个规则的起伏的平面了，然后再利用噪声函数，让y轴的坐标再跟噪声函数的结果进行相加，所得到的就是一个非常不规则的平面了，这时候给噪声函数传入一个时间参数，让噪声函数的值不断进行变化，这样所的得到的就是第一个非常不规则的波纹了</p><p>得到不规则的波纹之后，我们还需要对波纹的颜色进行设置，为了得到一个岩浆的效果，我们可以采用一个渐变颜色，比如让波纹的比较凸起的地方的颜色更加红，比较凹的地方的颜色更加黄</p><p>所以这时候可以把顶点着色器中的顶点的y轴坐标传递给片元着色器，让片元着色器根据y轴的坐标进行颜色渲染</p><h2 id="开始写代码"><a href="#开始写代码" class="headerlink" title="开始写代码"></a>开始写代码</h2><p>为了方便写代码，这里是基于npm环境进行编写</p><h3 id="准备基础环境"><a href="#准备基础环境" class="headerlink" title="准备基础环境"></a>准备基础环境</h3><p>运行下面的代码，就可以得到一个基础的场景</p><p>下面的代码创建一个场景，轨道控制器，摄像机，并将场景渲染到界面上</p><p>之后写的代码直接写在渲染函数之上就可以了</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="variable constant_">THREE</span> <span class="keyword">from</span> <span class="string">&quot;three&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">OrbitControls</span> &#125; <span class="keyword">from</span> <span class="string">&quot;three/examples/jsm/controls/OrbitControls&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> dat <span class="keyword">from</span> <span class="string">&quot;dat.gui&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> scene = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Scene</span>();</span><br><span class="line"><span class="keyword">const</span> camera = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PerspectiveCamera</span>(</span><br><span class="line">  <span class="number">75</span>,</span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>,</span><br><span class="line">  <span class="number">0.1</span>,</span><br><span class="line">  <span class="number">1000</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">const</span> renderer = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">WebGLRenderer</span>();</span><br><span class="line">scene.<span class="title function_">add</span>(camera);</span><br><span class="line">renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>);</span><br><span class="line"><span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(renderer.<span class="property">domElement</span>);</span><br><span class="line">camera.<span class="property">position</span>.<span class="property">z</span> = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> axesHelper = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">AxesHelper</span>(<span class="number">10</span>);</span><br><span class="line">scene.<span class="title function_">add</span>(axesHelper);</span><br><span class="line"><span class="keyword">const</span> orbitControls = <span class="keyword">new</span> <span class="title class_">OrbitControls</span>(camera, renderer.<span class="property">domElement</span>);</span><br><span class="line">orbitControls.<span class="property">enableDamping</span> = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;resize&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>);</span><br><span class="line">  camera.<span class="property">aspect</span> = <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>;</span><br><span class="line">  camera.<span class="title function_">updateProjectionMatrix</span>();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> clock = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Clock</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">render</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  renderer.<span class="title function_">render</span>(scene, camera);</span><br><span class="line">  orbitControls.<span class="title function_">update</span>();</span><br><span class="line">  <span class="title function_">requestAnimationFrame</span>(render);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="title function_">render</span>();</span><br></pre></td></tr></table></figure><h3 id="添加平面"><a href="#添加平面" class="headerlink" title="添加平面"></a>添加平面</h3><p>接下来我们创建一个平面，并将平面添加到场景中</p><p>添加下面的代码，这样我们场景就有一个黄色平面了</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建平面的着色器材质</span></span><br><span class="line"><span class="keyword">const</span> shaderMaterial = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">ShaderMaterial</span>(&#123;</span><br><span class="line">  <span class="comment">//顶点着色器</span></span><br><span class="line">  <span class="attr">vertexShader</span>: <span class="string">`</span></span><br><span class="line"><span class="string">    void main() &#123;</span></span><br><span class="line"><span class="string">        vec4 modelPosition = modelMatrix * vec4(position, 1.0);</span></span><br><span class="line"><span class="string">      gl_Position = projectionMatrix * viewMatrix * modelPosition;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  `</span>,</span><br><span class="line">  <span class="comment">//片元着色器</span></span><br><span class="line">  <span class="attr">fragmentShader</span>: <span class="string">`</span></span><br><span class="line"><span class="string">    void main() &#123;</span></span><br><span class="line"><span class="string">        gl_FragColor = vec4(1.0, 1.0, 0.0, 1.0);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  `</span>,</span><br><span class="line">  <span class="attr">side</span>: <span class="variable constant_">THREE</span>.<span class="property">DoubleSide</span>,</span><br><span class="line">  <span class="attr">transparent</span>: <span class="literal">true</span>,</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">const</span> planeGeometry = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PlaneGeometry</span>(<span class="number">10</span>, <span class="number">10</span>, <span class="number">1024</span>, <span class="number">1024</span>); <span class="comment">//创建平面的网格</span></span><br><span class="line"><span class="keyword">const</span> plane = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Mesh</span>(planeGeometry, shaderMaterial); <span class="comment">//创建平面</span></span><br><span class="line">plane.<span class="property">rotation</span>.<span class="property">x</span> = -<span class="title class_">Math</span>.<span class="property">PI</span> / <span class="number">2</span>; <span class="comment">//旋转平面</span></span><br><span class="line">scene.<span class="title function_">add</span>(plane);</span><br></pre></td></tr></table></figure><p>上面的代码创建一个带有着色器材质的黄色平面</p><h3 id="修改平面"><a href="#修改平面" class="headerlink" title="修改平面"></a>修改平面</h3><p>接下来我们来让平面变的不平整</p><p>修改顶点着色器中的代码如下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">vertexShader</span>: <span class="string">`</span></span><br><span class="line"><span class="string">    void main() &#123;</span></span><br><span class="line"><span class="string">        vec4 modelPosition = modelMatrix * vec4(position, 1.0);</span></span><br><span class="line"><span class="string">        float elevation = sin((modelPosition.x * 10.0) / 10.0) * sin((modelPosition.z * 10.0) / 10.0);</span></span><br><span class="line"><span class="string">        modelPosition.y += elevation;</span></span><br><span class="line"><span class="string">      gl_Position = projectionMatrix * viewMatrix * modelPosition;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  `</span>,</span><br></pre></td></tr></table></figure><p>这样我们的平面就变得不平整了</p><h3 id="让平面动起来"><a href="#让平面动起来" class="headerlink" title="让平面动起来"></a>让平面动起来</h3><p>接下来让我们的平面动起来!</p><p>我们需要将时间传入给着色器，修改我们的render渲染函数如下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">render</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  renderer.<span class="title function_">render</span>(scene, camera);</span><br><span class="line">  <span class="keyword">const</span> elapsedTime = clock.<span class="title function_">getElapsedTime</span>();</span><br><span class="line">  shaderMaterial.<span class="property">uniforms</span>.<span class="property">uTime</span>.<span class="property">value</span> = elapsedTime;</span><br><span class="line">  orbitControls.<span class="title function_">update</span>();</span><br><span class="line">  <span class="title function_">requestAnimationFrame</span>(render);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>光这样还不够，我们还需要修改顶点着色器，来让我们的顶点的y轴随着时间而改变，这我们要用到sin和cos函数，为了让平面凸起的地方更加尖锐，还要用到abs绝对值函数，要让平面更加不规则需要用到噪声函数</p><p>顶点着色器中需要接受时间的值并根据时间变化修改y轴坐标，修改顶点着色器如下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">vertexShader</span>: <span class="string">`</span></span><br><span class="line"><span class="string">    uniform float uTime;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    float random (vec2 st) &#123;</span></span><br><span class="line"><span class="string">        return fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    float noise (in vec2 _st) &#123;</span></span><br><span class="line"><span class="string">        vec2 i = floor(_st);</span></span><br><span class="line"><span class="string">        vec2 f = fract(_st);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        // Four corners in 2D of a tile</span></span><br><span class="line"><span class="string">        float a = random(i);</span></span><br><span class="line"><span class="string">        float b = random(i + vec2(1.0, 0.0));</span></span><br><span class="line"><span class="string">        float c = random(i + vec2(0.0, 1.0));</span></span><br><span class="line"><span class="string">        float d = random(i + vec2(1.0, 1.0));</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        vec2 u = f * f * (3.0 - 2.0 * f);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        return mix(a, b, u.x) +</span></span><br><span class="line"><span class="string">                (c - a)* u.y * (1.0 - u.x) +</span></span><br><span class="line"><span class="string">                (d - b) * u.x * u.y;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    void main() &#123;</span></span><br><span class="line"><span class="string">        vec4 modelPosition = modelMatrix * vec4(position, 1.0);</span></span><br><span class="line"><span class="string">        float elevation = sin((modelPosition.x * 10.0) / 10.0) * sin((modelPosition.z * 10.0) / 10.0);</span></span><br><span class="line"><span class="string">        elevation += -abs(noise(vec2(modelPosition.xz + uTime)));</span></span><br><span class="line"><span class="string">        modelPosition.y += elevation;</span></span><br><span class="line"><span class="string">      gl_Position = projectionMatrix * viewMatrix * modelPosition;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  `</span>,</span><br></pre></td></tr></table></figure><h3 id="上色和美化"><a href="#上色和美化" class="headerlink" title="上色和美化"></a>上色和美化</h3><p>这样我们的平面就开始动起来了！尽管它现在还非常丑，所以我们接下来需要进行一系列美化</p><p>创建岩浆参数并传递给着色器，然后使用dat.gui对这些参数进行操控</p><p>先添加平面参数代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> params = &#123;</span><br><span class="line">  <span class="attr">uWaresFrequency</span>: <span class="number">14</span>,</span><br><span class="line">  <span class="attr">uScale</span>: <span class="number">0.03</span>,</span><br><span class="line">  <span class="attr">uXzScale</span>: <span class="number">1.5</span>,</span><br><span class="line">  <span class="attr">uNoiseFrequency</span>: <span class="number">10</span>,</span><br><span class="line">  <span class="attr">uNoiseScale</span>: <span class="number">1.5</span>,</span><br><span class="line">  <span class="attr">uLowColor</span>: <span class="string">&quot;#ff0000&quot;</span>,</span><br><span class="line">  <span class="attr">uHighColor</span>: <span class="string">&quot;#ffff00&quot;</span>,</span><br><span class="line">  <span class="attr">uXSpeed</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="attr">uZSpeed</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="attr">uNoiseSpeed</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="attr">uOpacity</span>: <span class="number">1</span>,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>接下来修改着色器代码如下</p><p>下面代码的作用是</p><ul><li>将上面创建的参数传递给着色器</li><li>将顶点着色器中的顶点的 y 轴位置传递给片元着色器，让片元着色器根据顶点位置和我们设定的颜色进行着色</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> shaderMaterial = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">ShaderMaterial</span>(&#123;</span><br><span class="line">  <span class="attr">vertexShader</span>: <span class="string">`</span></span><br><span class="line"><span class="string">  precision lowp float;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">uniform float uWaresFrequency;</span></span><br><span class="line"><span class="string">uniform float uScale;</span></span><br><span class="line"><span class="string">uniform float uXzScale;</span></span><br><span class="line"><span class="string">uniform float uNoiseFrequency;</span></span><br><span class="line"><span class="string">uniform float uNoiseScale;</span></span><br><span class="line"><span class="string">uniform float uTime;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">uniform float uXSpeed;</span></span><br><span class="line"><span class="string">uniform float uZSpeed;</span></span><br><span class="line"><span class="string">uniform float uNoiseSpeed;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">//计算出的高度传递给片元着色器</span></span><br><span class="line"><span class="string">varying float vElevation;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">float random (vec2 st) &#123;</span></span><br><span class="line"><span class="string">    return fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">float noise (in vec2 _st) &#123;</span></span><br><span class="line"><span class="string">    vec2 i = floor(_st);</span></span><br><span class="line"><span class="string">    vec2 f = fract(_st);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // Four corners in 2D of a tile</span></span><br><span class="line"><span class="string">    float a = random(i);</span></span><br><span class="line"><span class="string">    float b = random(i + vec2(1.0, 0.0));</span></span><br><span class="line"><span class="string">    float c = random(i + vec2(0.0, 1.0));</span></span><br><span class="line"><span class="string">    float d = random(i + vec2(1.0, 1.0));</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    vec2 u = f * f * (3.0 - 2.0 * f);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    return mix(a, b, u.x) +</span></span><br><span class="line"><span class="string">            (c - a)* u.y * (1.0 - u.x) +</span></span><br><span class="line"><span class="string">            (d - b) * u.x * u.y;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">void main() &#123;</span></span><br><span class="line"><span class="string">    vec4 modelPosition = modelMatrix * vec4(position, 1.0);</span></span><br><span class="line"><span class="string">    float elevation = sin((modelPosition.x * uWaresFrequency + uTime * uXSpeed) / 10.0) * sin((modelPosition.z * uWaresFrequency * uXzScale + uTime * uZSpeed) / 10.0);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    elevation += -abs(noise(vec2(modelPosition.xz * uNoiseFrequency + uTime * uNoiseSpeed))) * uNoiseScale;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    vElevation = elevation;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    elevation *= uScale;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    modelPosition.y += elevation;</span></span><br><span class="line"><span class="string">    gl_Position = projectionMatrix * viewMatrix * modelPosition;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">  `</span>,</span><br><span class="line">  <span class="attr">fragmentShader</span>: <span class="string">`</span></span><br><span class="line"><span class="string">  precision lowp float;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">uniform vec3 uLowColor;</span></span><br><span class="line"><span class="string">uniform vec3 uHighColor;</span></span><br><span class="line"><span class="string">uniform float uOpacity;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">varying float vElevation;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">void main() &#123;</span></span><br><span class="line"><span class="string">    float opacity = (vElevation + 1.0) / 2.0;</span></span><br><span class="line"><span class="string">    vec3 color = mix(uLowColor, uHighColor, opacity);</span></span><br><span class="line"><span class="string">    gl_FragColor = vec4(color, uOpacity);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">  `</span>,</span><br><span class="line">  <span class="attr">side</span>: <span class="variable constant_">THREE</span>.<span class="property">DoubleSide</span>,</span><br><span class="line">  <span class="attr">transparent</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">uniforms</span>: &#123;</span><br><span class="line">    <span class="attr">uWaresFrequency</span>: &#123;</span><br><span class="line">      <span class="attr">value</span>: params.<span class="property">uWaresFrequency</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">uScale</span>: &#123;</span><br><span class="line">      <span class="attr">value</span>: params.<span class="property">uScale</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">uXzScale</span>: &#123;</span><br><span class="line">      <span class="attr">value</span>: params.<span class="property">uXzScale</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">uNoiseFrequency</span>: &#123;</span><br><span class="line">      <span class="attr">value</span>: params.<span class="property">uNoiseFrequency</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">uNoiseScale</span>: &#123;</span><br><span class="line">      <span class="attr">value</span>: params.<span class="property">uNoiseScale</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">uTime</span>: &#123;</span><br><span class="line">      <span class="attr">value</span>: <span class="number">0</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">uLowColor</span>: &#123;</span><br><span class="line">      <span class="attr">value</span>: <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Color</span>(params.<span class="property">uLowColor</span>),</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">uHighColor</span>: &#123;</span><br><span class="line">      <span class="attr">value</span>: <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Color</span>(params.<span class="property">uHighColor</span>),</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">uXSpeed</span>: &#123;</span><br><span class="line">      <span class="attr">value</span>: params.<span class="property">uXSpeed</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">uZSpeed</span>: &#123;</span><br><span class="line">      <span class="attr">value</span>: params.<span class="property">uZSpeed</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">uNoiseSpeed</span>: &#123;</span><br><span class="line">      <span class="attr">value</span>: params.<span class="property">uNoiseSpeed</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">uOpacity</span>: &#123;</span><br><span class="line">      <span class="attr">value</span>: params.<span class="property">uOpacity</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>运行上述代码其实已经可以看到效果了，已经好了很多</p><p>接下来为了更加方便我们调整平面的参数，我们需要使用dat.gui了</p><p>在创建着色器材质的代码下添加以下代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">gui</span><br><span class="line">  .<span class="title function_">add</span>(params, <span class="string">&quot;uWaresFrequency&quot;</span>)</span><br><span class="line">  .<span class="title function_">min</span>(<span class="number">1</span>)</span><br><span class="line">  .<span class="title function_">max</span>(<span class="number">100</span>)</span><br><span class="line">  .<span class="title function_">step</span>(<span class="number">0.1</span>)</span><br><span class="line">  .<span class="title function_">onChange</span>(<span class="function">(<span class="params">value: any</span>) =&gt;</span> &#123;</span><br><span class="line">    shaderMaterial.<span class="property">uniforms</span>.<span class="property">uWaresFrequency</span>.<span class="property">value</span> = value;</span><br><span class="line">  &#125;);</span><br><span class="line">gui</span><br><span class="line">  .<span class="title function_">add</span>(params, <span class="string">&quot;uScale&quot;</span>)</span><br><span class="line">  .<span class="title function_">min</span>(<span class="number">0</span>)</span><br><span class="line">  .<span class="title function_">max</span>(<span class="number">0.2</span>)</span><br><span class="line">  .<span class="title function_">step</span>(<span class="number">0.02</span>)</span><br><span class="line">  .<span class="title function_">onChange</span>(<span class="function">(<span class="params">value: any</span>) =&gt;</span> &#123;</span><br><span class="line">    shaderMaterial.<span class="property">uniforms</span>.<span class="property">uScale</span>.<span class="property">value</span> = value;</span><br><span class="line">  &#125;);</span><br><span class="line">gui</span><br><span class="line">  .<span class="title function_">add</span>(params, <span class="string">&quot;uXzScale&quot;</span>)</span><br><span class="line">  .<span class="title function_">min</span>(<span class="number">0</span>)</span><br><span class="line">  .<span class="title function_">max</span>(<span class="number">5</span>)</span><br><span class="line">  .<span class="title function_">step</span>(<span class="number">0.1</span>)</span><br><span class="line">  .<span class="title function_">onChange</span>(<span class="function">(<span class="params">value: any</span>) =&gt;</span> &#123;</span><br><span class="line">    shaderMaterial.<span class="property">uniforms</span>.<span class="property">uXzScale</span>.<span class="property">value</span> = value;</span><br><span class="line">  &#125;);</span><br><span class="line">gui</span><br><span class="line">  .<span class="title function_">add</span>(params, <span class="string">&quot;uNoiseFrequency&quot;</span>)</span><br><span class="line">  .<span class="title function_">min</span>(<span class="number">1</span>)</span><br><span class="line">  .<span class="title function_">max</span>(<span class="number">100</span>)</span><br><span class="line">  .<span class="title function_">step</span>(<span class="number">0.1</span>)</span><br><span class="line">  .<span class="title function_">onChange</span>(<span class="function">(<span class="params">value: any</span>) =&gt;</span> &#123;</span><br><span class="line">    shaderMaterial.<span class="property">uniforms</span>.<span class="property">uNoiseFrequency</span>.<span class="property">value</span> = value;</span><br><span class="line">  &#125;);</span><br><span class="line">gui</span><br><span class="line">  .<span class="title function_">add</span>(params, <span class="string">&quot;uNoiseScale&quot;</span>)</span><br><span class="line">  .<span class="title function_">min</span>(<span class="number">0</span>)</span><br><span class="line">  .<span class="title function_">max</span>(<span class="number">5</span>)</span><br><span class="line">  .<span class="title function_">step</span>(<span class="number">0.01</span>)</span><br><span class="line">  .<span class="title function_">onChange</span>(<span class="function">(<span class="params">value: any</span>) =&gt;</span> &#123;</span><br><span class="line">    shaderMaterial.<span class="property">uniforms</span>.<span class="property">uNoiseScale</span>.<span class="property">value</span> = value;</span><br><span class="line">  &#125;);</span><br><span class="line">gui.<span class="title function_">addColor</span>(params, <span class="string">&quot;uLowColor&quot;</span>).<span class="title function_">onFinishChange</span>(<span class="function">(<span class="params">value: any</span>) =&gt;</span> &#123;</span><br><span class="line">  shaderMaterial.<span class="property">uniforms</span>.<span class="property">uLowColor</span>.<span class="property">value</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Color</span>(value);</span><br><span class="line">&#125;);</span><br><span class="line">gui.<span class="title function_">addColor</span>(params, <span class="string">&quot;uHighColor&quot;</span>).<span class="title function_">onFinishChange</span>(<span class="function">(<span class="params">value: any</span>) =&gt;</span> &#123;</span><br><span class="line">  shaderMaterial.<span class="property">uniforms</span>.<span class="property">uHighColor</span>.<span class="property">value</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Color</span>(value);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gui</span><br><span class="line">  .<span class="title function_">add</span>(params, <span class="string">&quot;uXSpeed&quot;</span>)</span><br><span class="line">  .<span class="title function_">min</span>(<span class="number">0</span>)</span><br><span class="line">  .<span class="title function_">max</span>(<span class="number">5</span>)</span><br><span class="line">  .<span class="title function_">step</span>(<span class="number">0.01</span>)</span><br><span class="line">  .<span class="title function_">onChange</span>(<span class="function">(<span class="params">value: any</span>) =&gt;</span> &#123;</span><br><span class="line">    shaderMaterial.<span class="property">uniforms</span>.<span class="property">uXSpeed</span>.<span class="property">value</span> = value;</span><br><span class="line">  &#125;);</span><br><span class="line">gui</span><br><span class="line">  .<span class="title function_">add</span>(params, <span class="string">&quot;uZSpeed&quot;</span>)</span><br><span class="line">  .<span class="title function_">min</span>(<span class="number">0</span>)</span><br><span class="line">  .<span class="title function_">max</span>(<span class="number">5</span>)</span><br><span class="line">  .<span class="title function_">step</span>(<span class="number">0.01</span>)</span><br><span class="line">  .<span class="title function_">onChange</span>(<span class="function">(<span class="params">value: any</span>) =&gt;</span> &#123;</span><br><span class="line">    shaderMaterial.<span class="property">uniforms</span>.<span class="property">uZSpeed</span>.<span class="property">value</span> = value;</span><br><span class="line">  &#125;);</span><br><span class="line">gui</span><br><span class="line">  .<span class="title function_">add</span>(params, <span class="string">&quot;uNoiseSpeed&quot;</span>)</span><br><span class="line">  .<span class="title function_">min</span>(<span class="number">0</span>)</span><br><span class="line">  .<span class="title function_">max</span>(<span class="number">5</span>)</span><br><span class="line">  .<span class="title function_">step</span>(<span class="number">0.01</span>)</span><br><span class="line">  .<span class="title function_">onChange</span>(<span class="function">(<span class="params">value: any</span>) =&gt;</span> &#123;</span><br><span class="line">    shaderMaterial.<span class="property">uniforms</span>.<span class="property">uNoiseSpeed</span>.<span class="property">value</span> = value;</span><br><span class="line">  &#125;);</span><br><span class="line">gui</span><br><span class="line">  .<span class="title function_">add</span>(params, <span class="string">&quot;uOpacity&quot;</span>)</span><br><span class="line">  .<span class="title function_">min</span>(<span class="number">0</span>)</span><br><span class="line">  .<span class="title function_">max</span>(<span class="number">1</span>)</span><br><span class="line">  .<span class="title function_">step</span>(<span class="number">0.01</span>)</span><br><span class="line">  .<span class="title function_">onChange</span>(<span class="function">(<span class="params">value: any</span>) =&gt;</span> &#123;</span><br><span class="line">    shaderMaterial.<span class="property">uniforms</span>.<span class="property">uOpacity</span>.<span class="property">value</span> = value;</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure><p>再次运行代码，我们的界面右上角就一个可以对参数进行调整的区域了</p><p>到这里我们的代码就完全写完了</p><h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="variable constant_">THREE</span> <span class="keyword">from</span> <span class="string">&quot;three&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">OrbitControls</span> &#125; <span class="keyword">from</span> <span class="string">&quot;three/examples/jsm/controls/OrbitControls&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> dat <span class="keyword">from</span> <span class="string">&quot;dat.gui&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> scene = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Scene</span>();</span><br><span class="line"><span class="keyword">const</span> camera = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PerspectiveCamera</span>(</span><br><span class="line">  <span class="number">75</span>,</span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>,</span><br><span class="line">  <span class="number">0.1</span>,</span><br><span class="line">  <span class="number">1000</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">const</span> renderer = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">WebGLRenderer</span>();</span><br><span class="line">scene.<span class="title function_">add</span>(camera);</span><br><span class="line">renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>);</span><br><span class="line"><span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(renderer.<span class="property">domElement</span>);</span><br><span class="line">camera.<span class="property">position</span>.<span class="property">z</span> = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> axesHelper = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">AxesHelper</span>(<span class="number">10</span>);</span><br><span class="line">scene.<span class="title function_">add</span>(axesHelper);</span><br><span class="line"><span class="keyword">const</span> orbitControls = <span class="keyword">new</span> <span class="title class_">OrbitControls</span>(camera, renderer.<span class="property">domElement</span>);</span><br><span class="line">orbitControls.<span class="property">enableDamping</span> = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;resize&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>);</span><br><span class="line">  camera.<span class="property">aspect</span> = <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>;</span><br><span class="line">  camera.<span class="title function_">updateProjectionMatrix</span>();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> params = &#123;</span><br><span class="line">  <span class="attr">uWaresFrequency</span>: <span class="number">14</span>,</span><br><span class="line">  <span class="attr">uScale</span>: <span class="number">0.03</span>,</span><br><span class="line">  <span class="attr">uXzScale</span>: <span class="number">1.5</span>,</span><br><span class="line">  <span class="attr">uNoiseFrequency</span>: <span class="number">10</span>,</span><br><span class="line">  <span class="attr">uNoiseScale</span>: <span class="number">1.5</span>,</span><br><span class="line">  <span class="attr">uLowColor</span>: <span class="string">&quot;#ff0000&quot;</span>,</span><br><span class="line">  <span class="attr">uHighColor</span>: <span class="string">&quot;#ffff00&quot;</span>,</span><br><span class="line">  <span class="attr">uXSpeed</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="attr">uZSpeed</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="attr">uNoiseSpeed</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="attr">uOpacity</span>: <span class="number">1</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> gui = <span class="keyword">new</span> dat.<span class="title function_">GUI</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> shaderMaterial = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">ShaderMaterial</span>(&#123;</span><br><span class="line">  <span class="attr">vertexShader</span>: <span class="string">`</span></span><br><span class="line"><span class="string">  precision lowp float;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">uniform float uWaresFrequency;</span></span><br><span class="line"><span class="string">uniform float uScale;</span></span><br><span class="line"><span class="string">uniform float uXzScale;</span></span><br><span class="line"><span class="string">uniform float uNoiseFrequency;</span></span><br><span class="line"><span class="string">uniform float uNoiseScale;</span></span><br><span class="line"><span class="string">uniform float uTime;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">uniform float uXSpeed;</span></span><br><span class="line"><span class="string">uniform float uZSpeed;</span></span><br><span class="line"><span class="string">uniform float uNoiseSpeed;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">//计算出的高度传递给片元着色器</span></span><br><span class="line"><span class="string">varying float vElevation;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">float random (vec2 st) &#123;</span></span><br><span class="line"><span class="string">    return fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">float noise (in vec2 _st) &#123;</span></span><br><span class="line"><span class="string">    vec2 i = floor(_st);</span></span><br><span class="line"><span class="string">    vec2 f = fract(_st);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // Four corners in 2D of a tile</span></span><br><span class="line"><span class="string">    float a = random(i);</span></span><br><span class="line"><span class="string">    float b = random(i + vec2(1.0, 0.0));</span></span><br><span class="line"><span class="string">    float c = random(i + vec2(0.0, 1.0));</span></span><br><span class="line"><span class="string">    float d = random(i + vec2(1.0, 1.0));</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    vec2 u = f * f * (3.0 - 2.0 * f);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    return mix(a, b, u.x) +</span></span><br><span class="line"><span class="string">            (c - a)* u.y * (1.0 - u.x) +</span></span><br><span class="line"><span class="string">            (d - b) * u.x * u.y;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">void main() &#123;</span></span><br><span class="line"><span class="string">    vec4 modelPosition = modelMatrix * vec4(position, 1.0);</span></span><br><span class="line"><span class="string">    float elevation = sin((modelPosition.x * uWaresFrequency + uTime * uXSpeed) / 10.0) * sin((modelPosition.z * uWaresFrequency * uXzScale + uTime * uZSpeed) / 10.0);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    elevation += -abs(noise(vec2(modelPosition.xz * uNoiseFrequency + uTime * uNoiseSpeed))) * uNoiseScale;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    vElevation = elevation;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    elevation *= uScale;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    modelPosition.y += elevation;</span></span><br><span class="line"><span class="string">    gl_Position = projectionMatrix * viewMatrix * modelPosition;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">  `</span>,</span><br><span class="line">  <span class="attr">fragmentShader</span>: <span class="string">`</span></span><br><span class="line"><span class="string">  precision lowp float;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">uniform vec3 uLowColor;</span></span><br><span class="line"><span class="string">uniform vec3 uHighColor;</span></span><br><span class="line"><span class="string">uniform float uOpacity;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">varying float vElevation;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">void main() &#123;</span></span><br><span class="line"><span class="string">    float opacity = (vElevation + 1.0) / 2.0;</span></span><br><span class="line"><span class="string">    vec3 color = mix(uLowColor, uHighColor, opacity);</span></span><br><span class="line"><span class="string">    gl_FragColor = vec4(color, uOpacity);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">  `</span>,</span><br><span class="line">  <span class="attr">side</span>: <span class="variable constant_">THREE</span>.<span class="property">DoubleSide</span>,</span><br><span class="line">  <span class="attr">transparent</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">uniforms</span>: &#123;</span><br><span class="line">    <span class="attr">uWaresFrequency</span>: &#123;</span><br><span class="line">      <span class="attr">value</span>: params.<span class="property">uWaresFrequency</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">uScale</span>: &#123;</span><br><span class="line">      <span class="attr">value</span>: params.<span class="property">uScale</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">uXzScale</span>: &#123;</span><br><span class="line">      <span class="attr">value</span>: params.<span class="property">uXzScale</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">uNoiseFrequency</span>: &#123;</span><br><span class="line">      <span class="attr">value</span>: params.<span class="property">uNoiseFrequency</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">uNoiseScale</span>: &#123;</span><br><span class="line">      <span class="attr">value</span>: params.<span class="property">uNoiseScale</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">uTime</span>: &#123;</span><br><span class="line">      <span class="attr">value</span>: <span class="number">0</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">uLowColor</span>: &#123;</span><br><span class="line">      <span class="attr">value</span>: <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Color</span>(params.<span class="property">uLowColor</span>),</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">uHighColor</span>: &#123;</span><br><span class="line">      <span class="attr">value</span>: <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Color</span>(params.<span class="property">uHighColor</span>),</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">uXSpeed</span>: &#123;</span><br><span class="line">      <span class="attr">value</span>: params.<span class="property">uXSpeed</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">uZSpeed</span>: &#123;</span><br><span class="line">      <span class="attr">value</span>: params.<span class="property">uZSpeed</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">uNoiseSpeed</span>: &#123;</span><br><span class="line">      <span class="attr">value</span>: params.<span class="property">uNoiseSpeed</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">uOpacity</span>: &#123;</span><br><span class="line">      <span class="attr">value</span>: params.<span class="property">uOpacity</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gui</span><br><span class="line">  .<span class="title function_">add</span>(params, <span class="string">&quot;uWaresFrequency&quot;</span>)</span><br><span class="line">  .<span class="title function_">min</span>(<span class="number">1</span>)</span><br><span class="line">  .<span class="title function_">max</span>(<span class="number">100</span>)</span><br><span class="line">  .<span class="title function_">step</span>(<span class="number">0.1</span>)</span><br><span class="line">  .<span class="title function_">onChange</span>(<span class="function">(<span class="params">value: any</span>) =&gt;</span> &#123;</span><br><span class="line">    shaderMaterial.<span class="property">uniforms</span>.<span class="property">uWaresFrequency</span>.<span class="property">value</span> = value;</span><br><span class="line">  &#125;);</span><br><span class="line">gui</span><br><span class="line">  .<span class="title function_">add</span>(params, <span class="string">&quot;uScale&quot;</span>)</span><br><span class="line">  .<span class="title function_">min</span>(<span class="number">0</span>)</span><br><span class="line">  .<span class="title function_">max</span>(<span class="number">0.2</span>)</span><br><span class="line">  .<span class="title function_">step</span>(<span class="number">0.02</span>)</span><br><span class="line">  .<span class="title function_">onChange</span>(<span class="function">(<span class="params">value: any</span>) =&gt;</span> &#123;</span><br><span class="line">    shaderMaterial.<span class="property">uniforms</span>.<span class="property">uScale</span>.<span class="property">value</span> = value;</span><br><span class="line">  &#125;);</span><br><span class="line">gui</span><br><span class="line">  .<span class="title function_">add</span>(params, <span class="string">&quot;uXzScale&quot;</span>)</span><br><span class="line">  .<span class="title function_">min</span>(<span class="number">0</span>)</span><br><span class="line">  .<span class="title function_">max</span>(<span class="number">5</span>)</span><br><span class="line">  .<span class="title function_">step</span>(<span class="number">0.1</span>)</span><br><span class="line">  .<span class="title function_">onChange</span>(<span class="function">(<span class="params">value: any</span>) =&gt;</span> &#123;</span><br><span class="line">    shaderMaterial.<span class="property">uniforms</span>.<span class="property">uXzScale</span>.<span class="property">value</span> = value;</span><br><span class="line">  &#125;);</span><br><span class="line">gui</span><br><span class="line">  .<span class="title function_">add</span>(params, <span class="string">&quot;uNoiseFrequency&quot;</span>)</span><br><span class="line">  .<span class="title function_">min</span>(<span class="number">1</span>)</span><br><span class="line">  .<span class="title function_">max</span>(<span class="number">100</span>)</span><br><span class="line">  .<span class="title function_">step</span>(<span class="number">0.1</span>)</span><br><span class="line">  .<span class="title function_">onChange</span>(<span class="function">(<span class="params">value: any</span>) =&gt;</span> &#123;</span><br><span class="line">    shaderMaterial.<span class="property">uniforms</span>.<span class="property">uNoiseFrequency</span>.<span class="property">value</span> = value;</span><br><span class="line">  &#125;);</span><br><span class="line">gui</span><br><span class="line">  .<span class="title function_">add</span>(params, <span class="string">&quot;uNoiseScale&quot;</span>)</span><br><span class="line">  .<span class="title function_">min</span>(<span class="number">0</span>)</span><br><span class="line">  .<span class="title function_">max</span>(<span class="number">5</span>)</span><br><span class="line">  .<span class="title function_">step</span>(<span class="number">0.01</span>)</span><br><span class="line">  .<span class="title function_">onChange</span>(<span class="function">(<span class="params">value: any</span>) =&gt;</span> &#123;</span><br><span class="line">    shaderMaterial.<span class="property">uniforms</span>.<span class="property">uNoiseScale</span>.<span class="property">value</span> = value;</span><br><span class="line">  &#125;);</span><br><span class="line">gui.<span class="title function_">addColor</span>(params, <span class="string">&quot;uLowColor&quot;</span>).<span class="title function_">onFinishChange</span>(<span class="function">(<span class="params">value: any</span>) =&gt;</span> &#123;</span><br><span class="line">  shaderMaterial.<span class="property">uniforms</span>.<span class="property">uLowColor</span>.<span class="property">value</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Color</span>(value);</span><br><span class="line">&#125;);</span><br><span class="line">gui.<span class="title function_">addColor</span>(params, <span class="string">&quot;uHighColor&quot;</span>).<span class="title function_">onFinishChange</span>(<span class="function">(<span class="params">value: any</span>) =&gt;</span> &#123;</span><br><span class="line">  shaderMaterial.<span class="property">uniforms</span>.<span class="property">uHighColor</span>.<span class="property">value</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Color</span>(value);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gui</span><br><span class="line">  .<span class="title function_">add</span>(params, <span class="string">&quot;uXSpeed&quot;</span>)</span><br><span class="line">  .<span class="title function_">min</span>(<span class="number">0</span>)</span><br><span class="line">  .<span class="title function_">max</span>(<span class="number">5</span>)</span><br><span class="line">  .<span class="title function_">step</span>(<span class="number">0.01</span>)</span><br><span class="line">  .<span class="title function_">onChange</span>(<span class="function">(<span class="params">value: any</span>) =&gt;</span> &#123;</span><br><span class="line">    shaderMaterial.<span class="property">uniforms</span>.<span class="property">uXSpeed</span>.<span class="property">value</span> = value;</span><br><span class="line">  &#125;);</span><br><span class="line">gui</span><br><span class="line">  .<span class="title function_">add</span>(params, <span class="string">&quot;uZSpeed&quot;</span>)</span><br><span class="line">  .<span class="title function_">min</span>(<span class="number">0</span>)</span><br><span class="line">  .<span class="title function_">max</span>(<span class="number">5</span>)</span><br><span class="line">  .<span class="title function_">step</span>(<span class="number">0.01</span>)</span><br><span class="line">  .<span class="title function_">onChange</span>(<span class="function">(<span class="params">value: any</span>) =&gt;</span> &#123;</span><br><span class="line">    shaderMaterial.<span class="property">uniforms</span>.<span class="property">uZSpeed</span>.<span class="property">value</span> = value;</span><br><span class="line">  &#125;);</span><br><span class="line">gui</span><br><span class="line">  .<span class="title function_">add</span>(params, <span class="string">&quot;uNoiseSpeed&quot;</span>)</span><br><span class="line">  .<span class="title function_">min</span>(<span class="number">0</span>)</span><br><span class="line">  .<span class="title function_">max</span>(<span class="number">5</span>)</span><br><span class="line">  .<span class="title function_">step</span>(<span class="number">0.01</span>)</span><br><span class="line">  .<span class="title function_">onChange</span>(<span class="function">(<span class="params">value: any</span>) =&gt;</span> &#123;</span><br><span class="line">    shaderMaterial.<span class="property">uniforms</span>.<span class="property">uNoiseSpeed</span>.<span class="property">value</span> = value;</span><br><span class="line">  &#125;);</span><br><span class="line">gui</span><br><span class="line">  .<span class="title function_">add</span>(params, <span class="string">&quot;uOpacity&quot;</span>)</span><br><span class="line">  .<span class="title function_">min</span>(<span class="number">0</span>)</span><br><span class="line">  .<span class="title function_">max</span>(<span class="number">1</span>)</span><br><span class="line">  .<span class="title function_">step</span>(<span class="number">0.01</span>)</span><br><span class="line">  .<span class="title function_">onChange</span>(<span class="function">(<span class="params">value: any</span>) =&gt;</span> &#123;</span><br><span class="line">    shaderMaterial.<span class="property">uniforms</span>.<span class="property">uOpacity</span>.<span class="property">value</span> = value;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> planeGeometry = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PlaneGeometry</span>(<span class="number">10</span>, <span class="number">10</span>, <span class="number">1024</span>, <span class="number">1024</span>);</span><br><span class="line"><span class="keyword">const</span> planeMaterial = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">MeshBasicMaterial</span>(&#123;</span><br><span class="line">  <span class="attr">color</span>: <span class="number">0x00ff00</span>,</span><br><span class="line">  <span class="attr">side</span>: <span class="variable constant_">THREE</span>.<span class="property">DoubleSide</span>,</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">const</span> plane = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Mesh</span>(planeGeometry, shaderMaterial);</span><br><span class="line">plane.<span class="property">rotation</span>.<span class="property">x</span> = -<span class="title class_">Math</span>.<span class="property">PI</span> / <span class="number">2</span>;</span><br><span class="line">scene.<span class="title function_">add</span>(plane);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> clock = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Clock</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">render</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  renderer.<span class="title function_">render</span>(scene, camera);</span><br><span class="line">  <span class="keyword">const</span> elapsedTime = clock.<span class="title function_">getElapsedTime</span>();</span><br><span class="line">  shaderMaterial.<span class="property">uniforms</span>.<span class="property">uTime</span>.<span class="property">value</span> = elapsedTime;</span><br><span class="line">  orbitControls.<span class="title function_">update</span>();</span><br><span class="line">  <span class="title function_">requestAnimationFrame</span>(render);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="title function_">render</span>();</span><br></pre></td></tr></table></figure><h2 id="运行效果"><a href="#运行效果" class="headerlink" title="运行效果"></a>运行效果</h2><div class="tip info"><p>如果遇到没有显示或者显示有点问题请刷新一下界面，因为加载可能比较消耗性能和时间</p></div><div id="preview"></div><p><link  href="https://cdn.jsdelivr.net/npm/dat.gui@0.7.9/build/dat.gui.min.css"  rel="stylesheet"/></p><script src="https://cdn.jsdelivr.net/npm/dat.gui@0.7.9/build/dat.gui.min.js"></script><style>    .dg.ac {        position: absolute;        top: 0;        left: 0;        right: 0;        height: 0;        z-index: 0;    }</style><script type="importmap">  {    "imports": {      "three": "https://unpkg.com/three@0.158.0/build/three.module.js",      "three/addons/": "https://unpkg.com/three@0.158.0/examples/jsm/"    }  }</script><script type="module">import * as THREE from 'three';import {OrbitControls} from "three/addons/controls/OrbitControls";const scene = new THREE.Scene()const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000)const renderer = new THREE.WebGLRenderer()scene.add(camera)renderer.setSize(window.innerWidth, window.innerHeight)document.getElementById('preview').appendChild(renderer.domElement)document.getElementById('preview').style.position = "relative"renderer.domElement.style.width = '100%'renderer.domElement.style.height = '100%'camera.position.z = 10// const axesHelper = new THREE.AxesHelper(10)// scene.add(axesHelper)const orbitControls = new OrbitControls(camera, renderer.domElement)orbitControls.enableDamping = truewindow.addEventListener('resize', () => {  renderer.setSize(window.innerWidth, window.innerHeight)  camera.aspect = window.innerWidth / window.innerHeight  camera.updateProjectionMatrix()})const params = {    uWaresFrequency: 14,    uScale: 0.03,    uXzScale: 1.5,    uNoiseFrequency: 10,    uNoiseScale: 1.5,    uLowColor: "#ff0000",    uHighColor: "#ffff00",    uXSpeed: 1,    uZSpeed: 1,    uNoiseSpeed: 1,    uOpacity: 1};const gui = new dat.GUI();const shaderMaterial = new THREE.ShaderMaterial({  vertexShader: `  precision lowp float;uniform float uWaresFrequency;uniform float uScale;uniform float uXzScale;uniform float uNoiseFrequency;uniform float uNoiseScale;uniform float uTime;uniform float uXSpeed;uniform float uZSpeed;uniform float uNoiseSpeed;//计算出的高度传递给片元着色器varying float vElevation;float random (vec2 st) {    return fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);}float noise (in vec2 _st) {    vec2 i = floor(_st);    vec2 f = fract(_st);    // Four corners in 2D of a tile    float a = random(i);    float b = random(i + vec2(1.0, 0.0));    float c = random(i + vec2(0.0, 1.0));    float d = random(i + vec2(1.0, 1.0));    vec2 u = f * f * (3.0 - 2.0 * f);    return mix(a, b, u.x) +            (c - a)* u.y * (1.0 - u.x) +            (d - b) * u.x * u.y;}void main() {    vec4 modelPosition = modelMatrix * vec4(position, 1.0);    float elevation = sin((modelPosition.x * uWaresFrequency + uTime * uXSpeed) / 10.0) * sin((modelPosition.z * uWaresFrequency * uXzScale + uTime * uZSpeed) / 10.0);    elevation += -abs(noise(vec2(modelPosition.xz * uNoiseFrequency + uTime * uNoiseSpeed))) * uNoiseScale;    vElevation = elevation;    elevation *= uScale;    modelPosition.y += elevation;    gl_Position = projectionMatrix * viewMatrix * modelPosition;}  `,  fragmentShader: `  precision lowp float;uniform vec3 uLowColor;uniform vec3 uHighColor;uniform float uOpacity;varying float vElevation;void main() {    float opacity = (vElevation + 1.0) / 2.0;    vec3 color = mix(uLowColor, uHighColor, opacity);    gl_FragColor = vec4(color, uOpacity);}  `,  side: THREE.DoubleSide,  transparent: true,  uniforms: {        uWaresFrequency: {            value: params.uWaresFrequency        },        uScale: {            value: params.uScale        },        uXzScale: {            value: params.uXzScale        },        uNoiseFrequency: {            value: params.uNoiseFrequency        },        uNoiseScale: {            value: params.uNoiseScale        },        uTime: {            value: 0        },        uLowColor: {            value: new THREE.Color(params.uLowColor)        },        uHighColor: {            value: new THREE.Color(params.uHighColor)        },        uXSpeed: {            value: params.uXSpeed        },        uZSpeed: {            value: params.uZSpeed        },        uNoiseSpeed: {            value: params.uNoiseSpeed        },        uOpacity: {            value: params.uOpacity        }    },})gui.add(params, "uWaresFrequency").min(1).max(100).step(0.1).onChange((value) => {    shaderMaterial.uniforms.uWaresFrequency.value = value;});gui.add(params, "uScale").min(0).max(0.2).step(0.02).onChange((value) => {    shaderMaterial.uniforms.uScale.value = value;});gui.add(params, "uXzScale").min(0).max(5).step(0.1).onChange((value) => {    shaderMaterial.uniforms.uXzScale.value = value;});gui.add(params, "uNoiseFrequency").min(1).max(100).step(0.1).onChange((value) => {    shaderMaterial.uniforms.uNoiseFrequency.value = value;});gui.add(params, "uNoiseScale").min(0).max(5).step(0.01).onChange((value) => {    shaderMaterial.uniforms.uNoiseScale.value = value;});gui.addColor(params, "uLowColor").onFinishChange((value) => {    shaderMaterial.uniforms.uLowColor.value = new THREE.Color(value);});gui.addColor(params, "uHighColor").onFinishChange((value) => {    shaderMaterial.uniforms.uHighColor.value = new THREE.Color(value);});gui.add(params, "uXSpeed").min(0).max(5).step(0.01).onChange((value) => {    shaderMaterial.uniforms.uXSpeed.value = value;});gui.add(params, "uZSpeed").min(0).max(5).step(0.01).onChange((value) => {    shaderMaterial.uniforms.uZSpeed.value = value;});gui.add(params, "uNoiseSpeed").min(0).max(5).step(0.01).onChange((value) => {    shaderMaterial.uniforms.uNoiseSpeed.value = value;});gui.add(params, "uOpacity").min(0).max(1).step(0.01).onChange((value) => {    shaderMaterial.uniforms.uOpacity.value = value;});const planeGeometry = new THREE.PlaneGeometry(50, 50, 1024, 1024)const plane = new THREE.Mesh(planeGeometry, shaderMaterial)plane.rotation.x = -Math.PI / 2scene.add(plane)const clock = new THREE.Clock()const render = () => {  renderer.render(scene, camera)  const elapsedTime = clock.getElapsedTime()  shaderMaterial.uniforms.uTime.value = elapsedTime  orbitControls.update()  requestAnimationFrame(render)}render()const dg = document.querySelector(".dg.ac")document.getElementById('preview').appendChild(dg)</script>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> three.js </tag>
            
            <tag> 特效 </tag>
            
            <tag> 着色器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>书签地球，一个相当实用且炸裂的网站</title>
      <link href="/posts/6cda8b6b.html"/>
      <url>/posts/6cda8b6b.html</url>
      
        <content type="html"><![CDATA[<p>最近发现了一个非常全能且炸裂的网站，为什么说它全能，因为它包含了全球网友的书签，这相当于，你在这里几乎啥都能找到，全球网友分享的优质内容都在这里，甚至包括带颜色的，好话不多说先来看看这个网站</p><h2 id="书签地球"><a href="#书签地球" class="headerlink" title="书签地球"></a>书签地球</h2><p>网站站如其名，汇集了全球网友分享的书签内容</p><h3 id="网站首页"><a href="#网站首页" class="headerlink" title="网站首页"></a>网站首页</h3><p>  <a href="https://img.hoshinagi.top/post/bookearth.webp" data-fancybox="images" data-caption="网站首页" class="fancybox">  <img src="https://img.hoshinagi.top/post/bookearth.webp" data-lazy-src="https://img.hoshinagi.top/post/bookearth.webp" alt="网站首页" class="entered">  </a>  <div class="img-alt is-center">网站首页</div>  </p>  <p>想必看到网站的首页你就明白了这个网站到底是干嘛的了，全球网友的书签都在这里，是不是想想就有点激动</p><p>我当初使用这个网站的时候也是被震撼到了，真的是啥都能找得到，这个网站还帮你分好类了</p><h3 id="网站地址"><a href="#网站地址" class="headerlink" title="网站地址"></a>网站地址</h3><a class="tag-Link" target="_blank" href="https://www.bookmarkearth.com" title="书签地球">  <div class="tag-link-tips">  引用站外地址，不保证站点的可用性和安全性</div>  <div class="tag-link-bottom"><div class="tag-link-left"><i class="xingzhifont icon-link"></i></div><div class="tag-link-right">  <div class="tag-link-title">书签地球</div>  <div class="tag-link-sitename">汇聚全球网友的书签</div>  </div><i class="xingzhifont icon-arrow-right-s-line"></i></div></a><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>以后资源匮乏的时候，或者说想找点乐趣的时候，不妨上书签地球看看，说不定会有惊人的发现，感觉这就如同程序界的github，是一个金矿区啊</p>]]></content>
      
      
      <categories>
          
          <category> 网站推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站 </tag>
            
            <tag> 推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sms-activate-虚拟在线号码</title>
      <link href="/posts/424b7a50.html"/>
      <url>/posts/424b7a50.html</url>
      
        <content type="html"><![CDATA[<p>这个网站我是在今年年初chatGPT开始火的时候发现的，那时候我姐夫要我尝试着自己注册一个openai的账号并使用chatgpt，然后自己通过这个网站，花了5块钱买了一个虚拟手机号，然后成功注册了openai的账号并使用上了官方的chatgpt</p><h2 id="SMS-activate"><a href="#SMS-activate" class="headerlink" title="SMS-activate"></a>SMS-activate</h2><h3 id="网站地址"><a href="#网站地址" class="headerlink" title="网站地址"></a>网站地址</h3><a class="tag-Link" target="_blank" href="https://sms-activate.org/cn/" title="虚拟在线号码">  <div class="tag-link-tips">  引用站外地址，不保证站点的可用性和安全性</div>  <div class="tag-link-bottom"><div class="tag-link-left"><i class="xingzhifont icon-link"></i></div><div class="tag-link-right">  <div class="tag-link-title">虚拟在线号码</div>  <div class="tag-link-sitename">sms-activate</div>  </div><i class="xingzhifont icon-arrow-right-s-line"></i></div></a><h3 id="网站首页"><a href="#网站首页" class="headerlink" title="网站首页"></a>网站首页</h3><p>因为这是俄罗斯的一个网站，打开可能会有点慢，进入之后将语言切换为中文</p><p>  <a href="https://img.hoshinagi.top/post/dbaksjbdkabsjd.webp" data-fancybox="images" data-caption="网站首页" class="fancybox">  <img src="https://img.hoshinagi.top/post/dbaksjbdkabsjd.webp" data-lazy-src="https://img.hoshinagi.top/post/dbaksjbdkabsjd.webp" alt="网站首页" class="entered">  </a>  <div class="img-alt is-center">网站首页</div>  </p>  <h3 id="寻找你需要的服务并进行购买"><a href="#寻找你需要的服务并进行购买" class="headerlink" title="寻找你需要的服务并进行购买"></a>寻找你需要的服务并进行购买</h3><p>我记得使用支付宝好像最少是充值15块钱，15块钱差不多可以购买3-5个虚拟手机号，支付的时候使用的货币单位是卢布</p><p>充值完成后，在界面左侧找到服务选择输入框，输入你想要的服务，比如openai、Twitter等等，就是你需要使用手机号接受哪个服务的验证码就买哪个，购买成功之后会自动跳转到激活界面</p><p>  <a href="https://img.hoshinagi.top/post/dhsaibdjhbasjkdj.webp" data-fancybox="images" data-caption="激活界面" class="fancybox">  <img src="https://img.hoshinagi.top/post/dhsaibdjhbasjkdj.webp" data-lazy-src="https://img.hoshinagi.top/post/dhsaibdjhbasjkdj.webp" alt="激活界面" class="entered">  </a>  <div class="img-alt is-center">激活界面</div>  </p>  <p>可以<strong>放心购买的</strong>，因为如果你购买了但是并没有收到短信的话，到了时间<strong>钱会自动退回来的</strong>，如果你购买了但是不想用了，<strong>点击右边的叉号</strong>也是可以秒退的</p><h3 id="激活"><a href="#激活" class="headerlink" title="激活"></a>激活</h3><p>接来下就是去到你需要的服务，填入你购买的手机号码，然后获取到短信，激活之后一般来讲这个手机号你就不能再用了，所以这玩意是一次性的，就是帮你注册国外服务用的，我目前是用它注册了chatgpt、Line等服务</p>]]></content>
      
      
      <categories>
          
          <category> 经验分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 网站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>推荐几个好用的macos集成软件网站</title>
      <link href="/posts/92dc6db1.html"/>
      <url>/posts/92dc6db1.html</url>
      
        <content type="html"><![CDATA[<p>最开始使用mac的时候，第一个不适应的地方就是软件下载，如果是windows的话，下载软件会非常方便，网上能找到各种各式各样的软件，但是macos就不行了，macos因为对软件安全性要求比较高，所以有时候即使能下载也用不了，这对于新手来说是非常不友好的，几乎大部分的软件都得从apstore上下载</p><p>但是appstore并不是什么软件都有，而且部分还需要付费，对于我这个学生来说、又更加不友好了，于是就开始寻找有没有集成mac软件的网站，功夫不负有心人，最终我还是找到了，于是分享给大家</p><h2 id="推荐几个好用的mac端集成软件网站"><a href="#推荐几个好用的mac端集成软件网站" class="headerlink" title="推荐几个好用的mac端集成软件网站"></a>推荐几个好用的mac端集成软件网站</h2><h3 id="马克喵"><a href="#马克喵" class="headerlink" title="马克喵"></a>马克喵</h3><p>这个是我最喜欢的mac软件集成网站，因为它不仅集成了大部分软件，比如ADOBE套装、饥荒、泰拉瑞亚等游戏、IDEA企业版等等，还继承了很多插件、字体等等资源，而且大部分都是免费的，而且下载方式很多，还有一系列安装使用教程，对于新手来说也非常友好，一天能够下载两个软件</p><a class="tag-Link" target="_blank" href="https://www.macat.vip" title="macat官网">  <div class="tag-link-tips">  引用站外地址，不保证站点的可用性和安全性</div>  <div class="tag-link-bottom"><div class="tag-link-left"><i class="xingzhifont icon-link"></i></div><div class="tag-link-right">  <div class="tag-link-title">macat官网</div>  <div class="tag-link-sitename">macat</div>  </div><i class="xingzhifont icon-arrow-right-s-line"></i></div></a><h3 id="mac毒"><a href="#mac毒" class="headerlink" title="mac毒"></a>mac毒</h3><p>这个网站也相当的不错，但是整体的集成数量比马克喵要少得多，可以说是马克喵的简略版，个人感觉是要次一等的，但是上面也能下载很多常用的软件，比如PS、AE、WPS等等软件</p><a class="tag-Link" target="_blank" href="https://www.macdo.cn" title="macdo官网">  <div class="tag-link-tips">  引用站外地址，不保证站点的可用性和安全性</div>  <div class="tag-link-bottom"><div class="tag-link-left"><i class="xingzhifont icon-link"></i></div><div class="tag-link-right">  <div class="tag-link-title">macdo官网</div>  <div class="tag-link-sitename">macdo</div>  </div><i class="xingzhifont icon-arrow-right-s-line"></i></div></a><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>其实有上面两个网站的话，已经够用了，再加上APPstore，我现在使用的软件大部分都是来自于这两个网站和appstore。基本上百分之99的你可能需要的软件它上面都有，除了游戏方面可能少一点，另外这两个网站都是有下载次数限制的，一天只能够下载两次</p>]]></content>
      
      
      <categories>
          
          <category> 网站推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站 </tag>
            
            <tag> 推荐 </tag>
            
            <tag> mac软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客粒子背景效果</title>
      <link href="/posts/8d9ef33a.html"/>
      <url>/posts/8d9ef33a.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p class='p logo'>看到安知鱼主题的宇宙粒子背景，然后就想着将自己之前用three.js写过的粒子背景效果给加进来</p><p class='p logo'>这里对之前写的粒子背景做了一些改变，改变了粒子的运动方向和位置还有数量，数量太多的话会消耗很多性能</p><p class='p logo'>话不多说直接开始整代码</p><p class='p logo'>新建一个js文件，然后在主题页面引入three.js的依赖</p><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>这个其实和樱花飘落效果差不多，就是使用 three.js 的粒子系统，然后将粒子的位置和方向都设置为随机值，然后将粒子的颜色设置为随机值，然后使用 gsap 动画库对粒子的 z 轴位置进行改变，实现穿越星空的效果</p><h2 id="代码部分"><a href="#代码部分" class="headerlink" title="代码部分"></a>代码部分</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> scene = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Scene</span>();</span><br><span class="line"><span class="keyword">const</span> camera = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PerspectiveCamera</span>(</span><br><span class="line">  <span class="number">75</span>,</span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>,</span><br><span class="line">  <span class="number">0.1</span>,</span><br><span class="line">  <span class="number">10000</span></span><br><span class="line">);</span><br><span class="line">camera.<span class="property">position</span>.<span class="title function_">set</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">10</span>);</span><br><span class="line"><span class="keyword">const</span> renderer = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">WebGLRenderer</span>();</span><br><span class="line">renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>);</span><br><span class="line"><span class="keyword">const</span> particle_box = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;div&quot;</span>);</span><br><span class="line">particle_box.<span class="property">id</span> = <span class="string">&quot;particle_box&quot;</span>;</span><br><span class="line">particle_box.<span class="property">className</span> = <span class="string">&quot;particle_box&quot;</span>;</span><br><span class="line">particle_box.<span class="title function_">setAttribute</span>(</span><br><span class="line">  <span class="string">&quot;style&quot;</span>,</span><br><span class="line">  <span class="string">&quot;top: 0; left: 0; z-index: -10; position: fixed; pointer-events: none;&quot;</span></span><br><span class="line">);</span><br><span class="line"><span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(particle_box);</span><br><span class="line">particle_box.<span class="title function_">appendChild</span>(renderer.<span class="property">domElement</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">renderParticle</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  renderer.<span class="title function_">render</span>(scene, camera);</span><br><span class="line">  <span class="title function_">requestAnimationFrame</span>(renderParticle);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="title function_">renderParticle</span>();</span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;resize&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">//更新摄像头</span></span><br><span class="line">  camera.<span class="property">aspect</span> = <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>;</span><br><span class="line">  <span class="comment">//更新摄像机的投影矩阵</span></span><br><span class="line">  camera.<span class="title function_">updateProjectionMatrix</span>();</span><br><span class="line">  renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>);</span><br><span class="line">  <span class="comment">//设置渲染器的像素比</span></span><br><span class="line">  renderer.<span class="title function_">setPixelRatio</span>(<span class="variable language_">window</span>.<span class="property">devicePixelRatio</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> texture = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">TextureLoader</span>().<span class="title function_">load</span>(</span><br><span class="line">  <span class="string">&quot;https://img.hoshinagi.top/post/particle.png&quot;</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">const</span> count = <span class="number">500</span>;</span><br><span class="line"><span class="comment">// 创建10个粒子系统</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">  <span class="keyword">const</span> positions = <span class="keyword">new</span> <span class="title class_">Float32Array</span>((count * <span class="number">3</span>) / <span class="number">10</span>);</span><br><span class="line">  <span class="keyword">const</span> colors = <span class="keyword">new</span> <span class="title class_">Float32Array</span>((count * <span class="number">3</span>) / <span class="number">10</span>);</span><br><span class="line">  <span class="keyword">const</span> particleGeometry = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferGeometry</span>();</span><br><span class="line">  <span class="keyword">const</span> material = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PointsMaterial</span>(&#123;</span><br><span class="line">    <span class="attr">map</span>: texture, <span class="comment">//纹理</span></span><br><span class="line">    <span class="attr">alphaMap</span>: texture, <span class="comment">//透明纹理</span></span><br><span class="line">    <span class="attr">size</span>: <span class="number">10</span>, <span class="comment">//粒子大小</span></span><br><span class="line">    <span class="attr">depthWrite</span>: <span class="literal">false</span>, <span class="comment">//是否开启深度描写</span></span><br><span class="line">    <span class="attr">blending</span>: <span class="variable constant_">THREE</span>.<span class="property">AdditiveBlending</span>, <span class="comment">//混合模式</span></span><br><span class="line">    <span class="attr">transparent</span>: <span class="literal">false</span>, <span class="comment">//是否透明</span></span><br><span class="line">    <span class="attr">vertexColors</span>: <span class="literal">true</span>, <span class="comment">//设置顶点的颜色</span></span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; (count / <span class="number">10</span>) * <span class="number">3</span>; j++) &#123;</span><br><span class="line">    positions[j * <span class="number">3</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">400</span> - <span class="number">200</span>;</span><br><span class="line">    positions[j * <span class="number">3</span> + <span class="number">1</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">400</span> - <span class="number">200</span>;</span><br><span class="line">    positions[j * <span class="number">3</span> + <span class="number">2</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">800</span> - <span class="number">400</span>;</span><br><span class="line">    colors[j * <span class="number">3</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>();</span><br><span class="line">    colors[j * <span class="number">3</span> + <span class="number">1</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>();</span><br><span class="line">    colors[j * <span class="number">3</span> + <span class="number">2</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  particleGeometry.<span class="title function_">setAttribute</span>(</span><br><span class="line">    <span class="string">&quot;position&quot;</span>,</span><br><span class="line">    <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferAttribute</span>(positions, <span class="number">3</span>)</span><br><span class="line">  );</span><br><span class="line">  particleGeometry.<span class="title function_">setAttribute</span>(<span class="string">&quot;color&quot;</span>, <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferAttribute</span>(colors, <span class="number">3</span>));</span><br><span class="line">  <span class="keyword">const</span> points = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Points</span>(particleGeometry, material);</span><br><span class="line">  scene.<span class="title function_">add</span>(points);</span><br><span class="line">  gsap.<span class="title function_">to</span>(points.<span class="property">position</span>, &#123;</span><br><span class="line">    <span class="attr">z</span>: <span class="number">400</span>,</span><br><span class="line">    <span class="attr">duration</span>: <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">5</span> + <span class="number">3</span>,</span><br><span class="line">    <span class="attr">repeat</span>: -<span class="number">1</span>,</span><br><span class="line">    <span class="attr">ease</span>: <span class="string">&quot;linear&quot;</span>,</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p class='p logo'>这个效果和樱花飘落效果一样，会消耗相当部分的性能，后续在深入学习three.js的过程中我会继续优化上面的代码，尝试使用着色器进行编写</p><p class='p logo'>如果想达到安知鱼主题的那种透明效果，你需要在主题色为dark的时候更改盒子的透明度，我这里并没有更改</p><a class="tag-Link" target="_blank" href="https://blog.anheyu.com" title="安知鱼主题效果">  <div class="tag-link-tips">  引用站外地址，不保证站点的可用性和安全性</div>  <div class="tag-link-bottom"><div class="tag-link-left"><i class="xingzhifont icon-link"></i></div><div class="tag-link-right">  <div class="tag-link-title">安知鱼主题效果</div>  <div class="tag-link-sitename">安知鱼</div>  </div><i class="xingzhifont icon-arrow-right-s-line"></i></div></a><p class='p logo'>我所使用的粒子图片，你可以使用别的图片来达到更好看的效果</p><p>  <a href="https://img.hoshinagi.top/post/particle.png" data-fancybox="images" data-caption="粒子" class="fancybox">  <img src="https://img.hoshinagi.top/post/particle.png" data-lazy-src="https://img.hoshinagi.top/post/particle.png" alt="粒子" class="entered">  </a>  <div class="img-alt is-center">粒子</div>  </p>  ]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 界面效果 </tag>
            
            <tag> 粒子特效 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客樱花飘落效果</title>
      <link href="/posts/57b95160.html"/>
      <url>/posts/57b95160.html</url>
      
        <content type="html"><![CDATA[<p class='p logo'>前阵子在b站上发现了一个樱花飘落的效果，然后就把它稍作修改后搬运到了我的博客上</p><h2 id="樱花飘落效果"><a href="#樱花飘落效果" class="headerlink" title="樱花飘落效果"></a>樱花飘落效果</h2><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><blockquote><p>原理很简单，就是利用<code>canvas</code>的<code>drawImage</code>方法，将图片绘制到画布上，然后利用<code>requestAnimationFrame</code>方法，每隔一定时间，更新图片的位置和旋转角度，并重新绘制，实现动画效果。</p></blockquote><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><p class='p logo'>在你的js目录下新建一个js文件，然后在主题文件里面引入这个js文件</p><p class='p logo'>代码如下</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建一个画布</span></span><br><span class="line"><span class="keyword">const</span> sakura_canvas = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;canvas&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置画布的样式,id,classname,宽高</span></span><br><span class="line">sakura_canvas.<span class="property">id</span> = <span class="string">&quot;sakura&quot;</span>;</span><br><span class="line">sakura_canvas.<span class="property">className</span> = <span class="string">&quot;sakura&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> canvas_height = <span class="variable language_">window</span>.<span class="property">innerHeight</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> canvas_width = <span class="variable language_">window</span>.<span class="property">innerWidth</span>;</span><br><span class="line"></span><br><span class="line">sakura_canvas.<span class="property">width</span> = canvas_height;</span><br><span class="line">sakura_canvas.<span class="property">height</span> = canvas_width;</span><br><span class="line"></span><br><span class="line">sakura_canvas.<span class="title function_">setAttribute</span>(</span><br><span class="line">  <span class="string">&quot;style&quot;</span>,</span><br><span class="line">  <span class="string">&quot;top: 0; left: 0; z-index: 100000; position: fixed; pointer-events: none;&quot;</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 插入到文档里面，这里是选择插入到body里</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(sakura_canvas);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取画布的上下文对象</span></span><br><span class="line"><span class="keyword">const</span> ctx = sakura_canvas.<span class="title function_">getContext</span>(<span class="string">&quot;2d&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义樱花的数量和容器</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">SAKURA_NUM</span> = <span class="number">60</span>;</span><br><span class="line"><span class="keyword">const</span> sakura_array = [];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建图片</span></span><br><span class="line"><span class="keyword">const</span> sakura_img = <span class="keyword">new</span> <span class="title class_">Image</span>();</span><br><span class="line"></span><br><span class="line">sakura_img.<span class="property">src</span> = <span class="string">&quot;https://img.hoshinagi.top/post/sakura.png&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建渲染函数</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">render</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="comment">// 清除画布</span></span><br><span class="line">  ctx.<span class="title function_">clearRect</span>(<span class="number">0</span>, <span class="number">0</span>, canvas_width, canvas_height);</span><br><span class="line">  <span class="comment">// 调用渲染函数</span></span><br><span class="line">  sakura_array.<span class="title function_">forEach</span>(<span class="function">(<span class="params">sakura</span>) =&gt;</span> sakura.<span class="title function_">animate</span>());</span><br><span class="line">  <span class="title function_">requestAnimationFrame</span>(render);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 当图片加载的时候调用渲染函数和重新调整尺寸函数</span></span><br><span class="line">sakura_img.<span class="property">onload</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="title function_">resize</span>();</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="variable constant_">SAKURA_NUM</span>; i++) &#123;</span><br><span class="line">    sakura_array.<span class="title function_">push</span>(<span class="keyword">new</span> <span class="title class_">Sakura</span>());</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">render</span>();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建樱花类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Sakura</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 随机生成花瓣的x, y坐标</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">x</span> = <span class="title class_">Math</span>.<span class="title function_">random</span>() * sakura_canvas.<span class="property">width</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">y</span> = <span class="title class_">Math</span>.<span class="title function_">random</span>() * sakura_canvas.<span class="property">height</span> * <span class="number">2</span> - sakura_canvas.<span class="property">height</span>;</span><br><span class="line">    <span class="comment">// 随机生成花瓣的宽高</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">width</span> = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">15</span> + <span class="number">15</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">height</span> = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">12</span> + <span class="number">10</span>;</span><br><span class="line">    <span class="comment">// 随机透明度</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">opacity</span> = <span class="variable language_">this</span>.<span class="property">width</span> / <span class="number">30</span>;</span><br><span class="line">    <span class="comment">// 设置一个随机数，后面实现旋转角度效果时会用到</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">rotate</span> = <span class="title class_">Math</span>.<span class="title function_">random</span>();</span><br><span class="line">    <span class="comment">// 速度初始化</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">xSpeed</span> = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">2</span> + <span class="number">3</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">ySpeed</span> = <span class="title class_">Math</span>.<span class="title function_">random</span>() + <span class="number">1.5</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">rotateSpeed</span> = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">0.02</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 绘制函数</span></span><br><span class="line">  <span class="title function_">draw</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 当花瓣超过canvas画布边界后，重新设置花瓣的坐标、速度、和转速</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">x</span> &gt; sakura_canvas.<span class="property">width</span> || <span class="variable language_">this</span>.<span class="property">y</span> &gt; sakura_canvas.<span class="property">height</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">x</span> = -sakura_img.<span class="property">width</span>; <span class="comment">// 刚好藏住</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">y</span> = <span class="title class_">Math</span>.<span class="title function_">random</span>() * sakura_canvas.<span class="property">height</span> * <span class="number">2</span> - sakura_canvas.<span class="property">height</span>;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">rotate</span> = <span class="title class_">Math</span>.<span class="title function_">random</span>();</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">rotateSpeed</span> = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">0.02</span>;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">xSpeed</span> = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">2</span> + <span class="number">3</span>;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">ySpeed</span> = <span class="title class_">Math</span>.<span class="title function_">random</span>() + <span class="number">1.5</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 设置整个canvas透明度基数</span></span><br><span class="line">    ctx.<span class="property">globalAlpha</span> = <span class="variable language_">this</span>.<span class="property">opacity</span>;</span><br><span class="line">    ctx.<span class="title function_">drawImage</span>(</span><br><span class="line">      sakura_img,</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">x</span>,</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">y</span>,</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">width</span> * (<span class="number">0.6</span> + <span class="title class_">Math</span>.<span class="title function_">abs</span>(<span class="title class_">Math</span>.<span class="title function_">cos</span>(<span class="variable language_">this</span>.<span class="property">rotate</span>)) / <span class="number">3</span>),</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">height</span> * (<span class="number">0.8</span> + <span class="title class_">Math</span>.<span class="title function_">abs</span>(<span class="title class_">Math</span>.<span class="title function_">sin</span>(<span class="variable language_">this</span>.<span class="property">rotate</span>)) / <span class="number">5</span>)</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">animte</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">x</span> += <span class="variable language_">this</span>.<span class="property">xSpeed</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">y</span> += <span class="variable language_">this</span>.<span class="property">ySpeed</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">rotate</span> += <span class="variable language_">this</span>.<span class="property">rotateSpeed</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">draw</span>();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 重新调整画布尺寸的函数</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">resize</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  sakura_canvas.<span class="property">width</span> = <span class="variable language_">window</span>.<span class="property">innerWidth</span>;</span><br><span class="line">  sakura_canvas.<span class="property">height</span> = <span class="variable language_">window</span>.<span class="property">innerHeight</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;resize&quot;</span>, resize);</span><br></pre></td></tr></table></figure><p class='p logo'>参考以下up主进行修改</p><a class="tag-Link" target="_blank" href="https://www.bilibili.com/video/BV1Gt4y1L7kv/?spm_id_from=333.337.search-card.all.click" title="原樱花飘落效果">  <div class="tag-link-tips">  引用站外地址，不保证站点的可用性和安全性</div>  <div class="tag-link-bottom"><div class="tag-link-left"><i class="xingzhifont icon-link"></i></div><div class="tag-link-right">  <div class="tag-link-title">原樱花飘落效果</div>  <div class="tag-link-sitename">yao大叔写前端时很帅</div>  </div><i class="xingzhifont icon-arrow-right-s-line"></i></div></a><p class='p logo'>图片预览</p><p>  <a href="https://img.hoshinagi.top/post/sakura.png" data-fancybox="images" data-caption="樱花" class="fancybox">  <img src="https://img.hoshinagi.top/post/sakura.png" data-lazy-src="https://img.hoshinagi.top/post/sakura.png" alt="樱花" class="entered">  </a>  <div class="img-alt is-center">樱花</div>  </p>  <p><a href="https://img.hoshinagi.top/post/sakura.png">点击下载图片</a></p><hr><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p class='p logo'>这个效果在使用的时候，会消耗部分性能，如果触发了别的动画比如图片缩放等行为，就会卡顿一下，这个问题目前还没找到解决方案，尝试着减少盒子阴影，好像会缓和很多，如果友友们发现了解决方案欢迎跟我分享，我后续会使用three.js对上面的代码进行重写</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 界面效果 </tag>
            
            <tag> 樱花飘落 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>推荐几款mac端好用的ssh连接工具</title>
      <link href="/posts/3afbb6f5.html"/>
      <url>/posts/3afbb6f5.html</url>
      
        <content type="html"><![CDATA[<p class='p logo'>因为需要经常对服务器上的文件进行操作，如果没有安装宝塔的话，会很麻烦，因为使用mac自带的ssh工具的话是不可以传输文件的，并且每次连接的时候都需要输入账号、密码、IP地址等，这样会很麻烦</p><p class='p logo'>然后我就去找了几款mac端ssh工具</p><h2 id="electerm"><a href="#electerm" class="headerlink" title="electerm"></a>electerm</h2><h3 id="下载方式"><a href="#下载方式" class="headerlink" title="下载方式"></a>下载方式</h3><p class='p logo'>可以直接从github上下载</p><a class="tag-Link" target="_blank" href="https://github.com/electerm/electerm/releases" title="electerm下载传送门">  <div class="tag-link-tips">  引用站外地址，不保证站点的可用性和安全性</div>  <div class="tag-link-bottom"><div class="tag-link-left"><i class="xingzhifont icon-link"></i></div><div class="tag-link-right">  <div class="tag-link-title">electerm下载传送门</div>  <div class="tag-link-sitename">electerm</div>  </div><i class="xingzhifont icon-arrow-right-s-line"></i></div></a><h3 id="主界面"><a href="#主界面" class="headerlink" title="主界面"></a>主界面</h3><p>  <a href="https://img.hoshinagi.top/post/iShot_2023-10-16_17.27.52.png" data-fancybox="images" data-caption="主界面" class="fancybox">  <img src="https://img.hoshinagi.top/post/iShot_2023-10-16_17.27.52.png" data-lazy-src="https://img.hoshinagi.top/post/iShot_2023-10-16_17.27.52.png" alt="主界面" class="entered">  </a>  <div class="img-alt is-center">主界面</div>  </p>  <h3 id="ftp-界面"><a href="#ftp-界面" class="headerlink" title="ftp 界面"></a>ftp 界面</h3><p>  <a href="https://img.hoshinagi.top/post/iShot_2023-10-16_17.32.55.png" data-fancybox="images" data-caption="ftp 界面" class="fancybox">  <img src="https://img.hoshinagi.top/post/iShot_2023-10-16_17.32.55.png" data-lazy-src="https://img.hoshinagi.top/post/iShot_2023-10-16_17.32.55.png" alt="ftp 界面" class="entered">  </a>  <div class="img-alt is-center">ftp 界面</div>  </p>  <div class="tip info"><p>只需要将文件进行拖拽就可以传输文件，非常方便</p></div><p class='p logo'>而且还有书签，每次连接完成后可以保存你的连接，下次就可以直接连接了</p><h2 id="Termius"><a href="#Termius" class="headerlink" title="Termius"></a>Termius</h2><h3 id="下载方式-1"><a href="#下载方式-1" class="headerlink" title="下载方式"></a>下载方式</h3><p class='p logo'>可以直接从github上下载</p><a class="tag-Link" target="_blank" href="https://www.termius.com" title="Termius官网">  <div class="tag-link-tips">  引用站外地址，不保证站点的可用性和安全性</div>  <div class="tag-link-bottom"><div class="tag-link-left"><i class="xingzhifont icon-link"></i></div><div class="tag-link-right">  <div class="tag-link-title">Termius官网</div>  <div class="tag-link-sitename">Termius</div>  </div><i class="xingzhifont icon-arrow-right-s-line"></i></div></a><h3 id="主界面-1"><a href="#主界面-1" class="headerlink" title="主界面"></a>主界面</h3><p>  <a href="https://img.hoshinagi.top/post/iShot_2023-10-16_17.44.10.png" data-fancybox="images" data-caption="主界面" class="fancybox">  <img src="https://img.hoshinagi.top/post/iShot_2023-10-16_17.44.10.png" data-lazy-src="https://img.hoshinagi.top/post/iShot_2023-10-16_17.44.10.png" alt="主界面" class="entered">  </a>  <div class="img-alt is-center">主界面</div>  </p>  <h3 id="ftp-界面-1"><a href="#ftp-界面-1" class="headerlink" title="ftp 界面"></a>ftp 界面</h3><p>  <a href="https://img.hoshinagi.top/post/iShot_2023-10-16_17.45.45.png" data-fancybox="images" data-caption="ftp 界面" class="fancybox">  <img src="https://img.hoshinagi.top/post/iShot_2023-10-16_17.45.45.png" data-lazy-src="https://img.hoshinagi.top/post/iShot_2023-10-16_17.45.45.png" alt="ftp 界面" class="entered">  </a>  <div class="img-alt is-center">ftp 界面</div>  </p>  <p class='p logo'>它的使用方式和功能都跟electerm差不多，但是体积比electerm大很多，界面更好看</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p class='p logo'>两款软件都是mac端非常好用的ssh连接工具，我个人目前主要用的是electrem，主要是因为它很简洁，而且体积很小，总的加起来就200来MB，而Termius快到500MB了</p>]]></content>
      
      
      <categories>
          
          <category> 软件推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> ssh </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建博客时遇到的一些问题以及使用nginx进行解决</title>
      <link href="/posts/4dd55f87.html"/>
      <url>/posts/4dd55f87.html</url>
      
        <content type="html"><![CDATA[<p>这阵子在将博客部署到我服务器上的时候遇到了一些问题，现在把这些问题的解决方案分享出来</p><p>首先是跨域问题了，那么什么是跨域呢</p><p>跨域（Cross-Origin）是指在不同域名或端口之间的请求，或者是不同协议（例如 HTTP 和 HTTPS）之间的请求。在浏览器环境中，由于同源策略（Same-Origin Policy）的限制，通常不允许这种类型的请求。</p><h3 id="在-nginx-解决跨域问题"><a href="#在-nginx-解决跨域问题" class="headerlink" title="在 nginx 解决跨域问题"></a>在 nginx 解决跨域问题</h3><p>比如我的博客需要引入很多网络图片，我的图片都是放在我的服务器上的，因为我的博客和图片是不在同一个域的，如果直接在博客中通过js、img标签等方式引入图片就会报错</p><p>我的图片是通过nginx来提供服务的，只需要在nginx配置文件中的server模块添加一个响应头就好了</p><p>如果你跟我一样是使用宝塔的话，nginx应该是在/www/server/nginx目录下</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span> <span class="number">443</span> ssl;</span><br><span class="line">        <span class="attribute">server_name</span> img.hoshinagi.top;  <span class="comment"># 服务器域名</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># ssl相关配置</span></span><br><span class="line">        <span class="attribute">ssl_certificate</span> ssl/img.hoshinagi.top.pem;</span><br><span class="line">        <span class="attribute">ssl_certificate_key</span> ssl/img.hoshinagi.top.key;</span><br><span class="line"></span><br><span class="line">        <span class="section">location</span> / &#123;</span><br><span class="line">            <span class="attribute">root</span> /www/wwwroot/blog/img; <span class="comment"># 根目录</span></span><br><span class="line">            <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;    <span class="comment"># 设置主机头</span></span><br><span class="line">            <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;    <span class="comment"># 设置真实IP</span></span><br><span class="line">            <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>; <span class="comment"># 设置代理IP</span></span><br><span class="line">            <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>; <span class="comment"># 设置协议</span></span><br><span class="line">            <span class="attribute">add_header</span> <span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span> <span class="string">&#x27;*&#x27;</span>;   <span class="comment"># 允许所有来源</span></span><br><span class="line">            <span class="attribute">add_header</span> <span class="string">&#x27;Access-Control-Allow-Methods&#x27;</span> <span class="string">&#x27;GET, POST, OPTIONS&#x27;</span>; <span class="comment"># 允许请求方法</span></span><br><span class="line">            <span class="attribute">add_header</span> <span class="string">&#x27;Access-Control-Allow-Headers&#x27;</span> <span class="string">&#x27;DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range&#x27;</span>;</span><br><span class="line">            <span class="attribute">add_header</span> <span class="string">&#x27;Access-Control-Max-Age&#x27;</span> <span class="number">1728000</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这时候重新启动一下nginx让配置文件生效就好了</p><p>需要注意的是，location /表示的意思是匹配所有以/开头的请求，等同于你所有的请求都会被匹配到，后面跟的参数也会原封不动传到服务器</p><h3 id="使用-nginx-反向代理-http-服务"><a href="#使用-nginx-反向代理-http-服务" class="headerlink" title="使用 nginx 反向代理 http 服务"></a>使用 nginx 反向代理 http 服务</h3><p>如果你跟我一样，评论系统和博客搭建在同一台服务器上的话或者是类似的两个需要通信的服务搭建在一台服务器上，那么就需要配置一下nginx反向代理</p><p>反向代理就是客户端发送请求到Nginx反向代理服务器，然后Nginx服务器将请求转发到后端的真实服务器上，并将响应返回给客户端。这个过程中，客户端和Nginx反向代理服务器之间建立的是HTTPS连接，然后Nginx反向代理服务器和真实服务器之间建立的是HTTP、HTTPS等连接</p><p>比如我在博客系统通过域名twikoo.hoshinagi.top访问评论系统，就是就是在博客进行评论，然后因为博客域名和评论域名指向是同一台服务器，请求到服务器上之后，服务器再将请求转发到服务器上的4000端口上的服务，然后将结果返回给博客系统</p><p>nginx配置如下</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span> <span class="number">443</span> ssl;</span><br><span class="line">        <span class="attribute">server_name</span> twikoo.hoshinagi.top;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">ssl_certificate</span> ssl/twikoo.hoshinagi.top.pem;</span><br><span class="line">        <span class="attribute">ssl_certificate_key</span> ssl/twikoo.hoshinagi.top.key;</span><br><span class="line"></span><br><span class="line">        <span class="section">location</span> / &#123;</span><br><span class="line">            <span class="attribute">proxy_pass</span> http://localhost:4000;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">            <span class="comment"># add_header &#x27;Access-Control-Allow-Origin&#x27; &#x27;*&#x27;;</span></span><br><span class="line">            <span class="comment"># add_header &#x27;Access-Control-Allow-Methods&#x27; &#x27;GET, POST, OPTIONS&#x27;;</span></span><br><span class="line">            <span class="comment"># add_header &#x27;Access-Control-Allow-Headers&#x27; &#x27;DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range&#x27;;</span></span><br><span class="line">            <span class="comment"># add_header &#x27;Access-Control-Max-Age&#x27; 1728000;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这里需要注意的是，nginx中不需要再配置跨域，因为twikoo已经配置过了，如果在nginx中再配置的话，就会报错如下，因为Access-Control-Allow-Origin头部只能指定一个源</p><p><img src="https://img.hoshinagi.top/post/3931697382350_.pic.webp" alt="报错"></p>]]></content>
      
      
      <categories>
          
          <category> 经验分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker配置前端路由</title>
      <link href="/posts/1d432e56.html"/>
      <url>/posts/1d432e56.html</url>
      
        <content type="html"><![CDATA[<h3 id="使用-docker-配置-vue-路由"><a href="#使用-docker-配置-vue-路由" class="headerlink" title="使用 docker 配置 vue 路由"></a>使用 docker 配置 vue 路由</h3><p>如果我们使用docker直接部署了一个vue项目的话，那么你项目中的路由就会失效，vue项目是只有一个html文件的，所以不进行配置的话，路由就会失效</p><p>要先让路由生效，这时候我们要配置一下nginx</p><p>你可以直接在dockerfile文件中进行配置/p><p>也可以在容器创建之后进入到容器内部的/etc/nginx/中修改nginx.conf文件进行配置</p><p>修改配置文件内容http模块下的server模块如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    # 监听的端口</span><br><span class="line">    listen       80;</span><br><span class="line">    # 监听ipv6地址的80端口</span><br><span class="line">    listen  [::]:80;</span><br><span class="line">    # 服务器名称</span><br><span class="line">    server_name  localhost;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    #access_log  /var/log/nginx/host.access.log  main;</span><br><span class="line"></span><br><span class="line">    # 尝试按照以下顺序提供文件：首先是请求的URI路径对应的文件，然后是请求的URI路径对应的目录（如果它是一个目录的话），最后是/index.html文件。这通常用于单页应用程序的设置，确保当请求的URI路径不存在时，始终返回首页。</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        # 根目录</span><br><span class="line">        root   /usr/share/nginx/html;</span><br><span class="line">        try_files $uri $uri/ /index.html;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #error_page  404              /404.html;</span><br><span class="line"></span><br><span class="line">    # redirect server error pages to the static page /50x.html</span><br><span class="line">    #</span><br><span class="line">    error_page   500 502 503 504  /50x.html;</span><br><span class="line">    location = /50x.html &#123;</span><br><span class="line">        root   /usr/share/nginx/html;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后重新启动容器，路由就已经配置成功了</p>]]></content>
      
      
      <categories>
          
          <category> 经验分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> 路由配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>xss攻击</title>
      <link href="/posts/b58d10bd.html"/>
      <url>/posts/b58d10bd.html</url>
      
        <content type="html"><![CDATA[<h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>XSS，全称跨站脚本攻击（Cross-site Scripting），是一种常见的网络攻击手段。其原理是攻击者在web页面中插入恶意脚本，当用户访问该页面时，这些脚本会被执行，从而盗取用户数据或进行其他恶意操作。</p><h4 id="类型"><a href="#类型" class="headerlink" title="类型"></a>类型</h4><p>XSS分为存储型、反射型和DOM型三种。</p><p>存储型XSS：攻击者将恶意脚本存储在服务器上，当用户访问该页面时，脚本会从服务器上读取，从而执行恶意脚本。</p><p>反射型XSS：攻击者将恶意脚本以URL参数的形式提交给服务器，服务器将参数拼接到HTML中返回，当用户访问该页面时，脚本会从URL参数中读取，从而执行恶意脚本。</p><p>DOM型XSS：攻击者将恶意脚本以URL参数的形式提交给服务器，服务器将参数拼接到HTML中返回，当用户访问该页面时，浏览器解析HTML时，会执行HTML中的脚本，从而执行恶意脚本。</p><p>反射型和DOM型XSS的区别在于，反射型XSS脚本会从URL参数中读取，而DOM型XSS脚本会从HTML中读取。</p><h3 id="靶场环境安装"><a href="#靶场环境安装" class="headerlink" title="靶场环境安装"></a>靶场环境安装</h3><p>这里以pikachu漏洞平台为例</p><p>关于漏洞环境搭建可以参考我的上一篇文章或者直接github或者baidu搜即可</p><h3 id="进行攻击"><a href="#进行攻击" class="headerlink" title="进行攻击"></a>进行攻击</h3><h4 id="反射类型或不持久类型-xss-漏洞"><a href="#反射类型或不持久类型-xss-漏洞" class="headerlink" title="反射类型或不持久类型 xss 漏洞"></a>反射类型或不持久类型 xss 漏洞</h4><p>这个很简单，就是你输入的内容会直接回显在界面上，这时候你要是输入一个javascript脚本的话，这个脚本就会执行</p><p>需要注意的是，有时候网站会对你输入的内容的长度进行限制，比如限制只能输入20个字符，这时候我们就没办法输入脚本了，但是我们可以按f12打开控制台，选中输入框调整输入长度限制就好了</p><p><img src="https://xizhi-picgo.oss-cn-guangzhou.aliyuncs.com/xingzhiblog/post/network%20security/xss/xianzhi.jpg" alt="如果长度被限制了"></p><p>比如你输入</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">alert</span>(<span class="variable language_">document</span>.<span class="property">domain</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>提交之后界面就会弹出当前网站的域名</p><h4 id="存储型-xss-攻击"><a href="#存储型-xss-攻击" class="headerlink" title="存储型 xss 攻击"></a>存储型 xss 攻击</h4><p>这个跟反射类型差不多，只是你输入的脚本在提交之后服务器会保存下来，导致以后不管谁访问这个网站，都会触发你输入的xss脚本，这个就常见于评论系统、留言板，你在评论或留言之后服务器会保存你的评论，而你的评论如果带有xss脚本，那么访问带有这个评论的网站都会触发脚本</p><p>比如你在留言板或者评论区输入</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">alert</span>(<span class="variable language_">document</span>.<span class="property">domain</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果网站没有做防存储型xss攻击，那么以后不管是哪个用户访问访问都会触发这个脚本</p><p>以pikachu为例子</p><p><img src="https://xizhi-picgo.oss-cn-guangzhou.aliyuncs.com/xingzhiblog/post/network%20security/xss/iShot_2023-10-05_13.58.47.png" alt="存储型xss攻击"></p><p>提交之后</p><p><img src="https://xizhi-picgo.oss-cn-guangzhou.aliyuncs.com/xingzhiblog/post/network%20security/xss/iShot_2023-10-05_13.59.29.png" alt="提交成功"></p><p>再次访问界面还是会触发这个脚本</p><h4 id="DOM-型-xss-攻击"><a href="#DOM-型-xss-攻击" class="headerlink" title="DOM 型 xss 攻击"></a>DOM 型 xss 攻击</h4><p>这个是跟反射型和存储型不一样的地方，这个xss攻击的触发点不是在服务器，而是在客户端，也就是说，这个xss脚本不是从服务器读取的，而是从html中读取的，这个xss脚本在html中，但是你输入的脚本在提交之后会直接被插入到html中，导致脚本执行</p><p>比如你在输入框输入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27; onclick=&quot;alert(document.domain)&quot;</span><br></pre></td></tr></table></figure><p>提交之后，服务器会返回一个html，这个html中就有你输入的脚本，导致脚本执行</p><p>以pikachu为例子</p><p><img src="https://xizhi-picgo.oss-cn-guangzhou.aliyuncs.com/xingzhiblog/post/network%20security/xss/iShot_2023-10-05_14.32.18.png" alt="DOM型xss攻击"></p><p>点击生成的链接就会触发事件</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>以上是xss攻击的最基本使用，其实xss攻击是很厉害的，它能配合kali中很多工具来达成很多效果，比如创建钓鱼网站盗取账号密码、控制用户浏览器等等</p><p>最近学了sql注入和xss攻击，感觉sql注入没什么用啊，因为sql注入很好预防，但是xss攻击是比较难预防的，而且危害性不弱于sql注入</p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞 </tag>
            
            <tag> xss </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>推荐一些好用的靶场环境</title>
      <link href="/posts/c86f94c1.html"/>
      <url>/posts/c86f94c1.html</url>
      
        <content type="html"><![CDATA[<p>最近在学网络安全，学网络安全最重要的是实际操作，但是我又不能自己搭建一个靶场环境，那样太费时间了，然后就自己在github上找了一些比较好的靶场环境</p><h3 id="vulstudy"><a href="#vulstudy" class="headerlink" title="vulstudy"></a>vulstudy</h3><p>这个是一个集成漏洞平台，专门收集当下流行的漏洞，并将其制作成docker镜像，方便大家快速搭建环境，节省搭建时间</p><p>他目前包括的漏洞平台有很多，比如DVWA、bWapp、XSSed等等13(目前)个漏洞环境。</p><p>github传送门: <a href="https://github.com/c0ny1/vulstudy">vulstudy</a></p><h3 id="bWapp"><a href="#bWapp" class="headerlink" title="bWapp"></a>bWapp</h3><p>bwapp是一个集成了各种常见漏洞和最新漏洞的开源Web应用程序，包含了超过100种漏洞，涵盖了所有主要的已知Web漏洞，可以直接通过docker部署，使用bWapp的时候需要先访问install.php进行数据初始化</p><p>github传送门: <a href="https://github.com/raesene/bWAPP">bwapp</a></p><h3 id="pikachu"><a href="#pikachu" class="headerlink" title="pikachu"></a>pikachu</h3><p>pikachu跟bwapp差不多，包含了主要的web应用漏洞，使用方式也跟bWapp一样，第一次使用也需要先初始化数据，可以直接通过docker进行部署</p><p>github传送门: <a href="https://github.com/zhuifengshaonianhanlu/pikachu">pikachu</a></p><h3 id="XSS-Challenges"><a href="#XSS-Challenges" class="headerlink" title="XSS Challenges"></a>XSS Challenges</h3><p>这是一个日本的网站，如字面意思，是一个专门用于训练xss跨站攻击的平台，目前共有12关</p><p>网址: <a href="https://xss-quiz.int21h.jp">XSS Challenges</a></p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
            <tag> 漏洞 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用docker部署前后端项目</title>
      <link href="/posts/cc57a553.html"/>
      <url>/posts/cc57a553.html</url>
      
        <content type="html"><![CDATA[<p>最近学了 docker，就想着使用 docker 将之前做的前后端项目制作成为 docker 镜像并部署到服务器上</p><hr><h3 id="docker-部署-vue-项目"><a href="#docker-部署-vue-项目" class="headerlink" title="docker 部署 vue 项目"></a>docker 部署 vue 项目</h3><p>首先使用<strong>npm run build</strong>命令构建你的vue项目，然后会在根目录下生成一个dist文件夹</p><p>然后在你的项目根目录下创建一个Dockerfile文件，文件里面包含的是docker的一系列命令和指令，用于构建docker镜像</p><p>编辑Dockerfile文件</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用官方的 Node.js 镜像作为基础镜像</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">FROM</span> node as build-stage</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在容器中创建一个工作目录</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /app</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 复制 dist目录 到工作目录</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> ./dist /app/dist</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用官方的nginx镜像</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">FROM</span> nginx:<span class="number">1.21</span>.<span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 复制项目文件到工作目录</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> --from=build-stage /app/dist /usr/share/nginx/html</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里是使用nginx对前端项目进行部署，所以在端口映射的时候，要映射的是80端口而不是5173端口，另外还要注意的是版本问题，自己项目用什么版本就指定什么版本，如果不指定就是最新版，比如要用node.js14版本，就FROM node:14 as build-stage</p><p>然后通过命令构建镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">在项目根目录执行</span></span><br><span class="line">docker build -t &lt;image_name&gt; .</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">如果dockerfile文件如果沒有放在根目录</span></span><br><span class="line">docker build -f &lt;dockerfile_path&gt; -t &lt;image_name&gt; .</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>等构建完成后，通过docker images命令就可以查看到构建完成的镜像</p><p>根据镜像创建容器并启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">docker run -d --name &lt;你的容器名字&gt; -p &lt;本机端口&gt;:80 &lt;你的镜像名字&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后访问本机映射的端口就能访问到vue项目了</p><p>这里需要注意的是，如果你要将vue项目打包成docker镜像并部署到服务器上的话，建议先在本机上构建打包，然后将生成的dist文件夹上传到服务器或者直接在本机创建镜像并上传到自己的仓库，然后服务器直接拉取</p><p>如果直接在服务器进行构建的话会消耗很多内存，会导致服务器卡死--我尝试过，服务器2G的内存直接爆了</p><h3 id="docker-部署-java-springboot-后端项目"><a href="#docker-部署-java-springboot-后端项目" class="headerlink" title="docker 部署 java springboot 后端项目"></a>docker 部署 java springboot 后端项目</h3><p>因为我的前端项目和后端项目是一起开发的，所以就都部署到服务器上了</p><p>打包你的java后端程序，然后会在target目录下生成一个jar包，那后面就简单了，只需要一个java环境然后编译一下这个jar包就可以启动服务了</p><p>创建dockerfile</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加官方jdk镜像</span></span><br><span class="line"><span class="keyword">FROM</span> openjdk</span><br><span class="line"></span><br><span class="line"><span class="comment"># 复制你的jar包到根目录下的app.jar</span></span><br><span class="line"><span class="keyword">ADD</span><span class="language-bash"> example.jar app.jar</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 暴露8080端口</span></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">8080</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 容器在启动的时候对jar包进行编译</span></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> java -jar app.jar</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后再通过docker命令进行构建和运行<p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 构建</span></span><br><span class="line">docker build -f &lt;dockerfile路径&gt; -t &lt;镜像名字&gt; .</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行</span></span><br><span class="line">docker <span class="keyword">run</span><span class="language-bash"> -d --name &lt;容器名字&gt; -p &lt;本机端口&gt;:8080 &lt;镜像名字&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这样就大功告成了</p><p><a href="http://project.hoshinagi.top:5173">这里贴上我部署在服务器上的前后端项目</a></p>]]></content>
      
      
      <categories>
          
          <category> 经验分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用python爬取酷狗音乐</title>
      <link href="/posts/2afba6c0.html"/>
      <url>/posts/2afba6c0.html</url>
      
        <content type="html"><![CDATA[<h2 id="使用-python40-行代码轻松实现爬取酷狗音乐的数据"><a href="#使用-python40-行代码轻松实现爬取酷狗音乐的数据" class="headerlink" title="使用 python40 行代码轻松实现爬取酷狗音乐的数据"></a>使用 python40 行代码轻松实现爬取酷狗音乐的数据</h2><h4 id="导入对应的库"><a href="#导入对应的库" class="headerlink" title="导入对应的库"></a>导入对应的库</h4><blockquote><p>json math urllib 是自带的，如果没有的话去下载就好</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote</span><br></pre></td></tr></table></figure><h4 id="编写请求头并将关键词进行-URL-编码"><a href="#编写请求头并将关键词进行-URL-编码" class="headerlink" title="编写请求头并将关键词进行 URL 编码"></a>编写请求头并将关键词进行 URL 编码</h4><blockquote><p>搜索 API 的接口要求搜索的关键词是 URL 字符串形式，所以要对我们的关键词进行 URL 编码</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) &#x27;</span></span><br><span class="line">                  <span class="string">&#x27;Version/16.1 Safari/605.1.15 &#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">keyword = <span class="built_in">input</span>(<span class="string">&quot;请输入要搜索的关键词\n&quot;</span>)</span><br><span class="line"></span><br><span class="line">keyword_url = quote(keyword)</span><br></pre></td></tr></table></figure><h4 id="发送网络请求获取数据"><a href="#发送网络请求获取数据" class="headerlink" title="发送网络请求获取数据"></a>发送网络请求获取数据</h4><blockquote><p>获取到搜索的数据后进行 json 解析为 python 中的对象</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">list_url = <span class="string">f&#x27;http://mobilecdn.kugou.com/api/v3/search/song?format=json&amp;keyword=<span class="subst">&#123;keyword_url&#125;</span>&amp;page=1&amp;pagesize=20&amp;showtype=1&#x27;</span></span><br><span class="line"></span><br><span class="line">list_res = requests.get(list_url, headers=headers).text</span><br><span class="line"></span><br><span class="line">song_list = json.loads(list_res)[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;info&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i, song <span class="keyword">in</span> <span class="built_in">enumerate</span>(song_list):</span><br><span class="line">    <span class="built_in">print</span>(</span><br><span class="line">        <span class="string">f&quot;第<span class="subst">&#123;i + <span class="number">1</span>&#125;</span>首: 歌曲名字: <span class="subst">&#123;song[<span class="string">&#x27;songname&#x27;</span>]&#125;</span> 歌手: <span class="subst">&#123;song[<span class="string">&#x27;singername&#x27;</span>]&#125;</span> 歌曲时长: <span class="subst">&#123;math.floor(song[<span class="string">&#x27;duration&#x27;</span>] / <span class="number">60</span>)&#125;</span>分<span class="subst">&#123;song[<span class="string">&#x27;duration&#x27;</span>] % <span class="number">60</span>&#125;</span>秒&quot;</span>)</span><br></pre></td></tr></table></figure><h4 id="输入要下载的音乐名字获取音乐信息并下载"><a href="#输入要下载的音乐名字获取音乐信息并下载" class="headerlink" title="输入要下载的音乐名字获取音乐信息并下载"></a>输入要下载的音乐名字获取音乐信息并下载</h4><blockquote><p>上一次网络请求获取到的是一个列表，相当于我们在酷狗音乐进行了一次歌曲搜索，搜索到了很多歌曲，但是我们只需要自己想要的，所以还需要再次发送一次网络请求获取歌曲的详细数据，比如歌曲的地址，歌手等信息，这里我们将获取到的音乐信息保存到当前目录，格式是 MP3</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">song_num = <span class="built_in">input</span>(<span class="string">&quot;你要下载第几首音乐\n&quot;</span>)</span><br><span class="line"></span><br><span class="line">info_url = <span class="string">f&#x27;https://m.kugou.com/app/i/getSongInfo.php?cmd=playInfo&amp;hash=<span class="subst">&#123;song_list[<span class="built_in">int</span>(song_num) - <span class="number">1</span>].get(<span class="string">&quot;hash&quot;</span>)&#125;</span>&#x27;</span></span><br><span class="line">file_name = song_list[<span class="built_in">int</span>(song_num) - <span class="number">1</span>][<span class="string">&#x27;filename&#x27;</span>]</span><br><span class="line"></span><br><span class="line">headers2 = &#123;</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) &#x27;</span></span><br><span class="line">                  <span class="string">&#x27;Version/16.1 Safari/605.1.15 &#x27;</span>,</span><br><span class="line">    <span class="comment"># &#x27;Cookie&#x27;: &#x27;musicwo17=kugou; Hm_lpvt_aedee6983d4cfc62f509129360d6bb3d=1686540014; &#x27;</span></span><br><span class="line">    <span class="comment">#           &#x27;Hm_lvt_aedee6983d4cfc62f509129360d6bb3d=1686500385; kg_dfid=1JdD7s2UqgFe4RZJgN40SdHE; &#x27;</span></span><br><span class="line">    <span class="comment">#           &#x27;kg_dfid_collect=d41d8cd98f00b204e9800998ecf8427e; kg_mid=6a0bba3ff53cba02176341d402922273 &#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">song_info = requests.get(info_url, headers=headers2)</span><br><span class="line"></span><br><span class="line">song_url = song_info.json()[<span class="string">&#x27;url&#x27;</span>]</span><br><span class="line"></span><br><span class="line">song_content = requests.get(song_url).content</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">f&#x27;<span class="subst">&#123;file_name&#125;</span>.mp3&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> song_file:</span><br><span class="line">    song_file.write(song_content)</span><br></pre></td></tr></table></figure><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><blockquote><p>以上就是 python 使用爬虫获取酷狗音乐的例子，我们做一个 python 爬虫小总结</p></blockquote><h5 id="确定数据源"><a href="#确定数据源" class="headerlink" title="确定数据源"></a>确定数据源</h5><blockquote><p>首先我们要先确定数据源，就是我们要爬取的数据来自于哪里，比如你要爬取的是图片，那么你就要确定网站的图片来源于哪里，一般的图片的地址都是通过网络请求获取的，这时候你就要去监听浏览器的网络请求，找到获取图片数据的那次网络请求，或者你需要的是文本信息，这时候你需要的就是网站的文本，它可能不是通过网络请求获取的，这时候我们就直接获取网站的html文档，然后对里面的dom信息进行提取</p></blockquote><h5 id="并不是所有网站的数据都是可以爬取到的"><a href="#并不是所有网站的数据都是可以爬取到的" class="headerlink" title="并不是所有网站的数据都是可以爬取到的"></a>并不是所有网站的数据都是可以爬取到的</h5><blockquote><p>有些网站做了反爬虫措施，比如你虽然可以爬取到对方网站的数据，但是人家给你的数据可能是经过加密的或者是假的，这时候我们需要自己去辨析数据是否可靠</p></blockquote><h4 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote</span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) &#x27;</span></span><br><span class="line">                  <span class="string">&#x27;Version/16.1 Safari/605.1.15 &#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">keyword = <span class="built_in">input</span>(<span class="string">&quot;请输入要搜索的关键词\n&quot;</span>)</span><br><span class="line"></span><br><span class="line">keyword_url = quote(keyword)</span><br><span class="line"></span><br><span class="line">list_url = <span class="string">f&#x27;http://mobilecdn.kugou.com/api/v3/search/song?format=json&amp;keyword=<span class="subst">&#123;keyword_url&#125;</span>&amp;page=1&amp;pagesize=20&amp;showtype=1&#x27;</span></span><br><span class="line"></span><br><span class="line">list_res = requests.get(list_url, headers=headers).text</span><br><span class="line"></span><br><span class="line">song_list = json.loads(list_res)[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;info&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i, song <span class="keyword">in</span> <span class="built_in">enumerate</span>(song_list):</span><br><span class="line">    <span class="built_in">print</span>(</span><br><span class="line">        <span class="string">f&quot;第<span class="subst">&#123;i + <span class="number">1</span>&#125;</span>首: 歌曲名字: <span class="subst">&#123;song[<span class="string">&#x27;songname&#x27;</span>]&#125;</span> 歌手: <span class="subst">&#123;song[<span class="string">&#x27;singername&#x27;</span>]&#125;</span> 歌曲时长: <span class="subst">&#123;math.floor(song[<span class="string">&#x27;duration&#x27;</span>] / <span class="number">60</span>)&#125;</span>分<span class="subst">&#123;song[<span class="string">&#x27;duration&#x27;</span>] % <span class="number">60</span>&#125;</span>秒&quot;</span>)</span><br><span class="line"></span><br><span class="line">song_num = <span class="built_in">input</span>(<span class="string">&quot;你要下载第几首音乐\n&quot;</span>)</span><br><span class="line"></span><br><span class="line">info_url = <span class="string">f&#x27;https://m.kugou.com/app/i/getSongInfo.php?cmd=playInfo&amp;hash=<span class="subst">&#123;song_list[<span class="built_in">int</span>(song_num) - <span class="number">1</span>].get(<span class="string">&quot;hash&quot;</span>)&#125;</span>&#x27;</span></span><br><span class="line">file_name = song_list[<span class="built_in">int</span>(song_num) - <span class="number">1</span>][<span class="string">&#x27;filename&#x27;</span>]</span><br><span class="line"></span><br><span class="line">headers2 = &#123;</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) &#x27;</span></span><br><span class="line">                  <span class="string">&#x27;Version/16.1 Safari/605.1.15 &#x27;</span>,</span><br><span class="line">    <span class="comment"># &#x27;Cookie&#x27;: &#x27;musicwo17=kugou; Hm_lpvt_aedee6983d4cfc62f509129360d6bb3d=1686540014; &#x27;</span></span><br><span class="line">    <span class="comment">#           &#x27;Hm_lvt_aedee6983d4cfc62f509129360d6bb3d=1686500385; kg_dfid=1JdD7s2UqgFe4RZJgN40SdHE; &#x27;</span></span><br><span class="line">    <span class="comment">#           &#x27;kg_dfid_collect=d41d8cd98f00b204e9800998ecf8427e; kg_mid=6a0bba3ff53cba02176341d402922273 &#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">song_info = requests.get(info_url, headers=headers2)</span><br><span class="line"></span><br><span class="line">song_url = song_info.json()[<span class="string">&#x27;url&#x27;</span>]</span><br><span class="line"></span><br><span class="line">song_content = requests.get(song_url).content</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">f&#x27;<span class="subst">&#123;file_name&#125;</span>.mp3&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> song_file:</span><br><span class="line">    song_file.write(song_content)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>祝我19岁生日快乐！</title>
      <link href="/posts/8ff97ce2.html"/>
      <url>/posts/8ff97ce2.html</url>
      
        <content type="html"><![CDATA[<h2 id="回顾-18-岁"><a href="#回顾-18-岁" class="headerlink" title="回顾 18 岁"></a>回顾 18 岁</h2><h3 id="高考"><a href="#高考" class="headerlink" title="高考"></a>高考</h3><blockquote><p>现在回想起高考仿佛在昨日，不知不觉已经快是一个大二的学生了，高考也不能说没有考好吧，毕竟我实力也就那样，虽然最后冲刺冲了上去，但是基础还是不稳固，遗憾确实会有一点，不过后来逐渐释然了，我觉得一切都有它的意义，即使考的不好也有它的意义，分数不能决定一切，我一直都是这么相信的。<br>高考让我学会了挺多的</p><blockquote><p>有些人在高考之后可能就再也见不到了，同学都去了不同的城市，去追随他们的梦想，毕业后又会去往不同的城市工作<br>有时候就是这么一张纸，能决定你的初始层次<br>只有在关键时刻赢的人才是最终赢家</p></blockquote></blockquote><h3 id="开始接触编程"><a href="#开始接触编程" class="headerlink" title="开始接触编程"></a>开始接触编程</h3><blockquote><p>考完后一身轻松，放下了所有的包袱，终于可以好好做自己喜欢的事了，刚好家里买了一台台式电脑，于是开始编程之旅了，一开始是打算学习 java 的，但是因为 java 的初学难度高，把我劝退了，岂可修！！！然后我就阴差阳错开始学习了前端，前端学习还是比较有趣轻松的，因为你所做的东西立马可以在浏览器中见到，而且前端无拘无束，你想写什么都可以，你可以在浏览器中把你脑海里经常幻想出来的画面展示出来，那时候真的很快乐，我能一天从早上起床一直到休息前都在电脑前学习前端(现在想想我那时候是不是超级厉害)然后经过我的努力学习，很快就学习完了前端三剑客 html、css、javascript<br>之后在我师傅的带领下开始学习 java，有了前端的基础学习 java 也轻松了许多，最起码不是啥都不懂了，学起来还是蛮快的，然后一个月学完了 javaee<br>之后发现了尚硅谷和黑马程序员这几个平台，学习了 web 开发、前后端结合、微信小程序等等<br>然后对 Unity 游戏开发有了兴趣，寒假学习了一个月，哈哈，现在能做出点极其简单的小游戏<br>再之后就是根据自己的兴趣在进行学习了，学习更多的框架，更多插件，不断拓展</p></blockquote><h2 id="新的征程"><a href="#新的征程" class="headerlink" title="新的征程"></a>新的征程</h2><h3 id="开启我的-19-岁！"><a href="#开启我的-19-岁！" class="headerlink" title="开启我的 19 岁！"></a>开启我的 19 岁！</h3><blockquote><p>现在想想学习了那么久了，该做出点成效了，所以接下来打算运用自己的知识，做出点能丰富我 19 岁的成绩<br>18 岁的我固然很精彩，但是往后的我也不会输于 18 岁的我的！如果生命中某件事让你开心，那你就尽管去做，加油吧！我自己！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在java后端解决跨域问题</title>
      <link href="/posts/85c1fe2e.html"/>
      <url>/posts/85c1fe2e.html</url>
      
        <content type="html"><![CDATA[<h3 id="第一种方式使用-CrossOrigin-注解"><a href="#第一种方式使用-CrossOrigin-注解" class="headerlink" title="第一种方式使用@CrossOrigin 注解"></a>第一种方式使用@CrossOrigin 注解</h3><blockquote><p>在你的 controller 类中处理请求的方法前加上@CrossOrigin 这个注解或者直接在 controller 类上加上这个注解，例如</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@CrossOrigin</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;/login&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R&lt;Manager&gt; <span class="title function_">login</span><span class="params">(<span class="meta">@RequestBody</span> Map&lt;String, String&gt; map, HttpSession httpSession)</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> map.get(<span class="string">&quot;username&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> map.get(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">    LambdaQueryWrapper&lt;Manager&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    queryWrapper.eq(Manager::getManagerName, username);</span><br><span class="line"></span><br><span class="line">    <span class="type">Manager</span> <span class="variable">manager</span> <span class="operator">=</span> managerService.getOne(queryWrapper);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (manager == <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> R.error(<span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!manager.getPassword().equals(password)) &#123;</span><br><span class="line">        <span class="keyword">return</span> R.error(<span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    BaseContext.setCurrentId((<span class="type">long</span>) manager.getId());</span><br><span class="line"></span><br><span class="line">    manager.setToken(JwtUtil.getToken(map));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> R.success(manager, <span class="string">&quot;登录成功&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>这样在处理前端请求的时候就不会发生跨域问题了</p></blockquote><h4 id="好处"><a href="#好处" class="headerlink" title="好处"></a>好处</h4><blockquote><p>使用一个注解就可以解决，非常方便</p></blockquote><h4 id="弊端"><a href="#弊端" class="headerlink" title="弊端"></a>弊端</h4><blockquote><p>每一个方法前都需要加上一个注解，很麻烦</p></blockquote><h3 id="第二种方式，使用配置类-WebMvcConfigurationSupport"><a href="#第二种方式，使用配置类-WebMvcConfigurationSupport" class="headerlink" title="第二种方式，使用配置类 WebMvcConfigurationSupport"></a>第二种方式，使用配置类 WebMvcConfigurationSupport</h3><h4 id="在你的项目中创建一个配置类并继承-WebMvcConfigurationSupport"><a href="#在你的项目中创建一个配置类并继承-WebMvcConfigurationSupport" class="headerlink" title="在你的项目中创建一个配置类并继承 WebMvcConfigurationSupport"></a>在你的项目中创建一个配置类并继承 WebMvcConfigurationSupport</h4><h4 id="重写父类的-addCorsMappings-方法"><a href="#重写父类的-addCorsMappings-方法" class="headerlink" title="重写父类的 addCorsMappings 方法"></a>重写父类的 addCorsMappings 方法</h4><blockquote><p>方法说明<br>addMapping：配置允许跨域请求的路径。<br>allowedOrigins：配置允许访问的源（域名）列表。<br>allowedMethods：配置允许的请求方法列表。<br>allowedHeaders：配置允许的请求头列表。<br>exposedHeaders：配置允许前端访问的响应头列表。<br>allowCredentials：配置是否允许发送 Cookie 等凭证信息。<br>maxAge：配置预检请求（OPTIONS 请求）的最大缓存时间。</p></blockquote><hr><blockquote><p>例如我这里</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span>  <span class="title class_">WebMvcConfig</span> <span class="keyword">extends</span> <span class="title class_">WebMvcConfigurationSupport</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">addCorsMappings</span><span class="params">(CorsRegistry registry)</span> &#123;</span><br><span class="line">        registry.addMapping(<span class="string">&quot;/**&quot;</span>)</span><br><span class="line">                .allowedOrigins(<span class="string">&quot;*&quot;</span>)</span><br><span class="line">                .allowedMethods(<span class="string">&quot;POST&quot;</span>, <span class="string">&quot;GET&quot;</span>, <span class="string">&quot;DELETE&quot;</span>, <span class="string">&quot;PUT&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><blockquote><p>在 java 只可以使用两种方式解决跨域问题，一种是使用@CrossOrigin 注解，一种是使用 WebMvcConfigurationSupport 配置类<br>另外需要注意的是，解决跨域问题还有很多方式，这里只阐述使用 java 该如何解决，如果在前端解决的话，需要使用 JSONP，JSONP 是一种在跨域请求中获取数据的方法。它通过在页面中动态创建 script 标签，将请求数据作为回调函数的参数返回，从而绕过浏览器的同源策略限制。JSONP 只支持 GET 请求，且需要服务器端配合返回合适的响应。——不推荐使用<br>还可以使用代理服务器(比如 nginx)进行解决，前端应用发送请求到代理服务器，然后由代理服务器转发请求到目标服务器，并将响应返回给前端应用。因为代理服务器与目标服务器位于同一域下，所以不存在跨域问题。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> 后端 </tag>
            
            <tag> 跨域 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用canvas来实现一个简单的鼠标特效</title>
      <link href="/posts/759a7587.html"/>
      <url>/posts/759a7587.html</url>
      
        <content type="html"><![CDATA[<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><blockquote><p>每次点击屏幕的时候，就使用 canvas 画布画一些小星星，然后在每一帧的时候清除 canvas 画布的内容，同时更新这些星星的位置、速度、半径，当这些星星的位置超过屏幕范围或者半径为 0 的时候，再删除他们</p></blockquote><h2 id="新建一个-html-文件"><a href="#新建一个-html-文件" class="headerlink" title="新建一个 html 文件"></a>新建一个 html 文件</h2><h2 id="创建初始化变量"><a href="#创建初始化变量" class="headerlink" title="创建初始化变量"></a>创建初始化变量</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> stars = []; <span class="comment">//存放星星的数组</span></span><br><span class="line"><span class="keyword">let</span> ctx; <span class="comment">//画布的上下文</span></span><br><span class="line"><span class="keyword">let</span> width, height; <span class="comment">//屏幕的宽高</span></span><br><span class="line"><span class="keyword">let</span> origin; <span class="comment">//默认的生成星星的位置</span></span><br><span class="line"><span class="keyword">let</span> colors = [<span class="string">&quot;#F73859&quot;</span>, <span class="string">&quot;#14FFEC&quot;</span>, <span class="string">&quot;#00E0FF&quot;</span>, <span class="string">&quot;#FF99FE&quot;</span>, <span class="string">&quot;#FAF15D&quot;</span>]; <span class="comment">//星星的颜色</span></span><br><span class="line"><span class="keyword">const</span> canvas = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;canvas&quot;</span>); <span class="comment">//创建画布</span></span><br><span class="line">ctx = canvas.<span class="title function_">getContext</span>(<span class="string">&quot;2d&quot;</span>);</span><br><span class="line"><span class="comment">//设置画布的样式</span></span><br><span class="line">canvas.<span class="title function_">setAttribute</span>(</span><br><span class="line">  <span class="string">&quot;style&quot;</span>,</span><br><span class="line">  <span class="string">&quot;width: 100%; height: 100%; position: fixed; top: 0; left: 0; z-index: 9999; pointer-events: none;&quot;</span></span><br><span class="line">);</span><br><span class="line"><span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(canvas); <span class="comment">//将画布元素添加到dom中</span></span><br></pre></td></tr></table></figure><h2 id="定义工具函数-生成一个区间之内的数"><a href="#定义工具函数-生成一个区间之内的数" class="headerlink" title="定义工具函数(生成一个区间之内的数)"></a>定义工具函数(生成一个区间之内的数)</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">randBetween</span>(<span class="params">min, max</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * max) + min;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="定义一个-Star-类"><a href="#定义一个-Star-类" class="headerlink" title="定义一个 Star 类"></a>定义一个 Star 类</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Star</span> &#123;</span><br><span class="line">  <span class="comment">//x，y为星星位置</span></span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">x = origin.x, y = origin.y</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">x</span> = x;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">y</span> = y;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">angle</span> = <span class="title class_">Math</span>.<span class="property">PI</span> * <span class="number">2</span> * <span class="title class_">Math</span>.<span class="title function_">random</span>();</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">radius</span> = <span class="title function_">randBetween</span>(<span class="number">5</span>, <span class="number">10</span>) + <span class="number">3</span> * <span class="title class_">Math</span>.<span class="title function_">random</span>(); <span class="comment">//星星的半径</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">color</span> = colors[<span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * colors.<span class="property">length</span>)]; <span class="comment">//星星的颜色</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">vx</span> = <span class="number">5</span> * <span class="title class_">Math</span>.<span class="title function_">cos</span>(<span class="variable language_">this</span>.<span class="property">angle</span>); <span class="comment">//星星的x方向速度</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">vy</span> = <span class="number">5</span> * <span class="title class_">Math</span>.<span class="title function_">sin</span>(<span class="variable language_">this</span>.<span class="property">angle</span>); <span class="comment">//星星的y方向速度</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//更新星星的速度、位置、半径</span></span><br><span class="line">  <span class="title function_">update</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">x</span> += <span class="variable language_">this</span>.<span class="property">vx</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">y</span> += <span class="variable language_">this</span>.<span class="property">vy</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">radius</span> -= <span class="number">0.3</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">vy</span> *= <span class="number">0.9</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">vx</span> *= <span class="number">0.9</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="定义存放星星和移除星星的方法"><a href="#定义存放星星和移除星星的方法" class="headerlink" title="定义存放星星和移除星星的方法"></a>定义存放星星和移除星星的方法</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//存放星星</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">pushStar</span>(<span class="params">count = <span class="number">1</span>, x = origin.x, y = origin.y</span>) &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">    stars.<span class="title function_">push</span>(<span class="keyword">new</span> <span class="title class_">Star</span>(x, y));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//移除星星</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">removeStar</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; stars.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">let</span> star = stars[i];</span><br><span class="line">    <span class="comment">//判断是否符合删除条件</span></span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">      star.<span class="property">radius</span> &lt;= <span class="number">0</span> ||</span><br><span class="line">      star.<span class="property">x</span> - star.<span class="property">radius</span> &gt; width ||</span><br><span class="line">      star.<span class="property">y</span> + star.<span class="property">radius</span> &lt; <span class="number">0</span> ||</span><br><span class="line">      star.<span class="property">x</span> + star.<span class="property">radius</span> &lt; <span class="number">0</span> ||</span><br><span class="line">      star.<span class="property">y</span> - star.<span class="property">radius</span> &gt; height</span><br><span class="line">    ) &#123;</span><br><span class="line">      <span class="comment">//删除不符合条件的星星，从索引i开始删除一个元素</span></span><br><span class="line">      stars.<span class="title function_">splice</span>(i, <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="创建更新画布和初始位置函数"><a href="#创建更新画布和初始位置函数" class="headerlink" title="创建更新画布和初始位置函数"></a>创建更新画布和初始位置函数</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">updateSize</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">//更新画布的大小</span></span><br><span class="line">  canvas.<span class="property">width</span> = <span class="variable language_">window</span>.<span class="property">innerWidth</span>;</span><br><span class="line">  canvas.<span class="property">height</span> = <span class="variable language_">window</span>.<span class="property">innerHeight</span>;</span><br><span class="line">  width = <span class="variable language_">window</span>.<span class="property">innerWidth</span>;</span><br><span class="line">  height = <span class="variable language_">window</span>.<span class="property">innerHeight</span>;</span><br><span class="line">  <span class="comment">//更新默认位置</span></span><br><span class="line">  origin = &#123;</span><br><span class="line">    <span class="attr">x</span>: width / <span class="number">2</span>,</span><br><span class="line">    <span class="attr">y</span>: height / <span class="number">2</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="创建渲染函数"><a href="#创建渲染函数" class="headerlink" title="创建渲染函数"></a>创建渲染函数</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">  ctx.<span class="property">fillStyle</span> = <span class="string">&quot;rgba(255, 255, 255, 0)&quot;</span>;</span><br><span class="line">  <span class="comment">//清除画布的内容</span></span><br><span class="line">  ctx.<span class="title function_">clearRect</span>(<span class="number">0</span>, <span class="number">0</span>, canvas.<span class="property">width</span>, canvas.<span class="property">height</span>);</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; stars.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">let</span> star = stars[i];</span><br><span class="line">    <span class="keyword">if</span> (star.<span class="property">radius</span> &lt;= <span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">    <span class="comment">//开始绘制</span></span><br><span class="line">    ctx.<span class="title function_">beginPath</span>();</span><br><span class="line">    <span class="comment">//设置绘制的样式</span></span><br><span class="line">    ctx.<span class="property">fillStyle</span> = star.<span class="property">color</span>;</span><br><span class="line">    <span class="comment">//画五角星</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">      <span class="keyword">const</span> angle = ((i * <span class="number">4</span> + <span class="number">2</span>) * <span class="title class_">Math</span>.<span class="property">PI</span>) / <span class="number">5</span> - <span class="title class_">Math</span>.<span class="property">PI</span> / <span class="number">2</span>;</span><br><span class="line">      <span class="keyword">const</span> x = star.<span class="property">x</span> + <span class="title class_">Math</span>.<span class="title function_">cos</span>(angle) * star.<span class="property">radius</span>;</span><br><span class="line">      <span class="keyword">const</span> y = star.<span class="property">y</span> + <span class="title class_">Math</span>.<span class="title function_">sin</span>(angle) * star.<span class="property">radius</span>;</span><br><span class="line"></span><br><span class="line">      ctx.<span class="title function_">lineTo</span>(x, y);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//填充</span></span><br><span class="line">    ctx.<span class="title function_">fill</span>();</span><br><span class="line">    <span class="comment">//调用五角星的动画函数，更新五角星的信息</span></span><br><span class="line">    star.<span class="title function_">update</span>();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//调用移除函数，移除不符合条件的五角星</span></span><br><span class="line">  <span class="title function_">removeStar</span>();</span><br><span class="line">  <span class="comment">//浏览器渲染函数</span></span><br><span class="line">  <span class="title function_">requestAnimationFrame</span>(render);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="最后一步，绑定点击事件并调用渲染函数"><a href="#最后一步，绑定点击事件并调用渲染函数" class="headerlink" title="最后一步，绑定点击事件并调用渲染函数"></a>最后一步，绑定点击事件并调用渲染函数</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//鼠标按下之后创建15个星星，并设置初始位置为鼠标的位置</span></span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;mousedown&quot;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="title function_">pushStar</span>(<span class="number">15</span>, e.<span class="property">clientX</span>, e.<span class="property">clientY</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//调用渲染函数</span></span><br><span class="line"><span class="title function_">render</span>();</span><br></pre></td></tr></table></figure><h2 id="打开浏览器预览效果"><a href="#打开浏览器预览效果" class="headerlink" title="打开浏览器预览效果"></a>打开浏览器预览效果</h2><p><img src="https://xizhi-picgo.oss-cn-guangzhou.aliyuncs.com/%E5%89%8D%E7%AB%AF/%E9%BC%A0%E6%A0%87%E7%82%B9%E5%87%BB%E7%89%B9%E6%95%88/preview.gif"></p><h2 id="最终代码-我个人写的"><a href="#最终代码-我个人写的" class="headerlink" title="最终代码(我个人写的)"></a>最终代码(我个人写的)</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">clickEffect</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> stars = []</span><br><span class="line">    <span class="keyword">let</span> ctx</span><br><span class="line">        <span class="keyword">let</span> width, height</span><br><span class="line">    <span class="keyword">let</span> origin</span><br><span class="line">        <span class="keyword">let</span> colors = [<span class="string">&quot;#12aae8&quot;</span>, <span class="string">&quot;#14FFEC&quot;</span>, <span class="string">&quot;#00E0FF&quot;</span>, <span class="string">&quot;#08eeb8&quot;</span>, <span class="string">&quot;#FAF15D&quot;</span>]</span><br><span class="line">        <span class="keyword">const</span> canvas = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;canvas&quot;</span>)</span><br><span class="line">        canvas.<span class="title function_">setAttribute</span>(<span class="string">&quot;style&quot;</span>, <span class="string">&quot;width: 100%; height: 100%; position: fixed; top: 0; left: 0; z-index: 9999; pointer-events: none;&quot;</span>)</span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(canvas)</span><br><span class="line">    <span class="title function_">updateSize</span>()</span><br><span class="line"><span class="keyword">if</span> (canvas.<span class="property">getContext</span> &amp;&amp; <span class="variable language_">window</span>.<span class="property">addEventListener</span>) &#123;</span><br><span class="line">ctx = canvas.<span class="title function_">getContext</span>(<span class="string">&quot;2d&quot;</span>)</span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;mousedown&quot;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="title function_">pushStar</span>(<span class="number">15</span>, e.<span class="property">clientX</span>, e.<span class="property">clientY</span>)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="title function_">render</span>()</span><br><span class="line">&#125;</span><br><span class="line">        <span class="keyword">class</span> <span class="title class_">Star</span> &#123;</span><br><span class="line"><span class="title function_">constructor</span>(<span class="params">x = origin.x, y = origin.y</span>) &#123;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">x</span> = x</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">y</span> = y</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">angle</span> = <span class="title class_">Math</span>.<span class="property">PI</span> * <span class="number">2</span> * <span class="title class_">Math</span>.<span class="title function_">random</span>()</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">radius</span> = <span class="title function_">randBetween</span>(<span class="number">5</span>, <span class="number">10</span>) + <span class="number">3</span> * <span class="title class_">Math</span>.<span class="title function_">random</span>()</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">color</span> = colors[<span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * colors.<span class="property">length</span>)]</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">vx</span> = <span class="number">5</span> * <span class="title class_">Math</span>.<span class="title function_">cos</span>(<span class="variable language_">this</span>.<span class="property">angle</span>)</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">vy</span> = <span class="number">5</span> * <span class="title class_">Math</span>.<span class="title function_">sin</span>(<span class="variable language_">this</span>.<span class="property">angle</span>)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="title function_">update</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">x</span> += <span class="variable language_">this</span>.<span class="property">vx</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">y</span> += <span class="variable language_">this</span>.<span class="property">vy</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">radius</span> -= <span class="number">0.3</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">vy</span> *= <span class="number">0.9</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">vx</span> *= <span class="number">0.9</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">updateSize</span>(<span class="params"></span>) &#123;</span><br><span class="line">            canvas.<span class="property">width</span> = <span class="variable language_">window</span>.<span class="property">innerWidth</span></span><br><span class="line">        canvas.<span class="property">height</span> = <span class="variable language_">window</span>.<span class="property">innerHeight</span></span><br><span class="line">        width = <span class="variable language_">window</span>.<span class="property">innerWidth</span></span><br><span class="line">        height = <span class="variable language_">window</span>.<span class="property">innerHeight</span></span><br><span class="line">        origin = &#123;</span><br><span class="line">                <span class="attr">x</span>: width / <span class="number">2</span>,</span><br><span class="line">        <span class="attr">y</span>: height / <span class="number">2</span></span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">            ctx.<span class="property">fillStyle</span> = <span class="string">&quot;rgba(255, 255, 255, 0)&quot;</span></span><br><span class="line">            ctx.<span class="title function_">clearRect</span>(<span class="number">0</span>, <span class="number">0</span>, canvas.<span class="property">width</span>, canvas.<span class="property">height</span>)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; stars.<span class="property">length</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">let</span> star = stars[i]</span><br><span class="line">        <span class="keyword">if</span> (star.<span class="property">radius</span> &lt;= <span class="number">0</span>) <span class="keyword">continue</span></span><br><span class="line">        ctx.<span class="title function_">beginPath</span>()</span><br><span class="line">                ctx.<span class="property">fillStyle</span> = star.<span class="property">color</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">                    <span class="keyword">const</span> angle = ((i * <span class="number">4</span> + <span class="number">2</span>) * <span class="title class_">Math</span>.<span class="property">PI</span>) / <span class="number">5</span> - <span class="title class_">Math</span>.<span class="property">PI</span> / <span class="number">2</span>;</span><br><span class="line">                    <span class="keyword">const</span> x = star.<span class="property">x</span> + <span class="title class_">Math</span>.<span class="title function_">cos</span>(angle) * star.<span class="property">radius</span>;</span><br><span class="line">                    <span class="keyword">const</span> y = star.<span class="property">y</span> + <span class="title class_">Math</span>.<span class="title function_">sin</span>(angle) * star.<span class="property">radius</span>;</span><br><span class="line"></span><br><span class="line">                    ctx.<span class="title function_">lineTo</span>(x, y);</span><br><span class="line">                &#125;</span><br><span class="line">                ctx.<span class="title function_">fill</span>()</span><br><span class="line">        star.<span class="title function_">update</span>()</span><br><span class="line">        &#125;</span><br><span class="line">            <span class="title function_">removeStar</span>()</span><br><span class="line">            <span class="title function_">requestAnimationFrame</span>(render)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">randBetween</span>(<span class="params">min, max</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * max) + min;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">pushStar</span>(<span class="params">count = <span class="number">1</span>, x = origin.x, y = origin.y</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">                stars.<span class="title function_">push</span>(<span class="keyword">new</span> <span class="title class_">Star</span>(x, y))</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">removeStar</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; stars.<span class="property">length</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">let</span> star = stars[i]</span><br><span class="line">            <span class="keyword">if</span> (</span><br><span class="line">                    star.<span class="property">radius</span> &lt;= <span class="number">0</span> ||</span><br><span class="line">            star.<span class="property">x</span> - star.<span class="property">radius</span> &gt; width ||</span><br><span class="line">            star.<span class="property">y</span> + star.<span class="property">radius</span> &lt; <span class="number">0</span> ||</span><br><span class="line">            star.<span class="property">x</span> + star.<span class="property">radius</span> &lt; <span class="number">0</span> ||</span><br><span class="line">            star.<span class="property">y</span> - star.<span class="property">radius</span> &gt; height</span><br><span class="line">            ) &#123;</span><br><span class="line">stars.<span class="title function_">splice</span>(i, <span class="number">1</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="title function_">clickEffect</span>()</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 特效 </tag>
            
            <tag> canvas </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于three.js与浏览器环境实现粒子特效</title>
      <link href="/posts/e618e1da.html"/>
      <url>/posts/e618e1da.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>前阵子学习了 three.js,发现它是真的强大,可以实现各种各样的 3d 功能,然后自己试着做了一个基于 three.js 粒子系统的一个粒子特效</p></blockquote><hr><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><blockquote><p>创建粒子系统，里面包含了多个粒子，然后不断循环变更它Z轴的位置，这样所有的粒子的位置都会变更，这样看起来就像是我们的视角在穿越星空一样</p></blockquote><h3 id="创建一个-html-文件"><a href="#创建一个-html-文件" class="headerlink" title="创建一个 html 文件"></a>创建一个 html 文件</h3><blockquote><p>这里随便创建一个&lt;文件名&gt;.html文件就好了</p></blockquote><h3 id="在body标签中引入-three-js"><a href="#在body标签中引入-three-js" class="headerlink" title="在body标签中引入 three.js"></a>在body标签中引入 three.js</h3>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/three@latest/build/three.min.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="引入-gsap-这个动画库-方便写动画"><a href="#引入-gsap-这个动画库-方便写动画" class="headerlink" title="引入 gsap 这个动画库(方便写动画)"></a>引入 gsap 这个动画库(方便写动画)</h3>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/gsap/3.11.5/gsap.min.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="开工"><a href="#开工" class="headerlink" title="开工!"></a>开工!</h3><ul><li>创建场景<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> scene = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Scene</span>();</span><br></pre></td></tr></table></figure></li><li>创建相机<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> camera = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PerspectiveCamera</span>(</span><br><span class="line">  <span class="number">75</span>,</span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>,</span><br><span class="line">  <span class="number">0.1</span>,</span><br><span class="line">  <span class="number">10000</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li>创建渲染器<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>);</span><br><span class="line"><span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(renderer.<span class="property">domElement</span>);</span><br></pre></td></tr></table></figure></li><li>创建动画函数<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">render</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  renderer.<span class="title function_">render</span>(scene, camera);</span><br><span class="line">  <span class="title function_">requestAnimationFrame</span>(render);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li>开始创建粒子<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> count = <span class="number">1000</span>; <span class="comment">//粒子的数量</span></span><br><span class="line"><span class="keyword">const</span> positions = <span class="keyword">new</span> <span class="title class_">Float32Array</span>((count * <span class="number">3</span>) / <span class="number">10</span>); <span class="comment">//粒子的位置属性</span></span><br><span class="line"><span class="keyword">const</span> colors = <span class="keyword">new</span> <span class="title class_">Float32Array</span>((count * <span class="number">3</span>) / <span class="number">10</span>); <span class="comment">//粒子的颜色属性</span></span><br><span class="line"><span class="keyword">const</span> particleGeometry = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferGeometry</span>(); <span class="comment">//粒子的网格</span></span><br><span class="line"><span class="comment">//粒子的材质</span></span><br><span class="line"><span class="keyword">const</span> material = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PointsMaterial</span>(&#123;</span><br><span class="line">  <span class="attr">size</span>: <span class="number">2</span>,</span><br><span class="line">  <span class="attr">depthWrite</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">blending</span>: <span class="variable constant_">THREE</span>.<span class="property">AdditiveBlending</span>,</span><br><span class="line">  <span class="attr">transparent</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">vertexColors</span>: <span class="literal">true</span>, <span class="comment">//设置顶点的颜色</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 初始化粒子的位置和颜色</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; (count / <span class="number">10</span>) * <span class="number">3</span>; j++) &#123;</span><br><span class="line">  positions[j * <span class="number">3</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">1500</span> - <span class="number">750</span>;</span><br><span class="line">  positions[j * <span class="number">3</span> + <span class="number">1</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">1500</span> - <span class="number">750</span>;</span><br><span class="line">  positions[j * <span class="number">3</span> + <span class="number">2</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">1000</span> - <span class="number">500</span>;</span><br><span class="line">  colors[j * <span class="number">3</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>();</span><br><span class="line">  colors[j * <span class="number">3</span> + <span class="number">1</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>();</span><br><span class="line">  colors[j * <span class="number">3</span> + <span class="number">2</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置粒子的位置属性</span></span><br><span class="line">particleGeometry.<span class="title function_">setAttribute</span>(</span><br><span class="line">  <span class="string">&quot;position&quot;</span>,</span><br><span class="line">  <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferAttribute</span>(positions, <span class="number">3</span>)</span><br><span class="line">);</span><br><span class="line"><span class="comment">// 设置粒子的颜色属性</span></span><br><span class="line">particleGeometry.<span class="title function_">setAttribute</span>(<span class="string">&quot;color&quot;</span>, <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferAttribute</span>(colors, <span class="number">3</span>));</span><br><span class="line"><span class="comment">// 创建粒子</span></span><br><span class="line"><span class="keyword">const</span> points = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Points</span>(particleGeometry, material);</span><br></pre></td></tr></table></figure></li><li>为粒子添加动画(使用 gsap)<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">gsap.<span class="title function_">to</span>(points.<span class="property">position</span>, &#123;</span><br><span class="line">  <span class="attr">z</span>: -<span class="number">800</span>,</span><br><span class="line">  <span class="attr">duration</span>: <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">5</span> + <span class="number">5</span>,</span><br><span class="line">  <span class="attr">repeat</span>: -<span class="number">1</span>,</span><br><span class="line">  <span class="attr">ease</span>: <span class="string">&quot;linear&quot;</span>,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li>将粒子添加到场景中<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scene.<span class="title function_">add</span>(points);</span><br></pre></td></tr></table></figure></li><li>效果预览(图片压缩了的，所以效果可能看起来不太好)<br><img src="/img/categories/前端/three/pre.gif"></li><li>这样我们的粒子特效就算完成了，但是聪明的你很快就能发现上面的粒子有点别扭，因为上面的代码是为整个粒子系统设置的动画，所以事实上我们看到的粒子移动是整个粒子系统在移动，当它完成了它的动画就会一瞬间回到原来的位置，然后就会有一点视觉上的突兀，那么如何解决这个问题呢？<h3 id="进一步改进"><a href="#进一步改进" class="headerlink" title="进一步改进"></a>进一步改进</h3></li><li>把所有的粒子分散到多个粒子系统<br>我们把所有粒子分成 10 个粒子系统，这样的话每个系统里面就包含了 100 和粒子，然后分别添加动画，并初始化不同的位置，这样的话就会大幅减少视觉上的突兀，话不多说，开始动手!<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> count = <span class="number">1000</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">  <span class="keyword">const</span> positions = <span class="keyword">new</span> <span class="title class_">Float32Array</span>((count * <span class="number">3</span>) / <span class="number">10</span>);</span><br><span class="line">  <span class="keyword">const</span> colors = <span class="keyword">new</span> <span class="title class_">Float32Array</span>((count * <span class="number">3</span>) / <span class="number">10</span>);</span><br><span class="line">  <span class="keyword">const</span> particleGeometry = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferGeometry</span>();</span><br><span class="line">  <span class="keyword">const</span> material = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PointsMaterial</span>(&#123;</span><br><span class="line">    <span class="attr">size</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="attr">depthWrite</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">blending</span>: <span class="variable constant_">THREE</span>.<span class="property">AdditiveBlending</span>,</span><br><span class="line">    <span class="attr">transparent</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">vertexColors</span>: <span class="literal">true</span>, <span class="comment">//设置顶点的颜色</span></span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; (count / <span class="number">10</span>) * <span class="number">3</span>; j++) &#123;</span><br><span class="line">    positions[j * <span class="number">3</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">1500</span> - <span class="number">750</span>;</span><br><span class="line">    positions[j * <span class="number">3</span> + <span class="number">1</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">1500</span> - <span class="number">750</span>;</span><br><span class="line">    positions[j * <span class="number">3</span> + <span class="number">2</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">1000</span> - <span class="number">500</span>;</span><br><span class="line">    colors[j * <span class="number">3</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>();</span><br><span class="line">    colors[j * <span class="number">3</span> + <span class="number">1</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>();</span><br><span class="line">    colors[j * <span class="number">3</span> + <span class="number">2</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  particleGeometry.<span class="title function_">setAttribute</span>(</span><br><span class="line">    <span class="string">&quot;position&quot;</span>,</span><br><span class="line">    <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferAttribute</span>(positions, <span class="number">3</span>)</span><br><span class="line">  );</span><br><span class="line">  particleGeometry.<span class="title function_">setAttribute</span>(</span><br><span class="line">    <span class="string">&quot;color&quot;</span>,</span><br><span class="line">    <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferAttribute</span>(colors, <span class="number">3</span>)</span><br><span class="line">  );</span><br><span class="line">  <span class="keyword">const</span> points = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Points</span>(particleGeometry, material);</span><br><span class="line">  scene.<span class="title function_">add</span>(points);</span><br><span class="line"></span><br><span class="line">  gsap.<span class="title function_">to</span>(points.<span class="property">position</span>, &#123;</span><br><span class="line">    <span class="attr">z</span>: -<span class="number">800</span>,</span><br><span class="line">    <span class="attr">duration</span>: <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">5</span> + <span class="number">5</span>,</span><br><span class="line">    <span class="attr">repeat</span>: -<span class="number">1</span>,</span><br><span class="line">    <span class="attr">ease</span>: <span class="string">&quot;linear&quot;</span>,</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>效果预览(图片压缩了的，所以效果可能看起来不太好)<br><img src="https://xizhi-picgo.oss-cn-guangzhou.aliyuncs.com/%E5%89%8D%E7%AB%AF/particle%E7%B2%92%E5%AD%90%E7%89%B9%E6%95%88/preview.gif"><br>但是这样的话我们会发现每一个粒子都太单调了，虽然有颜色，但是都是正方形，那么如何设置成自己喜欢的粒子呢？</li><li>给粒子添加纹理<br>准备好你的纹理，其实就是一张图片，jpg，png 等格式都可以，可以直接去网上扒，也可以使用我的 <a href="/img/categories/前端/three/particle.png" download="particle.png" target="_blank">点击下载</a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> texture = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">TextureLoader</span>().<span class="title function_">load</span>(<span class="string">&quot;./particle.png&quot;</span>);</span><br></pre></td></tr></table></figure>为粒子材质设置纹理<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> material = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PointsMaterial</span>(&#123;</span><br><span class="line">  <span class="attr">map</span>: texture, <span class="comment">//纹理</span></span><br><span class="line">  <span class="attr">alphaMap</span>: texture, <span class="comment">//透明纹理</span></span><br><span class="line">  <span class="attr">size</span>: <span class="number">5</span>, <span class="comment">//粒子大小</span></span><br><span class="line">  <span class="attr">depthWrite</span>: <span class="literal">false</span>, <span class="comment">//是否开启深度描写</span></span><br><span class="line">  <span class="attr">blending</span>: <span class="variable constant_">THREE</span>.<span class="property">AdditiveBlending</span>, <span class="comment">//混合模式</span></span><br><span class="line">  <span class="attr">transparent</span>: <span class="literal">false</span>, <span class="comment">//是否透明</span></span><br><span class="line">  <span class="attr">vertexColors</span>: <span class="literal">true</span>, <span class="comment">//设置顶点的颜色</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li>效果预览(图片压缩了的，所以效果可能看起来不太好)<br><img src="/img/categories/前端/three/pre_final.gif"></li><li>完整代码<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">content</span>=<span class="string">&quot;width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    * &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">html</span>,<span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/three@latest/build/three.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/gsap/3.11.5/gsap.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> scene = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Scene</span>()</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> camera = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PerspectiveCamera</span>(</span></span><br><span class="line"><span class="language-javascript">      <span class="number">75</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="number">0.1</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="number">10000</span></span></span><br><span class="line"><span class="language-javascript">  )</span></span><br><span class="line"><span class="language-javascript">  camera.<span class="property">position</span>.<span class="title function_">set</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">10</span>)</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> renderer = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">WebGLRenderer</span>()</span></span><br><span class="line"><span class="language-javascript">  renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>)</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(renderer.<span class="property">domElement</span>)</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> <span class="title function_">render</span> = (<span class="params"></span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">        renderer.<span class="title function_">render</span>(scene, camera)</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">requestAnimationFrame</span>(render)</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">render</span>()</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;resize&quot;</span>, <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">//更新摄像头</span></span></span><br><span class="line"><span class="language-javascript">      camera.<span class="property">aspect</span> = <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">//更新摄像机的投影矩阵</span></span></span><br><span class="line"><span class="language-javascript">      camera.<span class="title function_">updateProjectionMatrix</span>()</span></span><br><span class="line"><span class="language-javascript">      renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>)</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">//设置渲染器的像素比</span></span></span><br><span class="line"><span class="language-javascript">      renderer.<span class="title function_">setPixelRatio</span>(<span class="variable language_">window</span>.<span class="property">devicePixelRatio</span>)</span></span><br><span class="line"><span class="language-javascript">  &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> texture = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">TextureLoader</span>().<span class="title function_">load</span>(<span class="string">&#x27;./particle.png&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> count = <span class="number">1000</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> positions = <span class="keyword">new</span> <span class="title class_">Float32Array</span>(count * <span class="number">3</span> / <span class="number">10</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> colors = <span class="keyword">new</span> <span class="title class_">Float32Array</span>(count * <span class="number">3</span> / <span class="number">10</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> particleGeometry = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferGeometry</span>()</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> material = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PointsMaterial</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">map</span>: texture,   <span class="comment">//纹理</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">alphaMap</span>: texture,  <span class="comment">//透明纹理</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">size</span>: <span class="number">10</span>,    <span class="comment">//粒子大小</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">depthWrite</span>: <span class="literal">false</span>,  <span class="comment">//是否开启深度描写</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">blending</span>: <span class="variable constant_">THREE</span>.<span class="property">AdditiveBlending</span>,   <span class="comment">//混合模式</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">transparent</span>: <span class="literal">false</span>, <span class="comment">//是否透明</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">vertexColors</span>: <span class="literal">true</span>, <span class="comment">//设置顶点的颜色</span></span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; count / <span class="number">10</span> * <span class="number">3</span>; j++) &#123;</span></span><br><span class="line"><span class="language-javascript">      positions[j * <span class="number">3</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">1500</span> - <span class="number">750</span></span></span><br><span class="line"><span class="language-javascript">      positions[j * <span class="number">3</span> + <span class="number">1</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">1500</span> - <span class="number">750</span></span></span><br><span class="line"><span class="language-javascript">      positions[j * <span class="number">3</span> + <span class="number">2</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">1000</span> - <span class="number">500</span></span></span><br><span class="line"><span class="language-javascript">      colors[j * <span class="number">3</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>()</span></span><br><span class="line"><span class="language-javascript">      colors[j * <span class="number">3</span> + <span class="number">1</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>()</span></span><br><span class="line"><span class="language-javascript">      colors[j * <span class="number">3</span> + <span class="number">2</span>] = <span class="title class_">Math</span>.<span class="title function_">random</span>()</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    particleGeometry.<span class="title function_">setAttribute</span>(<span class="string">&quot;position&quot;</span>, <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferAttribute</span>(positions, <span class="number">3</span>))</span></span><br><span class="line"><span class="language-javascript">    particleGeometry.<span class="title function_">setAttribute</span>(<span class="string">&quot;color&quot;</span>, <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferAttribute</span>(colors, <span class="number">3</span>))</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> points = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Points</span>(particleGeometry, material)</span></span><br><span class="line"><span class="language-javascript">    scene.<span class="title function_">add</span>(points)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    gsap.<span class="title function_">to</span>(points.<span class="property">position</span>, &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">z</span>: -<span class="number">800</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">duration</span>: <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">5</span> + <span class="number">3</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">repeat</span>: -<span class="number">1</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">ease</span>: <span class="string">&#x27;linear&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="尾声"><a href="#尾声" class="headerlink" title="尾声"></a>尾声</h3></li><li>弊端<blockquote><p> 我这里是使用了多个粒子系统来解决突兀问题，其实这种方式是不可取的，因为使用多个粒子系统会导致浏览器卡死，总之就是会消耗很多性能，如果想要解决突兀问题的话，可以考虑为每一个粒子添加单独的动画，而不是更改粒子系统的位置，每次当粒子到达目标位置的时候就马上回到原来到位置</p></blockquote></li><li>改进方向<blockquote><p>其实还有很多可以改进的地方，比如粒子的初始位置，还可以更加细化一些，还有就是可以设置粒子运动轨迹，让它不只是改变z轴的方向，让它的轨迹更加自由</p></blockquote></li><li>心声<blockquote><p> 感谢各位旅人阅读我的文章，如果有更加好的想法或者是遇到了问题欢迎与我交流</p></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 粒子特效 </tag>
            
            <tag> three.js </tag>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于three.js实现VR看房效果</title>
      <link href="/posts/0.html"/>
      <url>/posts/0.html</url>
      
        <content type="html"><![CDATA[<h3 id="初始化一个-vue-项目-这里是基于-vue-环境来快速搭建"><a href="#初始化一个-vue-项目-这里是基于-vue-环境来快速搭建" class="headerlink" title="初始化一个 vue 项目(这里是基于 vue 环境来快速搭建)"></a>初始化一个 vue 项目(这里是基于 vue 环境来快速搭建)</h3><blockquote><p>关于环境说明：浏览器环境和 vue 环境都可以，只是用 vue 开发会更加便利，前提是得安装 node.js<br>打开终端，windows 用户 win + R 输入 cmd</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init vue@latest</span><br></pre></td></tr></table></figure><p>然后会要你填项目的名字，输入完之后一路按回车就好，然后分别执行以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> &lt;你的项目&gt;</span><br><span class="line">npm install</span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure><p>之后 vue 会在你电脑上开启一个小型服务器，你可以直接在浏览器网址栏通过输入 localhost:5173 访问它，这样你的项目就初始化好了<br>然后按 ctrl + c 退出服务器<br>然后记得将你的 vue 项目再次初始化(就是把不需要的东西都删了)</p></blockquote><h3 id="下载-three-js"><a href="#下载-three-js" class="headerlink" title="下载 three.js"></a>下载 three.js</h3><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install three</span><br></pre></td></tr></table></figure></blockquote><h3 id="在-App-vue-文件里面初始化-three-js-的基本配置-这里采用-setup-响应式声明的方式"><a href="#在-App-vue-文件里面初始化-three-js-的基本配置-这里采用-setup-响应式声明的方式" class="headerlink" title="在 App.vue 文件里面初始化 three.js 的基本配置(这里采用 setup 响应式声明的方式)"></a>在 App.vue 文件里面初始化 three.js 的基本配置(这里采用 setup 响应式声明的方式)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"><span class="comment">//导入three</span></span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="variable constant_">THREE</span> <span class="keyword">from</span> <span class="string">&quot;three&quot;</span>;</span><br><span class="line"><span class="comment">//添加控制器</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">OrbitControls</span> &#125; <span class="keyword">from</span> <span class="string">&quot;three/examples/jsm/controls/OrbitControls&quot;</span>;</span><br><span class="line"><span class="comment">//引入挂载钩子函数</span></span><br><span class="line"><span class="keyword">import</span> &#123; onMounted &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="comment">//场景的初始化</span></span><br><span class="line"><span class="keyword">const</span> scene = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Scene</span>();</span><br><span class="line"><span class="comment">//初始化相机</span></span><br><span class="line"><span class="keyword">const</span> camera = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PerspectiveCamera</span>(</span><br><span class="line">  <span class="number">75</span>,</span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>,</span><br><span class="line">  <span class="number">0.1</span>,</span><br><span class="line">  <span class="number">1000</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">//设置相机的位置</span></span><br><span class="line">camera.<span class="property">position</span>.<span class="property">z</span> = <span class="number">0.1</span>;</span><br><span class="line"><span class="comment">//初始化渲染器</span></span><br><span class="line"><span class="keyword">const</span> renderer = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">WebGLRenderer</span>();</span><br><span class="line">renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>);</span><br><span class="line"><span class="comment">//初始化控制器</span></span><br><span class="line"><span class="keyword">const</span> orbitControls = <span class="keyword">new</span> <span class="title class_">OrbitControls</span>(camera, <span class="variable language_">document</span>.<span class="property">body</span>);</span><br><span class="line">orbitControls.<span class="property">enableDamping</span> = <span class="literal">true</span>;</span><br><span class="line"><span class="comment">//渲染函数</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">render</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  renderer.<span class="title function_">render</span>(scene, camera);</span><br><span class="line">  orbitControls.<span class="title function_">update</span>();</span><br><span class="line">  <span class="title function_">requestAnimationFrame</span>(render);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="title function_">onMounted</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(renderer.<span class="property">domElement</span>)</span><br><span class="line">  <span class="title function_">render</span>();</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="开始加载场景-准备好一张hdr全景图或者是-6-张全方位图-可以网上扒，没有的话可以使用我的-点击下载全景图"><a href="#开始加载场景-准备好一张hdr全景图或者是-6-张全方位图-可以网上扒，没有的话可以使用我的-点击下载全景图" class="headerlink" title="开始加载场景(准备好一张hdr全景图或者是 6 张全方位图)可以网上扒，没有的话可以使用我的 点击下载全景图"></a>开始加载场景(准备好一张hdr全景图或者是 6 张全方位图)可以网上扒，没有的话可以使用我的 <a href="https://xizhi-picgo.oss-cn-guangzhou.aliyuncs.com/%E5%89%8D%E7%AB%AF/vr%E7%9C%8B%E6%88%BF/BrightMichiganFunRoom.hdr" download="BrightMichiganFunRoom.hdr" target="_blank">点击下载全景图</a></h3><p>在上面的代码的基础上添加下面的代码(import导入代码放在头部)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//导入加载器，用来加载图片</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">RGBELoader</span> &#125; <span class="keyword">from</span> <span class="string">&quot;three/examples/jsm/loaders/RGBELoader&quot;</span>;</span><br><span class="line"><span class="comment">//添加球  HDR全景展示</span></span><br><span class="line"><span class="comment">// 5代表半径，32代表顶点数量</span></span><br><span class="line"><span class="keyword">const</span> sphereGeometry = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">SphereGeometry</span>(<span class="number">5</span>, <span class="number">32</span>, <span class="number">32</span>);</span><br><span class="line"><span class="comment">// 初始化加载器</span></span><br><span class="line"><span class="keyword">const</span> loader = <span class="keyword">new</span> <span class="title class_">RGBELoader</span>();</span><br><span class="line"><span class="comment">// 加载全景图</span></span><br><span class="line">loader.<span class="title function_">load</span>(<span class="string">&quot;./imgs/BrightMichiganFunRoom.hdr&quot;</span>, <span class="function">(<span class="params">texture</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 创建球的材质并设置纹理</span></span><br><span class="line">  <span class="keyword">const</span> material = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">MeshBasicMaterial</span>(&#123;</span><br><span class="line">    <span class="attr">map</span>: texture,</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="comment">// 创建球</span></span><br><span class="line">  <span class="keyword">const</span> sphere = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Mesh</span>(sphereGeometry, material);</span><br><span class="line">  <span class="comment">// 设置z轴方向缩放为-1是为了让全景图展示在球的内部，不然的话全景图就会展示在球的表面</span></span><br><span class="line">  sphere.<span class="property">geometry</span>.<span class="title function_">scale</span>(<span class="number">1</span>, <span class="number">1</span>, -<span class="number">1</span>);</span><br><span class="line">  <span class="comment">// 添加球</span></span><br><span class="line">  scene.<span class="title function_">add</span>(sphere);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="进入终端，输入下面命令查看效果"><a href="#进入终端，输入下面命令查看效果" class="headerlink" title="进入终端，输入下面命令查看效果"></a>进入终端，输入下面命令查看效果</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run dev</span><br></pre></td></tr></table></figure><h3 id="效果预览"><a href="#效果预览" class="headerlink" title="效果预览"></a>效果预览</h3><p><img src="https://xizhi-picgo.oss-cn-guangzhou.aliyuncs.com/vrkanfang.gif"></p><h3 id="全局代码"><a href="#全局代码" class="headerlink" title="全局代码"></a>全局代码</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">  <span class="comment">//导入three</span></span><br><span class="line">  <span class="keyword">import</span> * <span class="keyword">as</span> <span class="variable constant_">THREE</span> <span class="keyword">from</span> <span class="string">&#x27;three&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">import</span> &#123; <span class="title class_">RGBELoader</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;three/examples/jsm/loaders/RGBELoader&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//添加控制器</span></span><br><span class="line">  <span class="keyword">import</span> &#123; <span class="title class_">OrbitControls</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;three/examples/jsm/controls/OrbitControls&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">import</span> &#123; onMounted &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//场景的初始化</span></span><br><span class="line">  <span class="keyword">const</span> scene = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Scene</span>();</span><br><span class="line">  <span class="comment">//初始化相机</span></span><br><span class="line">  <span class="keyword">const</span> camera = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PerspectiveCamera</span>(<span class="number">75</span>, <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>, <span class="number">0.1</span>, <span class="number">1000</span>);</span><br><span class="line">  <span class="comment">//设置相机的位置</span></span><br><span class="line">  camera.<span class="property">position</span>.<span class="property">z</span> = <span class="number">0.1</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//初始化渲染器</span></span><br><span class="line">  <span class="keyword">const</span> renderer = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">WebGLRenderer</span>();</span><br><span class="line">  renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> orbitControls = <span class="keyword">new</span> <span class="title class_">OrbitControls</span>(camera, <span class="variable language_">document</span>.<span class="property">body</span>);</span><br><span class="line">  orbitControls.<span class="property">enableDamping</span> = <span class="literal">true</span>;;</span><br><span class="line">  <span class="comment">//渲染函数</span></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">render</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="comment">//渲染器渲染</span></span><br><span class="line">    renderer.<span class="title function_">render</span>(scene, camera);</span><br><span class="line">    <span class="comment">//控制器更新</span></span><br><span class="line">    orbitControls.<span class="title function_">update</span>();</span><br><span class="line">    <span class="comment">//浏览器渲染函数</span></span><br><span class="line">    <span class="title function_">requestAnimationFrame</span>(render);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//挂载完毕后调用</span></span><br><span class="line">  <span class="title function_">onMounted</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(renderer.<span class="property">domElement</span>)</span><br><span class="line">    <span class="comment">//执行渲染函数</span></span><br><span class="line">    <span class="title function_">render</span>();</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//这里是使用6张全方位图的方式</span></span><br><span class="line">  <span class="comment">//添加立方体  VR看房</span></span><br><span class="line">  <span class="comment">// const boxGeometry = new THREE.BoxGeometry(10, 10, 10);</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// let arr = [&#x27;l&#x27;, &#x27;r&#x27;, &#x27;u&#x27;, &#x27;d&#x27;, &#x27;b&#x27;, &#x27;f&#x27;];</span></span><br><span class="line">  <span class="comment">// let boxMaterials = [];</span></span><br><span class="line">  <span class="comment">// arr.forEach((item) =&gt; &#123;</span></span><br><span class="line">  <span class="comment">//   //纹理加载</span></span><br><span class="line">  <span class="comment">//   let texture = new THREE.TextureLoader().load(`./imgs/$&#123;item&#125;.jpg`);</span></span><br><span class="line">    </span><br><span class="line">  <span class="comment">//   if(item === &#x27;u&#x27; || item === &#x27;d&#x27;) &#123;</span></span><br><span class="line">  <span class="comment">//     texture.rotation = Math.PI;</span></span><br><span class="line">  <span class="comment">//     texture.center.set(0.5, 0.5);</span></span><br><span class="line">  <span class="comment">//     boxMaterials.push(new THREE.MeshBasicMaterial(&#123;</span></span><br><span class="line">  <span class="comment">//       map: texture</span></span><br><span class="line">  <span class="comment">//     &#125;));</span></span><br><span class="line">  <span class="comment">//   &#125; else &#123;</span></span><br><span class="line">  <span class="comment">//     boxMaterials.push(new THREE.MeshBasicMaterial(&#123;</span></span><br><span class="line">  <span class="comment">//       map: texture</span></span><br><span class="line">  <span class="comment">//     &#125;));</span></span><br><span class="line">  <span class="comment">//   &#125;</span></span><br><span class="line">  <span class="comment">// &#125;);</span></span><br><span class="line">  <span class="comment">// const cube = new THREE.Mesh(boxGeometry, boxMaterials);</span></span><br><span class="line">  <span class="comment">// cube.geometry.scale(1, 1, -1);</span></span><br><span class="line">  <span class="comment">// scene.add(cube);</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">//添加球  HDR全景展示</span></span><br><span class="line">  <span class="keyword">const</span> sphereGeometry = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">SphereGeometry</span>(<span class="number">5</span>, <span class="number">32</span>, <span class="number">32</span>);</span><br><span class="line">  <span class="keyword">const</span> loader = <span class="keyword">new</span> <span class="title class_">RGBELoader</span>();</span><br><span class="line">  loader.<span class="title function_">load</span>(<span class="string">&#x27;./imgs/BrightMichiganFunRoom.hdr&#x27;</span>, <span class="function">(<span class="params">texture</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> material = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">MeshBasicMaterial</span>(&#123;</span><br><span class="line">      <span class="attr">map</span>: texture</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">const</span> sphere = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Mesh</span>(sphereGeometry, material);</span><br><span class="line">    sphere.<span class="property">geometry</span>.<span class="title function_">scale</span>(<span class="number">1</span>, <span class="number">1</span>, -<span class="number">1</span>);</span><br><span class="line">    scene.<span class="title function_">add</span>(sphere);</span><br><span class="line">  &#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  </span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  * &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">padding</span>: <span class="number">0</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">margin</span>: <span class="number">0</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> three.js </tag>
            
            <tag> VR </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的个人博客！</title>
      <link href="/posts/9520.html"/>
      <url>/posts/9520.html</url>
      
        <content type="html"><![CDATA[<h1 id="从-hexo-框架开始"><a href="#从-hexo-框架开始" class="headerlink" title="从 hexo 框架开始"></a>从 hexo 框架开始</h1><blockquote><p>曾经一直想着拥有自己的博客，现在终于实现了，一开始是想着学了 vue 和 springboot 两个框架后，自己搭建一个博客，但是写着写着发现效率好低，做着很多重复性工作(才不是我的代码封装性不好)，总之就是想写好的话需要很久的时间，因为样式、脚本、字体等等都要自己弄，终究是以失败告终，后来问 chat 才发现原来有现成的博客框架 hexo，当知道这点的时候可开心了，马上就去了解这个框架，这个框架用起来倒是不难，大部分博客该有的功能都帮我实现了，但是我要的是一个个性化的博客，我想要随意的改变我博客的每一个地方，然后发现 hexo 有很多的主题，于是…</p></blockquote><hr><h1 id="主题选择之旅"><a href="#主题选择之旅" class="headerlink" title="主题选择之旅"></a>主题选择之旅</h1><blockquote><p>于是又开启主题学习之旅，但是主题的选择又成为了一个难题，于是我上网看了大部分人所使用的主题，有一个 Aurora 主题我挺喜欢的，一个极光主题，很有科技感和未来感，不过看起来太花哨了，色彩很重，我想要我的博客色彩淡一些，于是选择了 butterfly 主题，这个主题网上有教程，所以学习起来不是很难，我很快就配置好了这个主题，但是新的问题又来了…</p></blockquote><h1 id="开始魔改"><a href="#开始魔改" class="headerlink" title="开始魔改"></a>开始魔改</h1><blockquote><p>虽然是使用了一个主题，但是这个主题毕竟还是别人的，总有地方是自己还想要进一步改造的，所以需要对主题进行魔改，这个 b 站上有教程，一开始是跟着安知鱼这个博主进行修改的，整个过程还是比较简单轻松的，很快就改造的有模有样了，但是终究是跟着别人改的，还不会自己改，所以我又开始研究如何自己魔改，然后研究了一下主题的源代码，发现…</p></blockquote><h1 id="自己魔改"><a href="#自己魔改" class="headerlink" title="自己魔改"></a>自己魔改</h1><blockquote><p>我发现原来魔改好简单，一开始看到.pug 和.styl 文件我还以为是我不熟悉的语言写的文件，然后仔细一看.pug 文件不就是简单版的 html 文件吗，.styl 文件就是简单版的 css 文件，岂可修！！！搞得我还以为我要学习新的语言，除了语法有点区别外其他基本一样，所以我很快就上手了自己魔改。其实魔改挺有意思的，我现在有点乐在其中了哈哈</p></blockquote><h1 id="学习收获"><a href="#学习收获" class="headerlink" title="学习收获"></a>学习收获</h1><blockquote><p>这次博客搭建学到了挺多的东西，比如我只知道 css 可以定义变量，却不知道具体该怎么使用，现在对变量声明和使用都熟悉了，然后就是学习到了很多新的插件和新的思维方式与概念，还认识到了很多优秀的博主，了解到了更多工具网站，比如制作徽标，icon 等等</p></blockquote><h1 id="心声"><a href="#心声" class="headerlink" title="心声"></a>心声</h1><blockquote><p>这个博客承载着我的热爱与热情，这个博客会见证我的成长，我也会见证这个博客的成长，另外我搭建这个博客的原因有很多，一是自己真的想要一个博客用来分享自己的学习成果，自己的生活，记录自己的成长轨迹，二是想结交更多朋友，想认识更多来自互联网的旅人，与我一起交流，不仅仅是编程，还有生活琐事，三是想在这互联网上搭建一个栖息的地方，供互联网中的旅人休息，同时也是想在互联网中留下自己的足迹，四是我生日快到了哈哈，我想为 19 岁的我送上一份最棒的生日礼物，18 岁的我实现了高中的梦想——成为一名程序员！我那时候的高中生活是很无趣的，每天就是写作业，考试，吃饭睡觉，每天重复着无趣的活动，直到遇到了编程，我的世界变得有趣起来，所以开始下定决心要成为一名程序员！高考结束后我立马就开始投入了编程的学习，那真是一段非常充实的时光，我的世界也变得丰富多彩起来！到现在接触编程已经快一年了，能自己写出不错的东西了，但是我的征程还才开始，后面还有很长一段征程要走，所以我希望 19 岁的我能保持我 18 岁的热情，让心永远向阳、不忘初心、不停留在过往、以风为方向勇往直前！保持那个斗志昂扬不认输的我！有梦埋在心底，为实现至死不渝！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
            <tag> hexo </tag>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title></title>
      <link href="/manifest.json"/>
      <url>/manifest.json</url>
      
        <content type="html"><![CDATA[{"name":"xingzhi`Blog","short_name":"xingzhi","theme_color":"#3b70fc","background_color":"#3b70fc","display":"standalone","scope":"/","start_url":"/","icons":[{"src":"/img/siteicon/16.png","sizes":"16x16","type":"image/png"},{"src":"/img/siteicon/32.png","sizes":"32x32","type":"image/png"},{"src":"/img/siteicon/48.png","sizes":"48x48","type":"image/png"},{"src":"/img/siteicon/64.png","sizes":"64x64","type":"image/png"},{"src":"/img/siteicon/128.png","sizes":"128x128","type":"image/png"},{"src":"/img/siteicon/144.png","sizes":"144x144","type":"image/png"},{"src":"/img/siteicon/512.png","sizes":"512x512","type":"image/png"}],"splash_pages":null}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>关于本站</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>anime</title>
      <link href="/anime/index.html"/>
      <url>/anime/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>archives</title>
      <link href="/archives/index.html"/>
      <url>/archives/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>分类</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[<!-- <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/js-heo@1.0.11/3dCard/no3d.css"><div id='libCategories'><div id="lib-cards" class="container"><a href='/categories/经验分享/'>  <card data-image="https://p.zhheo.com/646d6131d4e522e7d700b4bb1d3cd21ccdceea02.png!cover">    <h1 slot="header">经验分享</h1>    <p slot="content">原创内容或翻译内容，分享经验和想法，涵盖设计实践、设计理论、开发、软件及系统使用、教程等多个领域</p>  </card></a><a href='/categories/翻译内容/'>  <card data-image="https://p.zhheo.com/7HrCfl22390181609860203724.png!cover">    <h1 slot="header">翻译内容</h1>    <p slot="content">国外优秀的经验和内容原创译文分享，消除语言隔阂，寻找最先锋最领先的设计思路和设计方法，或者是优秀的国外内容。</p>  </card></a><a href='/categories/资源中心/'>  <card data-image="https://p.zhheo.com/65002366767c3beb88ca679dbdbad7cf0eafbc09.png!cover">    <h1 slot="header">资源中心</h1>    <p slot="content">汇聚市面上难以寻找的资源，尽可能不上传侵犯版权的文件资源，如有违规行为请联系作者禁用文章。资源仅供学习交流使用。</p>  </card></a><a href='/categories/优质推荐/'>  <card data-image="https://p.zhheo.com/32c1b437eaa5959f8bb3c530b8af7ac4fec2ee25.png!cover">    <h1 slot="header">优质推荐</h1>    <p slot="content">优秀的网站、软件总是会被信息洪流所淹没。在这里我会推荐一些实用的网站、实用的软件。在这里一定可以发现你想要的宝藏。</p>  </card></a><a href='/categories/佳作推荐/'>  <card data-image="https://p.zhheo.com/2c6b63e7825b17a66f96c17eddd94207d5769333.png!cover">    <h1 slot="header">佳作推荐</h1>    <p slot="content">优秀的设计作品总是令人叹为观止。在这里你能看到令人惊艳的设计作品。我会将优秀的设计作品都分享到这里。</p>  </card></a><a href='/categories/自研工具/'>  <card data-image="https://p.zhheo.com/d13ef73a69791b50af0dfc077002dc29aaad1158.png!cover">    <h1 slot="header">自研工具</h1>    <p slot="content">从初中的时候我就是一个开发者，当时主要做一款Wwrite的写作工具。梦的起点开始了，或许未来，我也会成为一个开发者。</p>  </card></a><a href='/categories/闲聊杂谈/'>  <card data-image="https://p.zhheo.com/0f1b9b72790b264f8b23d2c13b1f8718f873b209.png!cover">    <h1 slot="header">闲聊杂谈</h1>    <p slot="content">表达一些当时的想法，算是一个公开的类似日记的事物吧。不过不常更新。分享生活，分享经历和状态。</p>  </card></a><a href='/categories/转载内容/'>  <card data-image="https://p.zhheo.com/a092ad95cddf1006c6b26ee2bfc0ea2027881b47.png!cover">    <h1 slot="header">转载内容</h1>    <p slot="content">只是防止原作者站挂掉或者内容被删除所做的备份，建议访客点击访问原文进行阅读。原文地址放在文章最顶部。</p>  </card></a></div></div><div class='js-pjax'><script src='https://lf6-cdn-tos.bytecdntp.com/cdn/expire-1-M/vue/2.6.14/vue.min.js'></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/js-heo@1.0.11/3dCard/no3d.js"></script></div> -->]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>版权协议</title>
      <link href="/cc/index.html"/>
      <url>/cc/index.html</url>
      
        <content type="html"><![CDATA[<p>为了保持文章质量，并保持互联网的开放共享精神，保持页面流量的稳定，综合考虑下本站的所有原创文章均采用cc协议中比较严格的<a target="_blank" rel="noopener external nofollow" href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh">署名-非商业性使用-禁止演绎 4.0 国际</a>标准。这篇文章主要想能够更加清楚明白的介绍本站的协议标准和要求。方便你合理的使用本站的文章。</p><p>本站无广告嵌入和商业行为。违反协议的行为不仅会损害原作者的创作热情，而且会影响整个版权环境。强烈呼吁你能够在转载时遵守协议。遵守协议的行为几乎不会对你的目标产生负面影响，鼓励创作环境是每个创作者的期望。</p><h2 id="哪些文章适于本协议？"><a href="#哪些文章适于本协议？" class="headerlink" title="哪些文章适于本协议？"></a>哪些文章适于本协议？</h2><p>所有原创内容均在文章标题顶部，以及文章结尾的版权说明部分展示。</p><p>原创内容的非商用转载必须为完整转载且标注出处的<code>带有完整url链接</code>或<code>访问原文</code>之类字样的超链接。</p><p>作为参考资料的情况可以无需完整转载，摘录所需要的部分内容即可，但需标注出处。</p><h2 id="你可以做什么？"><a href="#你可以做什么？" class="headerlink" title="你可以做什么？"></a>你可以做什么？</h2><p>只要你遵守本页的许可，你可以自由地共享文章的内容 — 在任何媒介以任何形式复制、发行本作品。并且无需通知作者。</p><h2 id="你需要遵守什么样的许可？"><a href="#你需要遵守什么样的许可？" class="headerlink" title="你需要遵守什么样的许可？"></a>你需要遵守什么样的许可？</h2><h3 id="署名"><a href="#署名" class="headerlink" title="署名"></a>署名</h3><p>你必须标注内容的来源，你需要在文章开头部分（或者明显位置）标注原文章链接（建议使用超链接提升阅读体验）。</p><h3 id="禁止商用"><a href="#禁止商用" class="headerlink" title="禁止商用"></a>禁止商用</h3><p>本站内容免费向互联网所有用户提供，分享本站文章时禁止商业性使用、禁止在转载页面中插入广告（例如谷歌广告、百度广告）、禁止阅读的拦截行为（例如关注公众号、下载App后观看文章）。</p><h3 id="禁止演绎"><a href="#禁止演绎" class="headerlink" title="禁止演绎"></a>禁止演绎</h3><ul><li>分享全部内容（无修改）<br>你需要在文章开头部分（或者明显位置）标注原文章链接（建议使用超链接）</li><li>分享部分截取内容或者衍生创作<br>目前本站全部原创文章的衍生品禁止公开分享和分发。如有更好的修改建议，可以在对应文章下留言。如有衍生创作需求，可以在评论中联系。</li><li>作为参考资料截取部分内容<br>作为参考资料的情况可以无需完整转载，摘录所需要的部分内容即可，但需标注出处。</li></ul><h2 id="什么内容会被版权保护"><a href="#什么内容会被版权保护" class="headerlink" title="什么内容会被版权保护"></a>什么内容会被版权保护</h2><p>包括但不限于：</p><ul><li>文章封面图片</li><li>文章标题和正文</li><li>站点图片素材（不含主题自带素材）</li></ul><h2 id="例外情况"><a href="#例外情况" class="headerlink" title="例外情况"></a>例外情况</h2><p>本着友好互相进步的原则，被本站友链收录的博客允许博客文章内容的衍生品的分享和分发，但仍需标注出处。</p><p>本着互联网开放精神，你可以在博客文章下方留言要求授权博文的衍生品的分享和分发，标注你的网站地址。</p><h2 id="网站源代码协议"><a href="#网站源代码协议" class="headerlink" title="网站源代码协议"></a>网站源代码协议</h2><p>网站源代码（仅包含css、js）的代码部分采用GPL协议。</p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>Cookies政策</title>
      <link href="/cookies/index.html"/>
      <url>/cookies/index.html</url>
      
        <content type="html"><![CDATA[<h2 id="更新日期"><a href="#更新日期" class="headerlink" title="更新日期"></a>更新日期</h2><p>本政策的最近更新日期为：2023-10-22</p><p>为了确保网站和我开发的软件的可靠性、安全性和个性化，我使用 Cookies。当你接受 Cookies 时，这有助于通过识别你的身份、记住你的偏好或提供个性化用户体验来帮助我改善网站。</p><p>本政策应与我的<a href="https://blog.hoshinagi.top/privacy/" data-pjax-state>隐私政策</a>一起阅读，该隐私政策解释了我如何使用个人信息。</p><p>如果你对我使用你的个人信息或 Cookies 的方式有任何疑问，请通过 <code>2964465311@qq.com</code>与我联系</p><p>如果你想管理你的 Cookies，请按照下面“如何管理 Cookies”部分中的说明进行操作。</p><h2 id="什么是-Cookies？"><a href="#什么是-Cookies？" class="headerlink" title="什么是 Cookies？"></a>什么是 Cookies？</h2><p>Cookies 是一种小型文本文件，当你访问网站时，网站可能会将这些文件放在你的计算机或设备上。Cookies 会帮助网站或其他网站在你下次访问时识别你的设备。网站信标、像素或其他类似文件也可以做同样的事情。我在此政策中使用术语“Cookies”来指代以这种方式收集信息的所有文件。</p><p>Cookies 提供许多功能。例如，他们可以帮助我记住你喜欢深色模式还是浅色模式，分析我网站的效果。</p><p>大多数网站使用 Cookies 来收集和保留有关其访问者的个人信息。大多数 Cookies 收集一般信息，例如访问者如何到达和使用我的网站，他们使用的设备，他们的互联网协议地址（IP 地址），他们正在查看的页面及其大致位置（例如，我将能够认识到你正在从北京访问我的网站）。</p><h2 id="Cookies-的目的"><a href="#Cookies-的目的" class="headerlink" title="Cookies 的目的"></a>Cookies 的目的</h2><p>我将Cookies分为以下类别:</p><div class="table-wrap"><table><thead><tr><th>用途</th><th>说明</th></tr></thead><tbody><tr><td>授权</td><td>你访问我的网站时，我可通过 Cookie 提供正确信息，为你打造个性化的体验。例如：Cookie会告知你通过搜索引擎搜索的具体内容来改善文章的标题优化关键词、或者创建更符合你搜索需求的文章内容。</td></tr><tr><td>安全措施</td><td>我通过 Cookie 启用及支持安全功能，监控和防止可疑活动、欺诈性流量和违反版权协议的行为。</td></tr><tr><td>偏好、功能和服务</td><td>我使用功能性Cookies来让我记住你的偏好，或保存你向我提供的有关你的喜好或其他信息。</td></tr><tr><td>个性化广告</td><td>本站涉及GoogleADS个性化广告服务</td></tr><tr><td>网站性能、分析和研究</td><td>我使用这些cookie来监控网站性能。这使我能够通过快速识别和解决出现的任何问题来提供高质量的体验。</td></tr></tbody></table></div><h2 id="我的网站上的第三方-Cookies"><a href="#我的网站上的第三方-Cookies" class="headerlink" title="我的网站上的第三方 Cookies"></a>我的网站上的第三方 Cookies</h2><p>我还在我的网站上使用属于上述类别的第三方Cookies，用于以下目的：</p><ul><li>帮助我监控网站上的流量；</li><li>识别欺诈或非人为性流量；</li><li>协助市场调研；</li><li>改善网站功能；</li><li>监督我的版权协议和隐私政策的遵守情况。</li></ul><div class="table-wrap"><table><thead><tr><th>第三方服务商</th><th>用途</th></tr></thead><tbody><!-- <tr><td>baidu.com</td><td>用于统计站内访问情况，进行针对性优化</td></tr> --><tr><td>ibruce.info</td><td>busuznzi统计，用于区分访问pv数量和uv数量，在文章处展示人气</td></tr></tbody></table></div><h2 id="如何管理-Cookies？"><a href="#如何管理-Cookies？" class="headerlink" title="如何管理 Cookies？"></a>如何管理 Cookies？</h2><p>在将Cookie放置在你的计算机或设备上之前，系统会显示一个弹出窗口，要求你同意设置这些Cookie。通过同意放置Cookies，你可以让我为你提供最佳的体验和服务。如果你愿意，你可以通过浏览器设置关闭本站的Cookie来拒绝同意放置Cookies；但是，我网站的部分功能可能无法完全或按预期运行。你有机会允许和/或拒绝使用Cookie。你可以通过访问浏览器设置随时返回到你的Cookie偏好设置以查看和/或删除它们。</p><p>除了我提供的控件之外，你还可以选择在Internet浏览器中启用或禁用Cookie。大多数互联网浏览器还允许你选择是要禁用所有Cookie还是仅禁用第三方Cookie。默认情况下，大多数互联网浏览器都接受Cookie，但这可以更改。有关详细信息，请参阅Internet浏览器中的帮助菜单或设备随附的文档。</p><p>以下链接提供了有关如何在所有主流浏览器中控制Cookie的说明：</p><p><a target="_blank" rel="noopener external nofollow" href="https://support.google.com/chrome/answer/95647?hl=en">Google Chrome</a><br><a target="_blank" rel="noopener external nofollow" href="https://support.microsoft.com/en-us/help/260971/description-of-cookies">IE</a><br><a target="_blank" rel="noopener external nofollow" href="https://support.apple.com/guide/safari/manage-cookies-and-website-data-sfri11471/mac">Safari（桌面版）</a><br><a target="_blank" rel="noopener external nofollow" href="https://support.apple.com/en-us/HT201265">Safari（移动版）</a><br><a target="_blank" rel="noopener external nofollow" href="https://support.mozilla.org/en-US/kb/Cookies-information-websites-store-on-your-computer">火狐浏览器</a><br><a target="_blank" rel="noopener external nofollow" href="http://support.google.com/ics/nexus/bin/answer.py?hl=en&amp;answer=2425067">Android浏览器</a></p><p>如你使用其他浏览器，请参阅浏览器制造商提供的文档。<br>有关Cookies以及如何管理Cookies的更多信息，请访问：</p><p><a target="_blank" rel="noopener external nofollow" href="https://zh.wikipedia.org/wiki/Cookie">wikipedia.org</a> 、 <a target="_blank" rel="noopener external nofollow" href="https://www.allaboutcookies.org/">allaboutCookies.org</a> 或 <a target="_blank" rel="noopener external nofollow" href="https://www.aboutcookies.org/">aboutCookies.org</a></p><h2 id="更多信息"><a href="#更多信息" class="headerlink" title="更多信息"></a>更多信息</h2><p>有关我数据处理的更多信息，请参阅我的<a href="https://blog.xingzhi.com/privacy/" data-pjax-state="">隐私政策</a>。如果你对此Cookie政策有任何疑问，请通过<code>2964465311@qq.com</code>与我联系。</p><h2 id="对此-Cookie-政策的更改"><a href="#对此-Cookie-政策的更改" class="headerlink" title="对此 Cookie 政策的更改"></a>对此 Cookie 政策的更改</h2><p>我可能对此Cookie政策所做的任何更改都将发布在此页面上。如果更改很重要，我会在我的主页或应用上明确指出该政策已更新。</p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/about.css"/>
      <url>/css/about.css</url>
      
        <content type="html"><![CDATA[@media screen and (min-width: 1300px) {  #page > div:not(.author-content-item) {    animation: slide-in 0.6s 0.2s backwards;  }  .author-content-item {    animation: slide-in 0.6s 0s backwards;  }}#about-page {  display: flex;  padding-top: 1rem;  flex-direction: column;  align-items: center;}#about-page .author-info {  display: flex;  align-items: center;  margin: 0 0 16px 0;}#about-page .author-tag-left {  display: flex;  flex-direction: column;  align-items: flex-end;}#about-page .author-tag-left .author-tag:first-child,#about-page .author-tag-left .author-tag:last-child {  margin-right: -16px;}#about-page .author-tag-right .author-tag:first-child,#about-page .author-tag-right .author-tag:last-child {  margin-left: -16px;}#about-page .author-tag {  transform: translate(0, -4px);  padding: 1px 8px;  background: var(--xingzhi-card-bg);  border: var(--style-border-always);  border-radius: 40px;  margin-top: 6px;  font-size: 14px;  font-weight: 700;  box-shadow: var(--xingzhi-shadow-lightblack);  animation: 6s ease-in-out 0s infinite normal none running floating;}#about-page .author-tag:nth-child(1) {  animation-delay: 0s;}#about-page .author-tag:nth-child(2) {  animation-delay: 0.6s;}#about-page .author-tag:nth-child(3) {  animation-delay: 1.2s;}#about-page .author-tag:nth-child(4) {  animation-delay: 1.8s;}#about-page .author-img {  margin: 0 30px;  border-radius: 50%;  width: 180px;  height: 180px;  position: relative;  background: var(--xingzhi-secondbg);  user-select: none;  transition: 0.3s;}#about-page .author-img::before {  content: "";  -webkit-transition: 1s;  -moz-transition: 1s;  -o-transition: 1s;  -ms-transition: 1s;  transition: 1s;  width: 30px;  height: 30px;  background: var(--xingzhi-green);  position: absolute;  border-radius: 50%;  border: 5px solid var(--xingzhi-background);  bottom: 5px;  right: 10px;  z-index: 2;}#about-page .author-img #lottie_avatar {  border-radius: 200px;  overflow: hidden;  width: 180px;  height: 180px;}#about-page .author-box .author-img img {  border-radius: 50%;  overflow: hidden;  width: 180px;  height: 180px;}#about-page .author-info .author-img:hover {  -webkit-transform: scale(1.1);  -moz-transform: scale(1.1);  -o-transform: scale(1.1);  -ms-transform: scale(1.1);  transform: scale(1.1);}#about-page .author-tag-right {  display: flex;  flex-direction: column;  align-items: flex-start;}#about-page .author-title {  font-size: 2rem;  font-weight: 700;  margin: 1rem 0;  line-height: 1;}#about-page .myInfoAndSayHello {  display: flex;  flex-direction: column;  justify-content: center;  color: var(--xingzhi-white);  background: linear-gradient(120deg, #5b27ff 0, #00d4ff 100%);  background-size: 200%;  width: 59%;}.author-content {  display: flex;  flex-wrap: wrap;  justify-content: space-between;  width: 100%;  margin-top: 1rem;}.author-content-item {  width: 49%;  border-radius: 24px;  background: var(--xingzhi-card-bg);  border: var(--style-border-always);  box-shadow: var(--xingzhi-shadow-border);  position: relative;  padding: 1rem 2rem;  overflow: hidden;}#about-page .myInfoAndSayHello .title1 {  opacity: 0.8;  line-height: 1.3;}#about-page .myInfoAndSayHello .title2 {  font-size: 36px;  font-weight: 700;  line-height: 1.1;  margin: 0.5rem 0;}.inline-word {  word-break: keep-all;  white-space: nowrap;}.author-content-item.aboutsiteTips {  display: flex;  justify-content: center;  align-items: flex-start;  flex-direction: column;  width: 39%;}.author-content-item .author-content-item-tips {  opacity: 0.8;  font-size: 0.9rem;  margin-bottom: 0.5rem;}.aboutsiteTips h2 {  margin-right: auto;  font-size: 36px;  font-family: Helvetica;  line-height: 1.06;  letter-spacing: -0.02em;  color: var(--xingzhi-fontcolor);  margin-top: 0;}h1,h2,h3,h4,h5,h6 {  margin-top: 1rem;  padding-top: 0;  padding-left: 0 !important;  font-weight: 700;}h1,h2,h3,h4,h5,h6 {  position: relative;  margin: 1rem 0 0.7rem;  color: var(--xingzhi-fontcolor);  font-weight: 700;}.aboutsiteTips .mask {  height: 36px;  position: relative;  overflow: hidden;  margin-top: 4px;}.aboutsiteTips .mask span:nth-child(1) {  background-image: linear-gradient(45deg, #0ecffe 50%, #07a6f1);}.aboutsiteTips .mask span:nth-child(2) {  background-image: linear-gradient(45deg, #18e198 50%, #0ec15d);}.aboutsiteTips .mask span:nth-child(3) {  background-image: linear-gradient(45deg, #8a7cfb 50%, #633e9c);}.aboutsiteTips .mask span:nth-child(4) {  background-image: linear-gradient(45deg, #fa7671 50%, #f45f7f);}.aboutsiteTips .mask span {  display: block;  box-sizing: border-box;  position: absolute;  top: 36px;  padding-bottom: var(--offset);  background-size: 100% 100%;  -webkit-background-clip: text;  background-clip: text;  -webkit-text-fill-color: transparent;  background-repeat: no-repeat;}.aboutsiteTips .mask span[data-show] {  transform: translateY(-100%);  transition: 0.5s transform ease-in-out;}.aboutsiteTips .mask span[data-up] {  transform: translateY(-200%);  transition: 0.5s transform ease-in-out;}@keyframes floating {  0% {    transform: translate(0, -4px);  }  50% {    transform: translate(0, 4px);  }  100% {    transform: translate(0, -4px);  }}@keyframes rowup {  from {    transform: translateX(0);  }  to {    transform: translateX(-50%);  }}.author-content-item.skills {  display: flex;  justify-content: center;  align-items: flex-start;  flex-direction: column;  width: 49%;  min-height: 450px;}.author-content-item .card-content {  position: absolute;  width: 100%;  height: 100%;  top: 0;  left: 0;  z-index: 2;  display: flex;  flex-direction: column;  padding: 1rem 2rem;}.author-content-item .card-content .author-content-item-title {  margin-bottom: 0.5rem;}.author-content-item .author-content-item-title {  font-size: 36px;  font-weight: 700;  line-height: 1;}.author-content-item.skills .skills-style-group {  position: relative;}.author-content-item.skills .tags-group-all {  display: flex;  transform: rotate(0);  transition: 0.3s;}.tags-group-icon-pair {  margin-left: 1rem;  user-select: none;}.tags-group-icon {  display: flex;  align-items: center;  justify-content: center;  color: #fff;  font-size: 66px;  font-weight: 700;  box-shadow: var(--xingzhi-shadow-blackdeep);}.tags-group-icon {  width: 120px;  height: 120px;  border-radius: 30px;}#page img {  border-radius: 12px;}.tags-group-icon img {  width: 60%;}.tags-group-icon-pair .tags-group-icon:nth-child(2n) {  margin-top: 1rem;  transform: translate(-60px);}.author-content-item.skills .skills-list {  display: flex;  opacity: 0;  transition: 0.3s;  position: absolute;  width: 100%;  top: 0;  left: 0;  flex-wrap: wrap;  flex-direction: row;  margin-top: 10px;}.author-content-item.skills .skill-info {  display: flex;  align-items: center;  margin-right: 10px;  margin-top: 10px;  background: var(--xingzhi-background);  border-radius: 40px;  padding: 4px 12px 4px 8px;  border: var(--style-border);  box-shadow: var(--xingzhi-shadow-border);}.author-content-item.skills .skill-icon {  width: 32px;  height: 32px;  border-radius: 32px;  display: flex;  align-items: center;  justify-content: center;  margin-right: 8px;  user-select: none;}.author-content-item.skills .skill-name {  font-weight: 700;  line-height: 1;}.author-content-item.skills:hover .skills-style-group .tags-group-all {  opacity: 0;}.author-content-item.skills:hover .skills-style-group .skills-list {  opacity: 1;}.tags-group-wrapper {  margin-top: 5rem;  display: flex;  flex-wrap: nowrap;  animation: rowup 40s linear infinite;}.nowrapMove .tags-group-wrapper {  margin-top: 7rem;  animation: rowup 80s linear infinite;}.author-content-item.skills .tags-group-wrapper {  margin-top: 40px;  display: flex;  flex-wrap: nowrap;  animation: rowup 40s linear infinite;}.author-content-item.careers {  min-height: 400px;}.author-content-item.careers .careers-group {  margin-top: 12px;}.author-content-item.careers .careers-item {  display: flex;  align-items: center;}.author-content-item.careers .careers-item .circle {  width: 16px;  height: 16px;  margin-right: 8px;  border-radius: 16px;}.author-content-item.careers .careers-item .name {  color: var(--xingzhi-secondtext);}.author-content-item.careers img {  position: absolute;  left: 0;  bottom: 20px;  width: 100%;  transition: 0.6s;  user-select: none;}.author-content-item.game-lol {  background: url(https://xizhi-picgo.oss-cn-guangzhou.aliyuncs.com/xingzhiblog/about/paike.webp)    no-repeat top;  background-size: cover;  min-height: 300px;  overflow: hidden;  color: var(--xingzhi-white);  width: 59%;}.author-content-item.game-lol::after {  box-shadow: 0 -69px 203px 11px #04120f inset;  position: absolute;  content: "";  width: 100%;  height: 100%;  top: 0;  left: 0;}.author-content-item .content-bottom {  margin-top: auto;  display: flex;  align-items: center;  justify-content: space-between;}.author-content-item .content-bottom .icon-group {  display: flex;}.author-content-item .content-bottom .icon-group i {  display: inline-block;  width: 22px;  height: 18px;  margin-right: 0.5rem;}.icon-pos-mid {  background: url(https://xizhi-picgo.oss-cn-guangzhou.aliyuncs.com/xingzhiblog/about/icon-mid.webp);}.icon-pos-sup {  background: url(https://xizhi-picgo.oss-cn-guangzhou.aliyuncs.com/xingzhiblog/about/icon-sup.webp);}.author-content-item.game-wangzhe {  width: 39%;  background: url(https://xizhi-picgo.oss-cn-guangzhou.aliyuncs.com/xingzhiblog/about/bailishouyue.webp)    no-repeat top;  background-size: cover;  min-height: 300px;  overflow: hidden;  color: var(--xingzhi-white);}.author-content-item.single {  width: 100%;}.author-content-item .author-content-item-tips {  opacity: 0.8;  font-size: 0.6rem;  margin-bottom: 0.5rem;}.author-content-item .author-content-item-title {  font-size: 36px;  font-weight: 700;  line-height: 1;}b,strong {  color: var(--xingzhi-lighttext);  font-weight: bolder;}@media screen and (max-width: 900px) {  .layout {    -webkit-box-orient: vertical;    flex-direction: column;  }}@media screen and (max-width: 768px) {  .author-content {    margin-top: 0;  }}@media screen and (max-width: 768px) {  .author-content-item {    width: 100% !important;    margin-top: 1rem;    padding: 1rem;  }}.author-content-item-group.column.mapAndInfo {  width: 59%;}.author-content-item-group.column {  display: flex;  flex-direction: column;  width: 49%;  justify-content: space-between;}.author-content-item.map {  background: url(https://img.hoshinagi.top/about/map.webp) no-repeat center;  min-height: 160px;  max-height: 400px;  position: relative;  overflow: hidden;  margin-bottom: 0.5rem;  height: 60%;  background-size: 100%;  transition: 1s ease-in-out;}.author-content-item.single {  width: 100%;}.author-content-item.selfInfo {  display: flex;  min-height: 100px;  max-height: 400px;  justify-content: space-between;  align-items: center;  flex-wrap: wrap;  height: -webkit-fill-available;  height: 40%;}.author-content-item.map .map-title {  position: absolute;  bottom: 0;  left: 0;  width: 100%;  background: var(--xingzhi-maskbg);  padding: 0.5rem 2rem;  backdrop-filter: saturate(180%) blur(20px);  -webkit-backdrop-filter: blur(20px);  transition: 1s ease-in-out;  font-size: 20px;  transform: translateZ(0);}[data-theme="dark"] .author-content-item.map {  background: url(https://img.hoshinagi.top/about/map_night.webp) no-repeat    center;  background-size: 100%;}.author-content-item.map:hover {  background-size: 120%;  transition: 4s ease-in-out;  background-position-x: 0;  background-position-y: 36%;}.author-content-item.map:hover .map-title {  bottom: -100%;}.author-content-item.map .map-title b {  color: var(--xingzhi-fontcolor);}.author-content-item.selfInfo div {  display: flex;  flex-direction: column;  margin: 0.5rem 2rem 0.5rem 0;}.author-content-item.selfInfo .selfInfo-title {  opacity: 0.8;  font-size: 0.8rem;  line-height: 1;  margin-bottom: 8px;}.author-content-item.selfInfo .selfInfo-content {  font-weight: 700;  font-size: 34px;  line-height: 1;}#about-page .about-statistic {  min-height: 380px;  width: 39%;  background: url(https://bu.dusays.com/2023/03/12/640dc8c72f623.webp) no-repeat    top;  background-size: cover;  color: var(--xingzhi-white);  overflow: hidden;}#about-page .about-statistic::after {  box-shadow: 0 -159px 173px 71px #0f1114 inset;  position: absolute;  content: "";  width: 100%;  height: 100%;  top: 0;  left: 0;}.author-content-item .author-content-item-tips {  opacity: 0.8;  font-size: 0.8rem;  margin-bottom: 0.5rem;}.author-content-item .card-content .author-content-item-title {  margin-bottom: 0.5rem;}.author-content-item .author-content-item-title {  font-size: 36px;  font-weight: 700;  line-height: 1;}#statistic {  font-size: 16px;  border-radius: 15px;  width: 100%;  color: var(--xingzhi-white);  display: flex;  justify-content: space-between;  flex-direction: row;  flex-wrap: wrap;  margin-top: 1rem;  margin-bottom: 2rem;}.post-tips {  color: var(--xingzhi-gray);  font-size: 14px;  position: absolute;  bottom: 1rem;  left: 2rem;}.author-content-item .card-content .banner-button-group {  position: absolute;  bottom: 1.5rem;  right: 2rem;}.author-content-item .card-content .banner-button-group .banner-button:hover {  background: var(--xingzhi-lighttext);  color: var(--xingzhi-card-bg);}#statistic div {  display: flex;  justify-content: space-between;  flex-direction: column;  width: 50%;  margin-bottom: 0.5rem;}#statistic div span:first-child {  opacity: 0.8;  font-size: 0.7rem;}#statistic div span:last-child {  font-weight: 700;  font-size: 34px;  line-height: 1;  white-space: nowrap;}.post-tips a {  color: var(--xingzhi-gray) !important;  border: none !important;}#about-page .about-statistic .banner-button {  background: var(--xingzhi-white-op);}.author-content-item .card-content .banner-button-group .banner-button {  height: 40px;  width: 118px;  border-radius: 20px;  justify-content: center;  background: var(--xingzhi-black-op);  color: var(--xingzhi-white);  display: flex;  align-items: center;  z-index: 1;  transition: 0.3s;  cursor: pointer;  backdrop-filter: saturate(180%) blur(20px);  -webkit-backdrop-filter: blur(20px);  transform: translateZ(0);}.author-content-item .card-content .banner-button-group .banner-button i {  margin-right: 8px;  font-size: 22px;}#about-page .about-statistic .banner-button:hover {  background: var(--xingzhi-lighttext);}@media screen and (max-width: 768px) {  .author-content-item .card-content {    padding: 1rem;  }  .author-content-item-group.column {    width: 100% !important;  }  .layout > div:first-child:not(.recent-posts) {    border-radius: 0;    padding: 0 1rem !important;    box-shadow: none !important;    background: var(--xingzhi-background);  }}@media screen and (max-width: 1300px) {  .author-content-item.selfInfo {    height: 70%;  }}.author-content-item.personalities {  overflow: hidden;  position: relative;  width: 59%;}.author-content-item.personalities .title2 {  font-size: 36px;  font-weight: 700;  line-height: 1.1;}.author-content-item.myphoto {  height: 60%;  min-height: 400px;  position: relative;  overflow: hidden;  width: 39%;  display: flex;  align-items: center;  justify-content: center;}.author-content-item.myphoto img {  position: absolute;  height: 100%;  min-width: 100%;  object-fit: cover;  transition: 0.6s;  user-select: none;}.author-content-item.personalities .image {  position: absolute;  right: -40px;  bottom: -10rem;  transition: transform 2s cubic-bezier(0.13, 0.45, 0.21, 1.02);  user-select: none;}.author-content-item.personalities:hover .image {  transform: rotate(-10deg);}@media screen and (max-width: 768px) {  #about-page .author-tag-left,  #about-page .author-tag-right {    display: none;  }  .author-content-item.personalities .image {    right: -70px;  }  .author-content-item.personalities {    min-height: 360px;  }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/algolia_search.css"/>
      <url>/css/algolia_search.css</url>
      
        <content type="html"><![CDATA[#algolia-search .search-dialog {  animation: slide-in 0.6s ease 0s 1 normal none running;}.search-dialog:hover {  border: var(--style-border-hover);  box-shadow: var(--xingzhi-shadow-theme);}.search-dialog {  position: fixed;  top: 5rem;  left: 50%;  z-index: 1001;  display: none;  margin-left: -15rem;  padding: 1rem;  width: 30rem;  background: var(--search-bg);  border-radius: 5px;}.search-dialog {  border-radius: 12px !important;  box-shadow: var(--xingzhi-shadow-lightblack);  background: var(--xingzhi-card-bg);  border: var(--style-border);  transition: 0.3s;}#search-mask {  backdrop-filter: blur(12px);  -webkit-backdrop-filter: blur(12px);  transform: translateZ(0);  background: var(--xingzhi-maskbgdeep);}#search-mask {  position: fixed;  inset: 0;  z-index: 1000;  display: none;  /* background: rgba(0,0,0,.6); */}.search-dialog__title {  font-weight: 700;  color: var(--xingzhi-main);}.search-dialog__title {  padding: 0 0 0.7rem;  color: #307af6;  font-size: 1.4em;  line-height: 1;}#algolia-input-panel {  margin-bottom: 8px;}#algolia-search-results {  padding-top: 8px;}#algolia-tips {  padding-top: 12px;  color: var(--xingzhi-secondtext);  right: 0;  margin: auto;}.search-dialog span.search-close-button {  position: absolute;  top: 0.8rem;  right: 1rem;  color: #858585;  font-size: 1.4em;  line-height: 1;  cursor: pointer;  transition: color 0.2s ease-in-out 0s;}.ais-search-box {  position: relative;  max-width: 300px;  width: 100%;}#algolia-search .search-dialog .ais-search-box {  padding-top: 8px;}#algolia-search .search-dialog .ais-search-box {  margin: 0 auto;  max-width: 100%;  width: 100%;}.ais-search-box--input {  padding-left: 24px;  height: 100%;  width: 100%;}#algolia-search .search-dialog .ais-search-box input {  padding: 0.25rem 0.7rem;  outline: 0;  border: 2px solid #307af6;  border-radius: 2rem;  background: var(--xingzhi-secondbg);  color: var(--search-input-color);}#algolia-search .search-dialog .ais-search-box input {  border-radius: 8px !important;  border: var(--style-border);}#algolia-search .search-dialog .ais-hits--item.algolia-hit-item {  position: relative;  padding-left: 1.2rem;}#algolia-search .search-dialog .ais-hits--item.algolia-hit-item {  padding-left: 0;  font-weight: 700;}#algolia-search .ais-hits--item.algolia-hit-item a {  color: var(--xingzhi-fontcolor);}#algolia-search .search-dialog .ais-hits--item.algolia-hit-item a {  display: block;  color: var(--search-result-title);  cursor: pointer;}#algolia-search .search-dialog .ais-hits--item.algolia-hit-item a {  color: var(--xingzhi-fontcolor);  width: auto;  max-width: 100%;  white-space: nowrap;  text-overflow: ellipsis;  overflow: hidden;}#algolia-search .search-dialog .ais-hits--item.algolia-hit-item em {    color: #f47466;    font-weight: 700;}#algolia-search .search-dialog .ais-hits--item.algolia-hit-item em {    color: var(--xingzhi-theme);    font-style: normal;}@media screen and (max-width:768px) {  .search-dialog {      top: 0;      left: 0;      margin: 0;      width: 100%;      height: 100%;  }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/aside.css"/>
      <url>/css/aside.css</url>
      
        <content type="html"><![CDATA[@media screen and (min-width: 1300px) {  #aside-content {    padding-left: 1rem;    animation: slide-in 0.6s 0.3s backwards;  }  #aside-content .card-widget {    margin-top: 1rem;  }  #aside-content .card-info .card-info-social-icons i {    color: var(--xingzhi-white);  }  #aside-content .sticky_layout {    top: calc(60px + 1rem);  }  #aside-content .sticky_layout {    margin-top: 1rem;  }  #aside-content .card-widget {    margin-top: 1rem;  }}@media screen and (min-width: 768px) {  #aside-content .sticky_layout {    margin-top: 1rem;  }  .card-allinfo .card-tag-cloud {    max-height: 500px;    overflow: hidden;    position: relative;  }}@media screen and (min-width: 900px) {  #aside-content .sticky_layout {    position: sticky;    top: 20px;    transition: top 0.3s ease 0s;  }}.card-tag-cloud.all-tags {  max-height: none;}#aside-content .item-headline + div,#aside-content .item-headline + ul {  padding: 0;  -webkit-user-select: none;}#aside-content .item-headline span {  margin-left: 4px;}#aside-content .item-headline i {  min-width: 19.5px;  font-size: 18px;}#aside-content .card-widget {  box-shadow: var(--xingzhi-shadow-border);  background: var(--xingzhi-card-bg);  border: var(--style-border);  transition: 0.3s;  border-radius: 12px;  transition: 0.3s;  position: relative;  overflow: hidden;  margin-top: 1rem;  padding: 1rem 1.2rem;}#aside-content .card-allinfo .item-headline {  display: none;}.card-allinfo .item-headline {  display: none;}#aside-content .item-headline {  padding-bottom: 0;  margin-left: 8px;  font-size: 1em;  font-weight: 700;  display: flex;  align-items: center;}.page .sticky_layout {  display: flex;  -webkit-box-orient: vertical;  flex-direction: column;}#aside-content .sticky_layout .card-widget:first-child {  margin-top: 0;}#aside-content > .card-widget.card-info {  background: var(--xingzhi-card-bg);  box-shadow: var(--xingzhi-shadow-black);  position: relative;}#aside-content > .card-widget:first-child {  transition: 0.3s;  border: none;  box-shadow: none;  background: var(--xingzhi-main);  margin-top: 0;}#aside-content .card-widget {  box-shadow: var(--xingzhi-shadow-border);  background: var(--xingzhi-card-bg);  border: var(--style-border);  transition: 0.3s;  border-radius: 12px;  transition: 0.3s;  position: relative;  overflow: hidden;  margin-top: 1rem;  padding: 1rem 1.2rem;}.card-widget.card-info {  padding: 0 !important;}#aside-content > .card-widget.card-info::before {  background: linear-gradient(    -25deg,    var(--xingzhi-main),    var(--xingzhi-main-op-deep),    var(--xingzhi-main),    var(--xingzhi-main-op-deep)  );  background-size: 400%;  position: absolute;  width: 100%;  height: 100%;  left: 0;  top: 0;  content: "";  animation: gradient 15s ease infinite;}#aside-content > .card-widget.card-info {  background: var(--xingzhi-card-bg);  box-shadow: var(--xingzhi-shadow-black);  position: relative;}#aside-content > div.card-widget.card-info > div.card-content {  padding: 1rem 1.2rem;  min-height: 320px;  height: 320px;  position: relative;  user-select: none;}#aside-content > .card-widget.card-info::before {  background: linear-gradient(    -25deg,    var(--xingzhi-main),    var(--xingzhi-main-op-deep),    var(--xingzhi-main),    var(--xingzhi-main-op-deep)  );  background-size: 400%;  position: absolute;  width: 100%;  height: 100%;  left: 0;  top: 0;  content: "";  animation: gradient 15s ease infinite;}.card-info-avatar.is-center {  flex-direction: column;  display: flex;  align-items: flex-start;}.is-center {  text-align: center;  display: flex;  flex-wrap: wrap;  justify-content: center;  flex-direction: row;  align-items: center;}.author-info__top-group {  display: flex;  height: 28px;  width: 100%;}div#author-info__sayhi {  text-align: center;  width: fit-content;  color: var(--xingzhi-white);  background: var(--xingzhi-white-op);  font-size: 12px;  margin-right: auto;  padding: 2px 8px;  border-radius: 12px;  cursor: pointer;  user-select: none;  transition: 0.3s;  margin: auto;  min-width: 100px;}.avatar-img-group {  width: 118px;  height: 118px;  min-width: 118px;  min-height: 118px;  right: calc(50% - 59px);  top: 90px;  border-radius: 500px;  position: absolute;  transition: cubic-bezier(0.69, 0.39, 0, 1.21) 0.3s;  transform-origin: bottom;}.page #aside-content .card-info .avatar-img {  border-color: var(--xingzhi-card-bg);  /* border-color: var(--style-border-avatar); */}#aside-content .card-info .avatar-img {  width: 118px;  height: 118px;  right: 0;  top: 0;  border-radius: 500px;  position: absolute;  opacity: 1;  transition: 0.3s;  border: 5px solid var(--xingzhi-white);  overflow: hidden;}.page .avatar-sticker {  background: var(--xingzhi-card-bg);}.avatar-sticker {  position: absolute;  bottom: 2px;  right: 2px;  width: 33px;  height: 33px;  line-height: 34px;  z-index: 0;  display: flex;  align-items: center;  justify-content: center;  transition: 0.3s 0.2s;  transform: scale(1);  background: var(--xingzhi-white);  border-radius: 50%;}.avatar-sticker img {  width: 26px;  height: 26px;}.author-info__description_group {  position: absolute;  top: 50px;  width: 100%;  left: 0;  padding: 1.2rem;  opacity: 0;  transition: 0.3s;}#aside-content .card-info .author-info__description {  line-height: 1.38;  margin: 0.6rem 0;  text-align: justify;  /* color: rgba(255, 255, 255, 0.8); */  font-size: 16px;}.page .author-info__description {  color: var(--xingzhi-card-bg);}.author-info__description {  line-height: 1.38;  margin: 0.3rem 0;  text-align: justify;  color: var(--xingzhi-white);  opacity: 1;}.page .author-info__description b {  color: var(--xingzhi-card-bg);  opacity: 1;}b,strong {  font-weight: bolder;}.author-info__bottom-group {  display: flex;  justify-content: space-between;  position: absolute;  padding: 1.2rem;  width: 100%;  left: 0;  bottom: 0;  align-items: center;}.page #aside-content .card-info .author-info__name,.page .author-info__desc {  color: var(--xingzhi-card-bg);}#aside-content .card-info .author-info__name {  text-align: left;  font-weight: 700;  color: var(--xingzhi-white);  font-size: 20px;  line-height: 1;  margin-bottom: 5px;}.author-info__desc {  font-size: 12px;  color: var(--xingzhi-white);  opacity: 0.6;  line-height: 1;}#aside-content .card-info .card-info-social-icons {  margin: 0;  display: flex;  justify-content: flex-start;  flex-direction: row;  flex-wrap: wrap;  cursor: pointer;}#aside-content .card-info .card-info-social-icons .social-icon {  margin: 0 0.5rem;  color: var(--xingzhi-fontcolor);  font-size: 1.4em;  cursor: pointer;  display: flex;}#aside-content .card-info .card-info-social-icons .social-icon {  margin: 0;  margin-left: 8px;}#aside-content .card-info .card-info-social-icons i {  background: var(--xingzhi-white-op);  color: var(--xingzhi-white);  font-size: 1rem;  width: 40px;  height: 40px;  display: flex;  align-items: center;  justify-content: center;}#aside-content .card-info .card-info-social-icons i {  transition: all 0.3s ease 0s;  padding: 8px;  border-radius: 32px;}.card-widget:hover .author-info__description_group {  opacity: 1;}#aside-content .card-info:hover .avatar-img-group {  opacity: 0;  transform: scale(0);}#aside-content .author-info__description,#aside-content .author-info__name,#site-name,#site-subtitle,#site-title {  font-family: "PingFang SC", "Hiragino Sans GB", "Microsoft YaHei", sans-serif;}#aside-content .card-info .card-info-social-icons i:hover {  background: var(--xingzhi-white-op);  transform: scale(1.1);  color: var(--xingzhi-white);  box-shadow: none;}div#author-info__sayhi:hover {  background: var(--xingzhi-white-op);  color: var(--xingzhi-white);  transform: scale(1.1);}#aside-content .sticky_layout {  top: 80px;  transition: top 0s;}.card-allinfo hr {  display: flex;  position: relative;  margin: 1rem 0;  border: 1px dashed var(--xingzhi-theme-op);}hr {  box-sizing: content-box;  height: 0;  overflow: visible;}#aside-content .card-webinfo .webinfo .webinfo-item {  display: flex;  -webkit-box-align: center;  align-items: center;  padding: 0.1rem 0.5rem 0;}.webinfo-item {  display: flex;  white-space: nowrap;}#aside-content .card-webinfo .webinfo .webinfo-item div:first-child {  -webkit-box-flex: 1;  flex: 1 1 0%;  padding-right: 1rem;}.webinfo-item-title {  display: flex;}.webinfo-item-title i {  line-height: 2;  margin-right: 6px;  width: 16px;  text-align: center;  font-size: 16px;}#aside-content .card-tag-cloud a sup {  opacity: 0.6;  margin-left: 2px;}#aside-content .card-tag-cloud a {  display: inline-block;  padding: 0 0.3rem;}sup {  top: -0.3em;}sub,sup {  font-size: 75%;  line-height: 0;  position: relative;  vertical-align: baseline;}#aside-content .card-tag-cloud a[href*="/tags/%E7%95%8C%E9%9D%A2%E6%95%88%E6%9E%9C/"] {  color: var(--xingzhi-lighttext) !important;  font-weight: 500;}#aside-content .card-tag-cloud a[href*="/tags/three-js/"] {  color: var(--xingzhi-lighttext) !important;  font-weight: 500;}.webinfo .webinfo-item a {  display: flex;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/bangumi.css"/>
      <url>/css/bangumi.css</url>
      
        <content type="html"><![CDATA[blockquote {    border: var(--style-border-always);    background-color: var(--xingzhi-secondbg);    color: var(--xingzhi-secondtext);    border-radius: 8px;    margin: 1rem 0;    padding:.5rem .8rem}#page.anime {    padding: 2rem 2.5rem;    background: rgba(255, 255, 255, .9);    box-shadow: var(--xingzhi-shadow-border);    border-radius: 12px;    border: var(--style-border);    width: calc(100% - 300px);    align-self: flex-start;    animation: slide-in .6s .1s backwards;    transition: all .3s ease 0s;}#page.anime h1.page-title {    margin: 8px 0 20px;}#page #article-container .bangumi-tabs a.bangumi-tab:hover {    text-decoration: none!important;    font-weight: 500;    border-radius: 10px;    /* column-gap: var(--xingzhi-ahoverbg); */    color: var(--xingzhi-white);    background: var(--xingzhi-main);    box-shadow: var(--xingzhi-shadow-lightblack);}#page #article-container .bangumi-tabs .bangumi-tab {    border-bottom: none;    border-radius: 10px;}a.bangumi-tab {    padding: 5px 10px!important;}#page #article-container .bangumi-tabs .bangumi-tab {    border-bottom: none;    border-radius: 10px;    color: var(--xingzhi-fontcolor);    font-weight: 500;    text-decoration: none;}#page #article-container .bangumi-tab.bangumi-active {    background: var(--xingzhi-theme);    color: var(--xingzhi-ahoverbg);    border-radius: 10px;}[data-theme="dark"] div#page.anime {    background: var(--xingzhi-card-bg);}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/categorybar.css"/>
      <url>/css/categorybar.css</url>
      
        <content type="html"><![CDATA[/* 首页分类条展示 */#category-bar {  padding: 0.4rem 1rem 0.4rem 0.5rem;  background: var(--xingzhi-card-bg);  border-radius: 12px;  display: flex;  white-space: nowrap;  overflow: hidden;  margin-bottom: 1rem;  border: var(--style-border);}@media screen and (max-width: 768px) {  #category-bar {    border-radius: 0;  }}#category #category-bar {  padding: 0;  border: none;}#category a.category-bar-item.select a {  display: none;}.category-in-bar {  display: flex;  white-space: nowrap;}.category-in-bar-tips {  margin-right: 1rem;}.category-bar-items {  white-space: nowrap;  overflow-x: scroll;  display: flex;}.category-bar-items::-webkit-scrollbar {  display: none;}.category-bar-item a {  padding: 0.1rem 0.5rem;  margin: 0 0.25rem;  font-weight: bold;  border-radius: 12px;}.category-bar-item:hover a {  background: var(--xingzhi-main);  color: var(--xingzhi-card-bg);}.category-bar-item.select a {  background: var(--xingzhi-main);  color: var(--xingzhi-white);  border-radius: 12px;}.category-bar-more {  margin-left: 1rem;  font-weight: bold;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/color.css"/>
      <url>/css/color.css</url>
      
        <content type="html"><![CDATA[:root {  --xingzhi-white: #fff;  --xingzhi-white-op: rgba(255, 255, 255, 0.15);  --xingzhi-black: #000;  --xingzhi-black-op: rgba(0, 0, 0, 0.15);  --xingzhi-none: #00000000;  --xingzhi-gray: #999999;  --xingzhi-gray-op: #9999992b;  --xingzhi-vip: #e5a80d;  --xingzhi-main: var(--xingzhi-theme);  --xingzhi-main-op: var(--xingzhi-theme-op);  --xingzhi-main-op-deep: var(--xingzhi-theme-op-deep);  --xingzhi-main-op-light: var(--xingzhi-theme-op-light);  --xingzhi-main-none: var(--xingzhi-theme-none);  --xingzhi-shadow-theme: 0 8px 12px -3px var(--xingzhi-theme-op);  --xingzhi-shadow-blackdeep: 0 2px 16px -3px rgba(0, 0, 0, 0.15);  --xingzhi-shadow-main: 0 8px 12px -3px var(--xingzhi-main-op);  --xingzhi-shadow-blue: 0 8px 12px -3px rgba(40, 109, 234, 0.2);  --xingzhi-shadow-white: 0 8px 12px -3px rgba(255, 255, 255, 0.2);  --xingzhi-shadow-black: 0 0 12px 4px rgba(0, 0, 0, 0.05);  --xingzhi-shadow-yellow: 0px 38px 77px -26px rgba(255, 201, 62, 0.12);  --xingzhi-shadow-red: 0 8px 12px -3px #ee7d7936;  --xingzhi-shadow-green: 0 8px 12px -3px #87ee7936;  --xingzhi-logo-color: linear-gradient(215deg, #4584ff 0%, #cf0db9 100%);  --xingzhi-snackbar-time: 5s;  --xingzhi-post-cover: var(--xingzhi-theme);}::selection {  background: var(--xingzhi-fontcolor);  color: var(--xingzhi-background);}[data-theme="light"] {  --xingzhi-theme: #425aef;  --xingzhi-theme-op: #4259ef23;  --xingzhi-theme-op-deep: #4259efdd;  --xingzhi-theme-op-light: #4259ef0d;  --xingzhi-theme-none: #4259ef01;  --xingzhi-blue: #425aef;  --xingzhi-red: #f04a63;  --xingzhi-pink: #ff7c7c;  --xingzhi-green: #57bd6a;  --xingzhi-yellow: #936900;  --xingzhi-yellow-op: #d99c001a;  --xingzhi-orange: #e38100;  --xingzhi-purple: #7a60d2;  --xingzhi-fontcolor: #363636;  --xingzhi-background: #f7f9fe;  --xingzhi-reverse: #000;  --xingzhi-maskbg: rgba(255, 255, 255, 0.6);  --xingzhi-maskbgdeep: rgba(255, 255, 255, 0.85);  --xingzhi-hovertext: var(--xingzhi-main);  --xingzhi-ahoverbg: #f7f7fa;  --xingzhi-lighttext: var(--xingzhi-main);  --xingzhi-secondtext: rgba(60, 60, 67, 0.8);  --xingzhi-scrollbar: rgba(60, 60, 67, 0.4);  --xingzhi-card-btn-bg: #edf0f7;  --xingzhi-post-blockquote-bg: #fafcff;  --xingzhi-post-tabs-bg: #f2f5f8;  --xingzhi-secondbg: #f7f7f9;  --xingzhi-shadow-nav: 0 5px 12px -5px rgba(102, 68, 68, 0.05);  --xingzhi-card-bg: #fff;  --xingzhi-card-bg-op: var(--xingzhi-black-op);  --xingzhi-card-bg-none: rgba(255, 255, 255, 0);  --xingzhi-shadow-lightblack: 0 5px 12px -5px rgba(102, 68, 68, 0);  --xingzhi-shadow-light2black: 0 5px 12px -5px rgba(102, 68, 68, 0);  --xingzhi-card-border: #e3e8f7;  --xingzhi-shadow-border: 0 8px 16px -4px #2c2d300c;  --style-border: 1px solid var(--xingzhi-card-border);  --style-border-always: 1px solid var(--xingzhi-card-border);  --style-border-hover: 1px solid var(--xingzhi-main);  --style-border-hover-always: 1px solid var(--xingzhi-main);  --style-border-dashed: 1px dashed var(--xingzhi-theme-op);  --style-border-forever: 2px solid var(--xingzhi-main);}[data-theme="dark"] {  --xingzhi-theme: #ffc848;  --xingzhi-theme-op: #f2b94b23;  --xingzhi-theme-op-deep: #f2b94bdd;  --xingzhi-theme-none: #f2b94b00;  --xingzhi-blue: #0084ff;  --xingzhi-red: #ff3842;  --xingzhi-pink: #d44040;  --xingzhi-green: #3e9f50;  --xingzhi-purple: #7a60d2;  --xingzhi-yellow: #ffc93e;  --xingzhi-yellow-op: #ffc93e30;  --xingzhi-orange: #ff953e;  --xingzhi-fontcolor: #f7f7fa;  --xingzhi-background: #18171d;  --xingzhi-reverse: #fff;  --xingzhi-maskbg: rgba(0, 0, 0, 0.6);  --xingzhi-maskbgdeep: rgba(0, 0, 0, 0.85);  --xingzhi-hovertext: #0a84ff;  --xingzhi-ahoverbg: #fff;  --xingzhi-lighttext: var(--xingzhi-theme);  --xingzhi-secondtext: #a1a2b8;  --xingzhi-scrollbar: rgba(200, 200, 223, 0.4);  --xingzhi-card-btn-bg: #30343f;  --xingzhi-post-blockquote-bg: #000;  --xingzhi-post-tabs-bg: #121212;  --xingzhi-secondbg: #21232a;  --xingzhi-shadow-nav: 0 5px 20px 0px rgba(28, 28, 28, 0.4);  --xingzhi-card-bg: #1b1c20;  --xingzhi-card-bg-op: var(--xingzhi-white-op);  --xingzhi-card-bg-none: #1d1b2600;  --xingzhi-shadow-lightblack: 0 5px 12px -5px rgba(102, 68, 68, 0);  --xingzhi-shadow-light2black: 0 5px 12px -5px rgba(102, 68, 68, 0);  --xingzhi-card-border: #3d3d3f;  --xingzhi-shadow-border: 0 8px 16px -4px #00000050;  --style-border: 1px solid var(--xingzhi-card-border);  --style-border-always: 1px solid var(--xingzhi-card-border);  --style-border-hover: 1px solid var(--xingzhi-theme);  --style-border-hover-always: 1px solid var(--xingzhi-theme);  --style-border-dashed: 1px dashed var(--xingzhi-theme-op);  --style-border-forever: 2px solid var(--xingzhi-lighttext);}@media screen and (max-width: 768px) {  :root {    --style-border: 1px solid var(--xingzhi-none);    --style-border-hover: 1px solid var(--xingzhi-none);  }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/console.css"/>
      <url>/css/console.css</url>
      
        <content type="html"><![CDATA[#console.show {  opacity: 1;  pointer-events: all;}#console {  display: flex;  position: fixed;  width: 100vw;  height: 100vh;  top: 0;  left: 0;  z-index: 9999;  justify-content: center;  opacity: 0;  transition: 0.3s ease-out;  flex-direction: column;  align-items: center;  pointer-events: none;  -webkit-user-select: none;}#console .close-btn {  width: 100%;  height: 60px;  position: fixed;  right: max(0, calc((100% - 1400px) / 2));  top: 0;  font-size: 35px;  color: var(--xingzhi-fontcolor);  cursor: pointer;  transition: 0.3s;  display: flex;  align-items: center;  justify-content: center;  max-width: 1400px;}#console.show .close-btn i {  transform: rotate(0);}#console .close-btn i {  font-size: 32px;  margin-right: 1.5rem;  margin-left: auto;  transition: 0.3s;  line-height: 1;  transform: rotate(-30deg);  transition: 0.6s;}#console .button-group {  display: flex;  margin: 1rem auto 0 auto;  justify-content: center;  width: fit-content;}#console .button-group .console-btn-item:not(:last-child) {  margin-right: 0.5rem;}#console .button-group .console-btn-item {  width: 60px;  height: 60px;  transition: 0.3s;  cursor: pointer;}#console .button-group .console-btn-item a {  width: 100%;  height: 100%;  background: var(--xingzhi-card-bg);  border: var(--style-border);  border-radius: 60px;  display: flex;  align-items: center;  justify-content: center;  color: var(--xingzhi-fontcolor);}a.darkmode_switchbutton {  padding: 4px 8px !important;  cursor: pointer;  margin: 0 !important;  font-size: 0.9rem;  color: var(--xingzhi-fontcolor);}#console .button-group .console-btn-item a i {  font-size: 24px;}#console.show .console-mask {  backdrop-filter: saturate(180%) blur(20px);  -webkit-backdrop-filter: blur(20px);  transform: translateZ(0);  animation: 0.6s ease 0s 1 normal none running to_show;}#console .console-mask {  background: var(--xingzhi-maskbgdeep);  backdrop-filter: saturate(180%) blur(20px);  -webkit-backdrop-filter: blur(20px);  width: 100vw;  height: 100vh;  top: 0;  left: 0;  position: absolute;  z-index: -1;  -webkit-backface-visibility: hidden;  -webkit-transform-style: preserve-3d;  transform: translateZ(0);}#console .button-group .console-btn-item:hover a {  color: var(--xingzhi-white);  background: var(--xingzhi-main);}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[#web_bg {  width: 100%;  height: 100%;  top: 0;  left: 0;  opacity: 1;  position: fixed;  z-index: -999;  background: var(--xingzhi-background);}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/data-theme.css"/>
      <url>/css/data-theme.css</url>
      
        <content type="html"><![CDATA[/* [data-theme="dark"] .pace-done {  background-color: #18171d;} */[data-theme="dark"] img {  filter: brightness(1);}[data-theme="dark"] #page-header.not-top-img #nav .darkmode_switchbutton {  color: var(--xingzhi-yellow);}[data-theme="dark"] a.darkmode_switchbutton {  background: var(--xingzhi-orange) !important;  color: var(--xingzhi-white) !important;}@media screen and (min-width: 1300px) {  [data-theme="dark"] #aside-content > .card-widget.card-info {    border: var(--style-border);  }  [data-theme="dark"] #aside-content .card-info .card-info-social-icons i {    color: var(--xingzhi-white);  }  [data-theme="dark"]    .page    #aside-content    .card-info    .card-info-social-icons    i {    color: var(--xingzhi-card-bg);  }}[data-theme="dark"] a.categoryButton.bikan {  background: linear-gradient(to right, #0653b8, #2fcbff);  background-size: 200%;}[data-theme="dark"] a.categoryButton.remen {  background: linear-gradient(to right, #e22a16, #da980c);  background-size: 200%;}[data-theme="dark"] a.categoryButton.shiyong {  background: linear-gradient(to right, #099e74, #0ea4a4);  background-size: 200%;}[data-theme="dark"].toc .toc-item.active .toc-link .toc-text {  color: var(--xingzhi-white);}[data-theme="dark"] .page div#author-info__sayhi {  background: var(--xingzhi-black-op);  color: var(--xingzhi-black);}[data-theme="light"] #aside-content .card-info a img {  filter: drop-shadow(-5px 14px 8px #ffffff08);}[data-theme="dark"] .page #aside-content .card-info .card-info-social-icons i {  background: var(--xingzhi-black-op);  color: var(--xingzhi-card-bg);}[data-theme=dark] .tk-tag-green {    background-color:#c0c23a21 !important;}[data-theme=dark] .tk-tag-red {    background-color:#c23a3a21 !important;}/* [data-theme=dark] .author-content-item.map {    background: url(https://bu.dusays.com/2023/03/12/640dc8713d98a.webp) no-repeat center;    background-size:100%} */]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/essay.css"/>
      <url>/css/essay.css</url>
      
        <content type="html"><![CDATA[#bbTimeList {  background: var(--xingzhi-card-bg);  color: var(--xingzhi-fontcolor);  padding: 0.5rem 1rem;  border-radius: 12px;  box-shadow: var(--xingzhi-shadow-lightblack);  display: flex;  transition: 0.3s;  margin-bottom: 1rem;  border: var(--style-border);  align-items: center;  height: 50px;  -webkit-user-select: none;}@media screen and (min-width: 1300px) {  #bbTimeList {    margin-bottom: 1rem;    animation: slide-in 0.6s 0s backwards;  }  #page > div:not(.author-content-item) {    animation: slide-in 0.6s 0.2s backwards;  }}@media screen and (min-width: 768px) {  #bbTimeList:hover {    border: var(--style-border-hover);    box-shadow: var(--xingzhi-shadow-main);    background: var(--xingzhi-card-bg);  }}@media screen and (max-width: 768px) {  #bbTimeList {    margin-bottom: 0;  }  #bbTimeList {    margin-bottom: 0;  }  #bbTimeList {    margin-top: 0;    border-radius: 0;    background: var(--xingzhi-background);    padding: 0.5rem 20px;  }}#bbtalk {  overflow: hidden;  width: 100%;  overflow: hidden;  text-overflow: ellipsis;  white-space: nowrap;}#bber-talk {  width: 100%;  height: 25px;  line-height: 25px;  display: flex;  flex-direction: column;}#bber-talk .li-style {  width: auto;  max-width: 100%;  height: 25px;  text-align: center;  overflow: hidden;  text-overflow: ellipsis;  transition: 0.3s;  font-weight: 700;  margin: auto;  cursor: pointer;  white-space: nowrap;}.swiper-slide {  flex-shrink: 0;  width: 100%;  height: 100%;  position: relative;  transition-property: transform;}.swiper-cube .swiper-slide-active,.swiper-cube .swiper-slide-next,.swiper-cube .swiper-slide-next + .swiper-slide,.swiper-cube .swiper-slide-prev {  pointer-events: auto;  visibility: visible;}.swiper-flip .swiper-slide-active,.swiper-flip .swiper-slide-active .swiper-slide-active {  pointer-events: auto;}.bber-gotobb:hover {  opacity: 0.8;  color: var(--xingzhi-theme);}.bber-gotobb {  line-height: 25px;  margin-left: 1rem;  transition: 0.3s;  cursor: pointer;}.author-content.author-content-item.essayPage {  height: 23rem;  background: url(https://img.hoshinagi.top/bbtime/cover.webp) no-repeat center;  background-size: cover;  color: var(--xingzhi-white);  overflow: hidden;  margin-top: 0;}.author-content-item.single {  width: 100%;}@media screen and (min-width: 1300px) {  .author-content-item {    animation: slide-in 0.6s 0s backwards;  }  #page > div:not(.author-content-item) {    animation: slide-in 0.6s 0.2s backwards;  }}#bber {  margin-top: 1rem;  width: 100%;}#bber .timeline #waterfall.show {  opacity: 1;}#bber .timeline #waterfall {  opacity: 0;  transition: 0.3s;}#bber ul.list {  display: flex;  flex-direction: row;  flex-wrap: wrap;  justify-content: space-between;}#bber .timeline ul li.item {  position: relative;  width: 32%;  border: var(--style-border-always);  border-radius: 12px;  padding: 1rem;  padding-bottom: 0.5rem;  transition: 0.3s;  display: flex;  flex-direction: column;  flex-wrap: nowrap;  justify-content: space-between;  align-items: flex-start;  background: var(--xingzhi-card-bg);  box-shadow: var(--xingzhi-shadow-border);  margin-right: 2%;}#bber > section > ul > li.item {  margin-bottom: 1rem;}#bber div.bber-content {  display: flex;  flex-direction: initial;  flex-wrap: wrap;  border-radius: 12px;  width: 100%;  height: 100%;}#bber .timeline ul li.item hr {  display: flex;  position: relative;  margin: 8px 0;  border: 1px dashed var(--xingzhi-theme-op);  width: 100%;}#bber .bber-bottom {  display: flex;  justify-content: space-between;  width: 100%;  -webkit-user-select: none;}#bber .bber-content .datacont {  order: 0;  font-size: 1rem;  font-weight: 700;  color: var(--xingzhi-fontcolor);  width: 100%;  line-height: 1.38;  border-radius: 12px;  margin-bottom: 0.5rem;  display: flex;  flex-direction: column;  text-align: left;}#bber p {  margin: 0;}#bber .bber-content-img {  height: 100px;  margin: auto;  margin-top: 0.2rem;  margin-bottom: 0.3rem;  margin-left: 0;  border-radius: 12px;  overflow: hidden;  display: flex;  position: relative;}#bber .bber-content-img img {  object-fit: cover;  max-height: 100%;  border-radius: 12px;  min-height: 100px;  height: 100px;}#bber-tips {  font-size: 14px;  display: flex;  justify-content: center;  margin-top: 1rem;}#bber .bber-info {  display: flex;  align-items: center;}#bber .timeline ul li.item:hover {  border: var(--style-border-hover);}#bber > section > ul > li > div .bber-info-time {  color: var(--xingzhi-fontcolor);  font-size: 0.7rem;  background-color: var(--xingzhi-gray-op);  padding: 0 8px;  border-radius: 20px;  cursor: default;  display: flex;  align-items: center;}#bber > section > ul > li > div .bber-info-time i {  margin-right: 8px;  font-size: 16px;}#bber .bber-reply {  cursor: pointer;  margin: 0 4px;}#bber .bber-content-link {  display: flex;  margin-left: 0.5rem;  color: var(--xingzhi-secondtext);  font-size: 0.7rem;  align-items: center;  background-color: rgba(245, 108, 108, 0.13);  color: #f56c6c;  padding: 0 8px;  border-radius: 20px;}#bber .bber-content-link i {  margin-right: 3px;  font-size: 16px;}.bber-gotobb:hover {  opacity: 0.8;  color: var(--xingzhi-theme);}i.bber-gotobb {  font-size: 16px;}.icon-bblogo {  font-size: 2rem;  line-height: 22px;  margin-right: 1rem;  transition: 0.3s;  cursor: pointer;}.bbTimeList .bb-title {  font-weight: bolder;  text-align: start;  font-size: 1rem;  width: 3rem;}@media screen and (max-width: 768px) {  #bber .timeline ul li.item {    padding: 16px 20px;    width: 100%;    margin-right: 0;  }  #essay_page .author-content-item .card-content .banner-button-group {    right: 1rem;    bottom: 1rem;  }  #essay_page    .author-content-item    .card-content    .banner-button-group    .banner-button {    background: 0 0;    color: var(--xingzhi-white);    padding: 0;    width: fit-content;  }  .author-content-item .card-content .banner-button-group .banner-button-text {    display: none;  }  #essay_page    .author-content-item    .card-content    .banner-button-group    .banner-button    i {    margin-right: 0 !important;    font-size: 1.5rem;  }}#essay_page .author-content-item .card-content .banner-button-group .banner-button:hover {  background: var(--xingzhi-lighttext);  color: var(--xingzhi-card-bg);}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/footer.css"/>
      <url>/css/footer.css</url>
      
        <content type="html"><![CDATA[#footer {  background: linear-gradient(    180deg,    var(--xingzhi-card-bg-none) 0,    var(--xingzhi-card-bg) 25%  );  margin-top: 0.5rem;  display: flex;  flex-direction: column;  position: relative;}#footer::before {  position: absolute !important;  width: 100% !important;  height: 100% !important;  content: "" !important;  z-index: -1;}div#footer_deal {  justify-content: center;  display: flex;  padding-top: 2rem;  align-items: center;}a.deal_link {  display: flex;  margin: 1rem 27px;  color: var(--xingzhi-card-bg);  border-radius: 3rem;  width: 32px;  height: 32px;  background: var(--xingzhi-fontcolor);  justify-content: center;  align-items: center;  transition: 0.3s;}#footer_deal i {  font-size: 1.2rem;  line-height: 1.2rem;  height: 1.2rem;}.footer_mini_logo {  width: 50px;  height: 50px;  margin: 0 1rem;  cursor: pointer;  transition: cubic-bezier(0, 0, 0, 1.29) 0.5s;  user-select: none;  border-radius: 50px;  overflow: hidden;}a.deal_link:hover {  color: var(--xingzhi-card-bg);  background: var(--xingzhi-lighttext);  transform: scale(1.1);}#footer-bar {  padding: 1rem;  color: var(--xingzhi-fontcolor);  margin-top: 1rem;  background: var(--xingzhi-secondbg);  display: flex;  overflow: hidden;  z-index: 1002;  transition: 0.3s;  border-top: var(--style-border-always);}#footer-bar .footer-bar-links {  display: flex;  justify-content: space-between;  max-width: 1400px;  width: 100%;  margin: 0 auto;  flex-wrap: wrap;  align-items: center;  line-height: 1;}#footer-bar .footer-bar-left {  display: flex;  flex-wrap: wrap;  min-height: 32px;  align-items: center;}#footer-bar .footer-bar-link {  margin-top: 8px;  margin-bottom: 8px;  margin-right: 1rem;  color: var(--xingzhi-fontcolor);  font-size: 1rem;  font-weight: 700;  white-space: nowrap;}#footer-bar .footer-bar-link:hover {  color: var(--xingzhi-theme);}.footer-bar-right {  display: flex;  flex-direction: row;  flex-wrap: wrap;  align-items: center;}#footer-bar .footer-bar-link {  margin-top: 8px;  margin-bottom: 8px;  margin-right: 1rem;  color: var(--xingzhi-fontcolor);  font-size: 0.8rem;  font-weight: 700;  white-space: nowrap;}#footer-bar .footer-bar-link.cc {  margin-right: 0;}#footer-bar .footer-bar-link.cc i {  margin-right: 0.5rem;  font-size: 18px;}#footer-bar .footer-bar-right a:hover {  color: var(--xingzhi-lighttext);}@media screen and (min-width: 768px) {  .needEndHide.hide {    bottom: -200px !important;    opacity: 0;  }}.comment-barrage {  position: fixed;  bottom: 0px;  right: 20px;  padding-top: 0px;  padding-right: 0px;  padding-bottom: 20px;  padding-left: 10px;  display: flex;  flex-direction: column;  justify-content: end;  align-items: flex-end;  z-index: 999;  transition-duration: 0.3s;  transition-timing-function: ease;  transition-delay: 0s;  transition-property: all;  user-select: none;}#xingzhi-footer {  display: flex;  flex-direction: row;  width: 100%;  max-width: 1200px;  margin: 1rem auto;  justify-content: space-between;  flex-wrap: wrap;  margin-bottom: 3rem;  padding: 0 1rem;}#xingzhi-footer .footer-group {  min-width: 120px;}#xingzhi-footer .footer-title {  color: var(--xingzhi-secondtext);  font-size: 1.2rem;}#xingzhi-footer .footer-links {  display: flex;  flex-direction: column;}#xingzhi-footer .footer-item {  font-size: 1rem;  line-height: 1rem;  margin: 8px 0;  color: var(--xingzhi-fontcolor);  margin-right: auto;  overflow: hidden;  white-space: nowrap;  text-overflow: ellipsis;  max-width: 120px;  cursor: pointer;  padding: 2px 0;}#xingzhi-footer .footer-item:hover {  color: var(--xingzhi-main);}@media screen and (max-width: 768px) {  .footer_mini_logo {    display: none;  }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/header_nav.css"/>
      <url>/css/header_nav.css</url>
      
        <content type="html"><![CDATA[#page-header.not-top-img {  margin-bottom: 0;}#page-header {  background-image: none !important;  display: flex;  justify-content: center;}#page-header.not-top-img:not(.nav-fixed) #nav {  background: var(--xingzhi-none);  transition: 0.3s;}#page-header.not-top-img #nav {  transition: 0.3s;  background: var(--xingzhi-card-bg);}#page-header.nav-fixed > #nav,#page-header.not-top-img > #nav {  box-shadow: none;}#page-header #nav {  box-shadow: none;  transition: 0.3s;  display: flex;  justify-content: center;  z-index: 1000 !important;  -webkit-user-select: none;}#nav.show {  top: 0;  transition: 0.2s;  position: fixed;  z-index: 91;}#nav.show {  opacity: 1;  filter: none;}#nav {  padding: 0;  flex-wrap: nowrap;}#nav {  position: absolute;  top: 0;  z-index: 90;  display: flex;  flex-wrap: wrap;  -webkit-box-align: center;  align-items: center;  padding: 0 36px;  width: 100%;  height: 60px;  font-size: 1.3em;  opacity: 0;  transition: all 0.5s ease 0s;  outline: 1px solid var(--xingzhi-none);}#page-header.not-top-img:not(.nav-fixed) #nav {  background: var(--xingzhi-none);  transition: 0.3s;}#page-header.not-top-img #nav {  transition: 0.3s;  background: var(--xingzhi-card-bg);}#page-header.nav-fixed > #nav,#page-header.not-top-img > #nav {  box-shadow: none;}#page-header #nav #nav-group {  max-width: 1400px;  width: 100%;  display: flex;  position: relative;  /* padding: 0 1.5rem; */  align-items: center;}.page #nav a {  color: var(--xingzhi-fontcolor);}#nav a {  border-radius: 8px;  padding: 0.3rem 0.4rem;}#nav #blog_name {  flex-wrap: nowrap;  height: 60px;  display: flex;  align-items: center;  z-index: 102;  transition: 0.3s;}.page .back-home-button {  color: var(--xingzhi-fontcolor);}.back-home-button {  display: flex;  width: 35px;  height: 35px;  padding: 0 !important;  align-items: center;  justify-content: center;  margin-right: 15px;  transition: 0.3s;  border-radius: 8px;  color: var(--xingzhi-white);  border-radius: 40px;}#page-header.not-top-img #nav .back-home-button i {  font-size: 20px;}i.xingzhifont {  font-size: 22px;  line-height: 1;}.page #nav #site-name {  color: var(--xingzhi-white);  position: relative;  display: flex;}@media screen and (min-width: 900px) {  #page-name-mask {    width: 100%;    height: 100%;    position: absolute;    overflow: hidden;    left: 0;  }  #page-name {    align-items: center;    display: flex;    border-radius: 12px;    height: 40px;    position: absolute;    top: 62px;    left: 0;    right: 0;    margin: auto;    justify-content: center;    animation-timing-function: ease-out;    -webkit-animation-timing-function: ease-out;  }  #nav #page-name-text {    display: inline;    font-weight: 700;    padding: 4px 8px;    opacity: 0;    transition: 0.1s;    text-overflow: ellipsis;    overflow: hidden;    white-space: nowrap;    position: relative;    text-align: center;    cursor: pointer;    top: 0;    /* font-size: 0.9rem; */    animation-timing-function: ease-in;    -webkit-animation-timing-function: ease-in;  }  #page-header.nav-fixed #nav #page-name-text {    display: inline;    opacity: 1;    transition: 0.3s;    line-height: 1;  }  #nav #page-name-text:hover {    color: var(--xingzhi-lighttext) !important;    background: var(--xingzhi-none);    box-shadow: none;  }}#nav #menus {  display: flex;  justify-content: center;  width: 100%;  position: absolute;  height: 60px;  left: 0;  margin: 0;  transform: translateZ(0);}#nav .menus_items {  position: relative;  width: fit-content;  text-align: center;  left: 0;  right: 0;  top: 0;  display: flex;  flex-direction: row;  justify-content: center;}#nav .menus_items .menus_item {  padding: 0 0.4rem;  display: flex;  flex-direction: column;  align-items: center;  margin: auto;  position: relative;}#menus > div.menus_items > div > a {  letter-spacing: 0.3rem;  font-weight: 700;  padding: 0 0.8em 0 1em;  height: 35px;  line-height: 35px;  -webkit-transition: color 0s !important;  -moz-transition: color 0s !important;  -o-transition: color 0s !important;  -ms-transition: color 0s !important;  transition: color 0s !important;}#menus > div.menus_items > div > a {  letter-spacing: 0.3rem;  padding-left: 0.7rem;  font-weight: 700;  padding-top: 0;  padding-bottom: 0;  height: 35px;  line-height: 35px;  border-radius: 40px;}#nav .site-page {  position: relative;  /* padding-bottom: 6px; */  font-size: 0.85em;  cursor: pointer;}#nav .site-page {  text-shadow: 0.05rem 0.05rem 0.1rem transparent;  border-radius: 8px;}#nav .menus_items .menus_item i.expand {  display: none;}#nav .menus_items .menus_item i.expand {  padding: 4px;  transition: transform 0.3s ease 0s;}#page-header #nav #nav-right {  position: absolute;  right: 0;  z-index: 102;  display: flex;  flex-direction: row;  height: 100%;  align-items: center;  overflow: hidden;  margin-right: 0.5rem;}#page-header #nav #nav-right > div {  margin-left: 0.64rem;  padding: 0;}.nav-button {  cursor: pointer;}#blog_name #site-name .title {  -webkit-transition: 0.3s;  -moz-transition: 0.3s;  -o-transition: 0.3s;  -ms-transition: 0.3s;  transition: 0.3s;  letter-spacing: normal;  font-size: 1.2rem;  padding: 0 5px;  line-height: 2rem;  -webkit-transition: color 0s;  -moz-transition: color 0s;  -o-transition: color 0s;  -ms-transition: color 0s;  transition: color 0s;}#nav #blog_name a,#nav #menus a,#nav #nav-right #toggle-menu a,#nav #nav-right .nav-button a,#nav .mask-name-container a {  border-radius: 50px;}#site-name {  padding: 0 2px;  height: 35px;  line-height: 35px;  position: relative;  display: -webkit-box;  display: -moz-box;  display: -webkit-flex;  display: -ms-flexbox;  display: box;  display: flex;  -webkit-box-align: center;  -moz-box-align: center;  -o-box-align: center;  -ms-flex-align: center;  -webkit-align-items: center;  align-items: center;  -webkit-box-pack: center;  -moz-box-pack: center;  -o-box-pack: center;  -ms-flex-pack: center;  -webkit-justify-content: center;  justify-content: center;  -webkit-transition: 0.3s;  -moz-transition: 0.3s;  -o-transition: 0.3s;  -ms-transition: 0.3s;  transition: 0.3s;}#blog_name #site-name i {  position: absolute;  -webkit-transition: 0.3s;  -moz-transition: 0.3s;  -o-transition: 0.3s;  -ms-transition: 0.3s;  transition: 0.3s;  font-size: 1rem;  opacity: 0;  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";  filter: alpha(opacity=0);}#page-header.not-top-img #nav #blog_name #site-name:hover,#page-header.not-top-img #nav #blog_name .back-home-button:hover,#page-header.not-top-img #nav #nav-right #toggle-menu:hover,#page-header.not-top-img #nav #nav-right .nav-button a:hover {  color: var(--xingzhi-white);  background: var(--xingzhi-main);  -webkit-box-shadow: var(--xingzhi-shadow-main);  box-shadow: var(--xingzhi-shadow-main);}#blog_name #site-name:hover .title {  opacity: 0;  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";  filter: alpha(opacity=0);}#blog_name #site-name:hover i {  color: #fff;  opacity: 1;  -ms-filter: none;  filter: none;}#nav i {  font-size: 1.2rem;  font-weight: 700;}.page #menus > div.menus_items > .menus_item:hover > a {  color: var(--xingzhi-card-bg);}.page #nav a:hover {  color: var(--xingzhi-card-bg);  background: var(--xingzhi-lighttext);  transition: 0.3s;  box-shadow: var(--xingzhi-shadow-main);}#nav .site-page:hover {  color: var(--xingzhi-white);}#page-header #nav .nav-button a {  height: 35px;  width: 35px;  display: -webkit-box;  display: -moz-box;  display: -webkit-flex;  display: -ms-flexbox;  display: box;  display: flex;  -webkit-box-align: center;  -moz-box-align: center;  -o-box-align: center;  -ms-flex-align: center;  -webkit-align-items: center;  align-items: center;  -webkit-box-pack: center;  -moz-box-pack: center;  -o-box-pack: center;  -ms-flex-pack: center;  -webkit-justify-content: center;  justify-content: center;  -webkit-transition: background 0.3s ease-in-out, color 0s ease-in-out;  -moz-transition: background 0.3s ease-in-out, color 0s ease-in-out;  -o-transition: background 0.3s ease-in-out, color 0s ease-in-out;  -ms-transition: background 0.3s ease-in-out, color 0s ease-in-out;  transition: background 0.3s ease-in-out, color 0s ease-in-out;}#page-header #nav #nav-left .nav-button a i,#page-header #nav #nav-right .nav-button a i {  line-height: 1;  -webkit-transition: 0.3s;  -moz-transition: 0.3s;  -o-transition: 0.3s;  -ms-transition: 0.3s;  transition: 0.3s;}#page-header:not(.nav-fixed) #nav-totop {  width: 0;  transform: scale(0);  transition: 0.3s;  margin-left: 0 !important;  overflow: hidden;  transition: 0.3s ease-in;}#nav-totop {  position: relative;  width: 35px;  height: 35px;  transition: 0.3s;  display: flex;  border-radius: 40px;  transition: all 0.3s ease-in-out;  align-items: center;}#page-header #nav #nav-right .nav-button a.totopbtn {  width: 25px;  height: 25px;  border-radius: 40px;  background: var(--xingzhi-fontcolor);  color: var(--xingzhi-card-bg);  position: absolute;  top: 5px;  right: 5px;  transition: 0.3s;}#page-header #nav #nav-left .nav-button a i,#page-header #nav #nav-right .nav-button a i {  line-height: 1;  font-size: 22px;}#page-header:not(.nav-fixed) #percent {  transition: 0.3s;}.nav-fixed #nav-totop #percent,.page #nav-totop #percent {  font-size: 12px;  border-radius: 35px;  display: flex;  justify-content: center;  align-items: center;  transition: 0.3s;  white-space: nowrap;}#nav-totop #percent {  font-size: 12px;  border-radius: 35px;  display: flex;  justify-content: center;  align-items: center;  transition: 0.3s;  white-space: nowrap;}#page-header.nav-fixed #nav {  position: fixed;  top: 0;  z-index: 91;  transition: 0.3s;}#page-header.nav-fixed #nav #site-name,#page-header.nav-fixed #nav #toggle-menu,#page-header.nav-fixed #nav a {  text-shadow: none;}#page-header.nav-fixed > #nav,#page-header.not-top-img > #nav {  box-shadow: none;}.nav-fixed #nav a {  color: var(--xingzhi-fontcolor);  transition: 0.3s;}#page-header.nav-fixed #nav {  top: 0;  box-shadow: none;  background: var(--xingzhi-card-bg);  outline: 1px solid var(--xingzhi-card-border);}#page-header.not-top-img:not(.nav-fixed) #nav {  background: var(--xingzhi-none);  transition: 0.3s;}@media screen and (max-width: 768px) {  #page-header.not-top-img:not(.nav-fixed) #nav {    transition: 0s;  }}#page-header.nav-fixed #nav #menus > div.menus_items {  transition: 0.3s;  height: 40px;  margin: auto 0;}.nav-fixed #nav-totop #percent,.page #nav-totop #percent {  font-size: 12px;  border-radius: 35px;  display: flex;  justify-content: center;  align-items: center;  transition: 0.3s;  white-space: nowrap;}#page-header:not(.nav-fixed) #percent {  transition: 0.3s;}#page-header:not(.nav-fixed) #nav-totop {  width: 0;  transform: scale(0);  transition: 0.3s;  margin-left: 0 !important;  overflow: hidden;  transition: 0.3s ease-in;}.nav-fixed #nav .back-home-button {  color: var(--xingzhi-fontcolor);}.nav-fixed .back-home-button:hover {  background: var(--xingzhi-lighttext);  color: var(--xingzhi-white);}.nav-fixed #nav #site-name:hover {  background: var(--xingzhi-lighttext);  color: var(--xingzhi-card-bg);}#page-header.nav-fixed #nav #page-name-text {  display: inline;  opacity: 1;  transition: 0.3s;  line-height: 1;}#page-header.nav-fixed #nav #page-name-text:hover:after {  opacity: 1;  line-height: 36px;}#page-header.nav-fixed #nav div.menus_items {  transition: 0.15s;  position: relative;  top: -60px;}#page-header.nav-fixed.nav-visible #nav #page-name-text {  display: inline;  transition: 0.15s;}#page-header.nav-fixed.nav-visible #nav div.menus_items {  opacity: 1;  transition: 0.15s;  position: relative;  top: 0;}#page-header.nav-fixed.nav-visible #nav #menus {  z-index: 101;}#page-header.nav-fixed.nav-visible #page-name {  z-index: 100;  top: 60px;  transition: 0.3s;}#page-header.nav-fixed #nav #menus {  z-index: 100;}#page-header.nav-fixed #page-name {  z-index: 101;  transition: 0.3s;  top: 10px;}.nav-fixed #nav a:hover {  background: var(--xingzhi-lighttext);  color: var(--xingzhi-card-bg);  transition: 0.3s;}@media screen and (min-width: 768px) {  .menus_item:hover > a.site-page {    color: var(--xingzhi-card-bg);    background: var(--xingzhi-white-op);    transition: 0.3s;    box-shadow: var(--xingzhi-shadow-main);  }  .page .menus_item:hover > a.site-page {    color: var(--xingzhi-card-bg);    background: var(--xingzhi-main);    transition: 0.3s;    box-shadow: var(--xingzhi-shadow-main);  }  .post .menus_item:hover > a.site-page {    color: var(--xingzhi-white);  }  .nav-fixed .menus_item:hover > a.site-page {    background-color: var(--xingzhi-lighttext);  }}@media screen and (max-width: 768px) {  #sidebar #sidebar-menus .menus_items li .site-page:hover {    background: var(--xingzhi-main);    color: var(--xingzhi-white);  }  #sidebar #sidebar-menus .menus_items li .site-page span:hover {    color: var(--xingzhi-white);  }  #nav #site-name i {    color: var(--xingzhi-white);    transition: 0.1s;  }  .error #nav #site-name i {    color: var(--xingzhi-fontcolor);  }  .nav-fixed #nav #site-name i {    color: var(--xingzhi-fontcolor);    transition: 0.3s;  }  .page #nav #site-name i {    color: var(--xingzhi-fontcolor);  }  #nav a:hover {    background: var(--xingzhi-none) !important;    box-shadow: none !important;    transition: 0.3s;    color: var(--xingzhi-fontcolor);  }  #page-header.not-top-img #nav a:hover {    color: var(--xingzhi-fontcolor);  }}.nav-fixed #nav #site-name i {  color: var(--xingzhi-fontcolor);}#page-header.nav-fixed  #nav  #menus[style*="padding-right: 300px;"]  .menus_items {  transform: translateX(-150px);}@media screen and (max-width: 768px) {  #page-header.nav-fixed #travellings_button {    opacity: 0;  }}.nav-fixed #nav .site-page {  color: var(--xingzhi-fontcolor);}.nav-fixed #nav .menus_item:hover .site-page {  color: var(--xingzhi-card-bg);}.nav-fixed #nav .menus_item:hover li .site-page {  color: var(--xingzhi-fontcolor);}#page-header.nav-fixed #nav #menus > div.menus_items {  transition: 0.3s;  height: 40px;  margin: auto 0;}@media screen and (min-width: 900px) {  #page-header.nav-fixed #nav div.menus_items {    transition: 0.15s;    position: relative;    top: -60px;  }  #page-header.nav-fixed #nav #menus {    z-index: 100;  }  #nav .back-home-button:hover {    box-shadow: var(--xingzhi-shadow-main);    color: var(--xingzhi-card-bg);  }}#nav-totop .totopbtn i {  position: absolute;  display: flex;  font-size: 0.8rem;  opacity: 0;  line-height: 1;  font-size: 22px;}.nav-fixed #nav-totop #percent,.page #nav-totop #percent {  font-size: 12px;  border-radius: 35px;  display: flex;  justify-content: center;  align-items: center;  transition: 0.3s;  white-space: nowrap;}#page-header #nav #nav-right .nav-button:not(.long):hover a.totopbtn {  width: 35px;  height: 35px;  top: 0;  right: 0;}#page-header #nav #nav-right .nav-button:hover a.totopbtn {  background: var(--xingzhi-lighttext);}#nav-totop:hover .totopbtn i {  opacity: 1;  color: var(--xingzhi-card-bg);  transition: 0.3s;}#nav-totop:hover #percent {  opacity: 0;  font-weight: 700;}.nav-button {  cursor: pointer;}#nav-totop.long {  width: 80px;}#page-header #nav #nav-right .nav-button.long a.totopbtn {  width: 70px;}#nav {  font-size: 1.3em;}#nav .site-page {  font-size: 0.78em;}li,ul {  list-style: none;  display: block;  margin: 0;  padding: 0;}#nav .menus_items .menus_item .menus_item_child {  padding: 6px 4px 8px 4px;  border-radius: 100px;  background-color: var(--xingzhi-maskbgdeep);  box-shadow: var(--xingzhi-shadow-black);  border: var(--style-border);  transition: 0.3s;  backdrop-filter: blur(20px);  -webkit-backdrop-filter: blur(20px);  top: 35px;  position: absolute;  margin-top: 8px;  white-space: nowrap;  opacity: 0;  pointer-events: none;  transform: translateY(-10px) scale(0.8);}#nav .menus_items .menus_item:hover .menus_item_child {  border: var(--style-border-hover);  box-shadow: var(--xingzhi-shadow-main);  opacity: 1;  pointer-events: all;  transform: translateY(0) scale(1);  display: block;}#nav .menus_items .menus_item .menus_item_child:before {  top: -10px;}#nav .menus_items .menus_item .menus_item_child::before {  position: absolute;  top: -8px;  left: 0;  width: 100%;  height: 20px;  content: "";}#nav .menus_items .menus_item:first-child .menus_item_child::after {  position: absolute;  top: -60px;  left: 0;  width: 50%;  height: 60px;  content: "";}#nav .menus_items .menus_item:last-child .menus_item_child::after {  position: absolute;  top: -60px;  right: 0;  width: 50%;  height: 60px;  content: "";}#nav .menus_items .menus_item .menus_item_child li {  display: inline-flex;  list-style: none;  border-radius: 5px;  margin: 0 4px;}#nav .menus_items .menus_item .menus_item_child li a {  letter-spacing: 0;  display: flex;  align-items: center;  border-radius: 100px;  padding: 0.3rem 0.8rem;  width: 100%;  color: var(--xingzhi-fontcolor);  text-shadow: none;}#nav .site-page {  position: relative;  padding-bottom: 0.3rem;  text-shadow: rgba(0, 0, 0, 0.3) 0.05rem 0.05rem 0.1rem;  cursor: pointer;}#nav a {  transition: 0.3s;}#nav .menus_items .menus_item:hover .menus_item_child {  border: var(--style-border-hover);  box-shadow: var(--xingzhi-shadow-main);  opacity: 1;  pointer-events: all;  transform: translateY(0) scale(1);}#nav .menus_items .menus_item:hover .menus_item_child {  display: block;  opacity: 1;  pointer-events: auto;  transform: translateY(0);}#nav .menus_items .menus_item .menus_item_child li a:hover {  background: var(--xingzhi-lighttext);  color: var(--xingzhi-card-bg);  box-shadow: var(--xingzhi-shadow-main);  margin: 0 auto;  transform: scale(1);  padding: 0.3rem 1rem;}@media screen and (min-width: 768px) {  .menus_item:hover > a.site-page {    color: var(--xingzhi-card-bg);    background: var(--xingzhi-white-op);    transition: 0.3s;    box-shadow: var(--xingzhi-shadow-main);  }  .page .menus_item:hover > a.site-page {    color: var(--xingzhi-card-bg);    background: var(--xingzhi-main);    transition: 0.3s;    box-shadow: var(--xingzhi-shadow-main);  }  .post .menus_item:hover > a.site-page {    color: var(--xingzhi-white);  }  .nav-fixed .menus_item:hover > a.site-page {    background-color: var(--xingzhi-lighttext);  }}@media screen and (max-width: 768px) {  #sidebar #sidebar-menus .menus_items li .site-page:hover {    background: var(--xingzhi-main);    color: var(--xingzhi-white);  }  #sidebar #sidebar-menus .menus_items li .site-page span:hover {    color: var(--xingzhi-white);  }  #nav #site-name i {    color: var(--xingzhi-white);    transition: 0.1s;  }  .error #nav #site-name i {    color: var(--xingzhi-fontcolor);  }  .nav-fixed #nav #site-name i {    color: var(--xingzhi-fontcolor);    transition: 0.3s;  }  .page #nav #site-name i {    color: var(--xingzhi-fontcolor);  }  #nav a:hover {    background: var(--xingzhi-none) !important;    box-shadow: none !important;    transition: 0.3s;    color: var(--xingzhi-fontcolor);  }  #page-header.not-top-img #nav a:hover {    color: var(--xingzhi-fontcolor);  }}.nav-fixed #nav .menus_item:hover .site-page {  color: var(--xingzhi-card-bg);}.nav-fixed #nav .menus_item:hover li .site-page {  color: var(--xingzhi-fontcolor);}.back-home-button .back-menu-list-groups {  position: absolute;  top: 45px;  transform: scale(0.8);  transform-origin: top left;  left: 1.5rem;  background-color: var(--xingzhi-maskbgdeep);  border-radius: 12px;  border: var(--style-border);  flex-direction: column;  font-size: 12px;  color: var(--xingzhi-secondtext);  box-shadow: var(--xingzhi-shadow-border);  transition: 0.1s;  opacity: 0;  pointer-events: none;  backdrop-filter: blur(20px);  -webkit-backdrop-filter: blur(20px);}.back-home-button .back-menu-list-group {  display: flex;  flex-direction: column;}.back-home-button .back-menu-list-group .back-menu-list-title {  margin: 8px 0 0 16px;  transition: 0.3s;}.back-menu-list-groups .back-menu-list {  display: flex;  flex-direction: row;  flex-wrap: wrap;  width: 340px;  justify-content: space-between;}.back-menu-list-groups .back-menu-list::before {  position: absolute;  top: -15px;  left: 0;  width: 100%;  height: 20px;  content: "";}.back-menu-list-groups .back-menu-list .back-menu-item .back-menu-item-icon {  width: 24px;  height: 24px;  border-radius: 8px;  background: var(--xingzhi-none);}.back-home-button:hover {  background: var(--xingzhi-main);  color: var(--xingzhi-white);}.back-home-button:hover .back-menu-list-groups {  display: flex;  opacity: 1;  transition: 0.3s;  top: 55px;  pointer-events: auto;  left: 0;  transform: scale(1);}.back-home-button .back-menu-list .back-menu-item {  width: 150px;}.back-menu-list-groups .back-menu-list .back-menu-item {  display: flex;  align-items: center;  margin: 4px 8px;  padding: 4px 8px !important;  transition: 0.3s;  border-radius: 8px;}.page #nav a:hover {  color: var(--xingzhi-card-bg);  background: var(--xingzhi-lighttext);  transition: 0.3s;  box-shadow: var(--xingzhi-shadow-main);}.page #nav #nav-group .back-home-button a {  transition: none;}#page-header.not-top-img {  /* margin-bottom: 0.5rem; */  height: 60px;  background: 0 center;}.page #nav #site-name {  color: var(--xingzhi-fontcolor);}#nav #site-name {  color: var(--xingzhi-white);}.back-menu-list-groups .back-menu-list .back-menu-item .back-menu-item-text {  font-size: 16px;  margin-left: 0.5rem;  color: var(--xingzhi-fontcolor);  transition: 0.3s;}.back-menu-list-groups  .back-menu-list  .back-menu-item:hover  .back-menu-item-text {  color: var(--xingzhi-card-bg);}#nav a:hover {  color: var(--xingzhi-white);  background: var(--xingzhi-white-op);  transition: 0.3s;}.back-menu-list-groups .back-menu-list .back-menu-item:hover {  background: var(--xingzhi-lighttext) !important;  transform: scale(1) !important;}#nav #site-name .title {  font-weight: 700;}#nav #site-name {  padding: 0;  transition: 0.3s;  display: flex;  height: 35px;  justify-content: center;  align-items: center;  text-shadow: none;  border-radius: 40px;  cursor: pointer;  color: var(--xingzhi-white);}.post #blog_name #site-name .title {  -webkit-transition: 0s;  -moz-transition: 0s;  -o-transition: 0s;  -ms-transition: 0s;  transition: 0s;}@media screen and (max-width: 768px) {  #nav {    padding: 0 10px;  }  #page-header.not-top-img #nav #nav-right .nav-button a:hover {    color: var(--xingzhi-fontcolor) !important;  }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/hometop.css"/>
      <url>/css/hometop.css</url>
      
        <content type="html"><![CDATA[#home_top {  max-width: 1400px;  margin: auto;  margin-top: 0.5rem;  padding: 0 1.5rem;  width: 100%;}@media screen and (max-width: 768px) {  #home_top {    padding: 0;    margin-top: 0;  }}.recent-top-post-group {  border-radius: 12px;  overflow: hidden;  overflow-x: auto;  width: 100%;  margin-bottom: 0;}.recent-post-top {  display: flex;  flex-direction: row;  flex-wrap: nowrap;  width: 100%;  overflow-x: scroll;}.recent-post-top::-webkit-scrollbar {  display: none;}.recent-post-top .recent-post-item {  display: flex;  width: 200px;  flex-direction: column;  align-items: flex-start;  margin-left: 0.5rem;  background: var(--xingzhi-card-bg);  border-radius: 12px;  overflow: hidden;  min-width: 200px;  height: 164px;  max-height: 164px;  border: var(--style-border-always);  transition: 0.3s;  position: relative;  box-shadow: var(--xingzhi-shadow-border);}@media screen and (max-width: 768px) {  .recent-post-top .recent-post-item {    border-radius: 8px;    box-shadow: none;    clip-path: inset(0 0 0 0 round 8px);  }  .recent-post-top .recent-post-item:last-child {    margin-right: 1rem;  }}@media screen and (min-width: 1200px) {  .recent-post-top .recent-post-item {    margin-right: 0;    margin-bottom: 0.5rem;  }  .recent-post-top .recent-post-item:active {    transform: scale(0.97);  }  .recent-post-top {    overflow-x: visible;  }  .recent-top-post-group {    overflow: visible;    overflow-x: visible;  }}span.recent-post-top-text {  position: absolute;  top: 0;  left: -40px;  display: flex;  z-index: 1;  background: var(--xingzhi-theme);  color: var(--xingzhi-white);  padding: 2px 8px;  font-size: 0.6rem;  border-radius: 12px 0 12px 0;  transition: 0.3s;  cursor: pointer;}.recent-post-item:hover .recent-post-top-text {  left: 0;}@media screen and (min-width: 1200px) {  .recent-post-top .recent-post-item:hover {    border: var(--style-border-hover);    box-shadow: var(--xingzhi-shadow-main);    transform: scale(1.03);  }  .recent-post-top .recent-post-item:active {    transform: scale(0.97);  }}@media screen and (max-width: 768px) {  .recent-top-post-group {    border-radius: 0;    background: var(--xingzhi-background);  }  .recent-post-top-text {    display: none !important;  }  .recent-post-top .recent-post-item .post_cover img {    border-radius: 8px 8px 0 0 !important;  }}.recent-post-top .recent-post-item .post_cover a {  height: 100px;  overflow: hidden;  display: flex;}.recent-post-top .recent-post-item .post_cover img {  object-fit: cover;  width: 100%;  background: var(--xingzhi-secondbg);  border-radius: 12px 12px 0 0;}.recent-post-top .recent-post-item:hover .post_cover img {  transform: scale(1);}.recent-post-top .recent-post-item .recent-post-info {  padding: 0.3rem 0.5rem 0.3rem 0.5rem !important;  transition: 0.3s;}.recent-post-top .recent-post-item:hover .recent-post-info a {  color: var(--xingzhi-fontcolor);}@media screen and (max-width: 1200px) {  .recent-post-top .recent-post-item:hover .recent-post-info a {    color: var(--xingzhi-theme);    transition: 0.3s;  }}.recent-post-top .recent-post-item .recent-post-info .article-title {  -webkit-line-clamp: 2;  overflow: hidden;  display: -webkit-box;  -webkit-box-orient: vertical;  line-height: 1.5;  justify-content: center;  align-items: flex-end;  align-content: center;  padding-top: 0.5rem;  font-weight: 700;  font-size: 1rem !important;  padding: 0 !important;}.categoryItem {  overflow: hidden;  transform: scale(1);  transition: all 0.8s cubic-bezier(0.65, 0.15, 0.37, 1.19);  height: 48%;  border-radius: 12px;}a.categoryButton {  height: 100%;  width: 100%;  background: var(--xingzhi-card-bg);  border-radius: 12px;  display: inline-block;  text-align: left;  line-height: 4em;  font-weight: bold;  font-size: 0.9rem;  color: var(--xingzhi-white);  transition: all 0.8s cubic-bezier(0.39, 0.575, 0.565, 1);  transform: scale(1);  overflow: hidden;  font-family: PingFang SC, Hiragino Sans GB, Microsoft YaHei;}a.categoryButton i {  transform: scale(1) rotate(15deg);}@media screen and (min-width: 1300px) {  a.categoryButton:active {    transform: scale(0.97);  }}@media screen and (max-width: 768px) {  a.categoryButton {    border-radius: 8px;  }   .categoryItem {    border-radius: 0px;    height: 47%;    box-shadow: none !important;  }  .topGroup {    padding-bottom: 8px;  }}a.categoryButton:after {  top: 50px;  width: 1rem;  left: 21px;  height: 2px;  background: var(--xingzhi-white);  content: "";  border-radius: 1px;  position: absolute;}.categoryButtonText {  padding-left: 21px;}a.categoryButton i {  font-size: 5rem;  opacity: 0.2;  position: absolute;  right: 0%;  top: 20%;  transition: 0.3s;  width: 100px;  text-align: center;  filter: blur(2px);}@media screen and (max-width: 768px) {  a.categoryButton i {    display: none;  }  .recent-post-top .categoryGroup {    min-width: 130px !important;    margin-bottom: 0.5rem;    margin-left: 1rem;    max-height: 164px;    overflow: hidden;    position: relative;  }}.topGroup {  display: flex;}#bannerGroup {  display: flex;}div#banners {  display: none;}.topGroup .todayCard {  display: none;}@media screen and (min-width: 1200px) {  .topGroup {    display: flex;    flex-direction: row;    flex-wrap: wrap;    justify-content: flex-end;    height: calc(328px + 0.5rem);    align-content: space-between;    width: calc(600px + 1.5rem);    position: relative;  }  div#bannerGroup {    width: calc(100% - 600px - 2rem);    margin-right: 0.5rem;    height: calc(328px + 0.5rem);    display: flex;    flex-direction: column;    justify-content: space-between;  }  div#banners {    display: flex;    width: 100%;    height: 76%;    background: var(--xingzhi-card-bg);    margin-bottom: 0.5rem;    border: var(--style-border);    border-radius: 12px;    overflow: hidden;    position: relative;    box-shadow: var(--xingzhi-shadow-border);    flex-direction: column;    overflow: hidden;    transition: 0.3s;    clip-path: inset(0 0 0 0 round 12px);  }  div#banners:hover {    box-shadow: var(--xingzhi-shadow-main);  }  #banners.flink {    margin-bottom: 0.5rem;  }  #banners .banner-button-group {    position: absolute;    right: 2rem;    top: 2rem;    display: flex;  }  #banners .banner-button {    padding: 8px 12px;    background: var(--xingzhi-fontcolor);    border-radius: 12px;    color: var(--xingzhi-card-bg);    display: flex;    align-items: center;    z-index: 1;    transition: 0.3s;    cursor: pointer;    box-shadow: var(--xingzhi-shadow-black);  }  #banners .banner-button.secondary {    background: var(--xingzhi-secondbg);    border: var(--style-border-always);    color: var(--xingzhi-lighttext);    margin-right: 1rem;    box-shadow: var(--xingzhi-shadow-border);  }  #banners .banner-button:hover {    background: var(--xingzhi-theme);    color: var(--xingzhi-white);  }  #banners .banner-button i {    margin-right: 8px;    font-size: 1rem;  }  .banners-title {    top: 2rem;    left: 1.5rem;    position: absolute;    display: flex;    flex-direction: column;  }  .banners-title-big {    font-size: 36px;    line-height: 1;    font-weight: bold;    margin-bottom: 8px;  }  .banners-title-small {    font-size: 12px;    line-height: 1;    color: var(--xingzhi-secondtext);    margin-top: 8px;    margin-bottom: 0.5rem;  }  #banner-hover {    position: absolute;    width: 100%;    height: 100%;    top: 0;    left: 0;    background: var(--xingzhi-theme);    color: var(--xingzhi-card-bg);    padding-left: 0.5rem;    display: flex;    flex-direction: column;    justify-content: center;    opacity: 0;    transition: cubic-bezier(0.71, 0.15, 0.16, 1.15) 0.6s;  }  .bannerText {    font-size: 4rem;    line-height: 4rem;    font-weight: bold;  }  .banner-righticon {    font-size: 4rem;    opacity: 0.6;  }  #banners:hover #banner-hover {    opacity: 1;    padding-left: 2rem;    background: var(--xingzhi-theme);    backdrop-filter: blur(15px);    -webkit-backdrop-filter: blur(15px);    /* -webkit-backface-visibility: hidden; */    /* -webkit-transform-style: preserve-3d; */    transition: 0.3s;    background-size: 200%;    cursor: pointer;  }  #banners #banner-hover i {    font-size: 80px;    opacity: 0.4;  }  .topGroup .todayCard {    position: absolute;    width: calc(600px + 1rem);    height: 100%;    z-index: 1;    top: 0;    left: 0;    background: var(--xingzhi-card-bg);    border-radius: 12px;    margin-left: 0.5rem;    overflow: hidden;    transition: 0.3s;    display: flex;    cursor: pointer;    pointer-events: all;  }  .topGroup .todayCard::after {    position: absolute;    content: "";    width: 100%;    height: 100%;    top: 0;    left: 0;  }  .topGroup .todayCard.hide {    opacity: 0;    pointer-events: none;  }  .topGroup .todayCard .todayCard-info {    position: absolute;    bottom: 2rem;    left: 2rem;    z-index: 2;    color: var(--xingzhi-white);    max-width: 60%;    transition: 0.3s;  }  .topGroup .todayCard.hide .todayCard-info {    bottom: 1rem;    opacity: 0;  }  .topGroup .todayCard .todayCard-info .todayCard-tips {    opacity: 0.8;    font-size: 0.6rem;  }  .topGroup .todayCard .todayCard-info .todayCard-title {    font-size: 28px;    font-weight: bold;    line-height: 36px;  }  .topGroup .banner-button-group {    position: absolute;    right: 2rem;    bottom: 2rem;    display: flex;    transition: 0.3s;  }  .topGroup .todayCard.hide .banner-button-group {    bottom: 1rem;  }  .topGroup .banner-button {    background: var(--xingzhi-white-op);    border-radius: 20px;    color: var(--xingzhi-white);    display: flex;    align-items: center;    z-index: 1;    transition: 0.3s;    cursor: pointer;    backdrop-filter: saturate(180%) blur(20px);    -webkit-backdrop-filter: blur(20px);    transform: translateZ(0);    height: 40px;    width: 118px;    justify-content: center;  }  .topGroup .banner-button:hover {    background: var(--xingzhi-theme);    color: var(--xingzhi-white);  }  .topGroup .banner-button i {    margin-right: 8px;    font-size: 22px;  }  .topGroup .todayCard .todayCard-cover {    position: absolute;    min-width: 100%;    min-height: 100%;    top: 0;    left: 0;    background-size: cover;    z-index: -1;    transition: 0.3s;  }  .topGroup .todayCard.hide .todayCard-cover {    transform: scale(1.2);  }}.tags-group-icon {  width: 120px;  height: 120px;  border-radius: 30px;}.tags-group-all {  display: flex;  transform: rotate(-30deg);}.tags-group-all.nowrapMove {  transform: rotate(0);  padding-bottom: 2rem;}.tags-group-wrapper {  margin-top: 5rem;  display: flex;  flex-wrap: nowrap;  animation: rowup 60s linear infinite;}.nowrapMove .tags-group-wrapper {  margin-top: 7rem;  animation: rowup 120s linear infinite;}.tags-group-icon-pair .tags-group-icon:nth-child(even) {  margin-top: 1rem;  transform: translate(-60px);}.tags-group-icon-pair {  margin-left: 1rem;}.tags-group-icon {  display: flex;  align-items: center;  justify-content: center;  color: #fff;  font-size: 66px;  font-weight: 700;  box-shadow: var(--xingzhi-shadow-blackdeep);}.nowrapMove .tags-group-icon {  border-radius: 50%;}.tags-group-icon img {  width: 60%;}.nowrapMove .tags-group-icon img {  min-width: 100%;  min-height: 100%;  border-radius: 50%;  object-fit: cover;}.categoryItem:hover i {  opacity: 0.8;  transition: 0.8s;  transition-delay: 0.15s;  transform: scale(1.03) rotate(0);  font-size: 2.5rem;  filter: blur(0);}@media screen and (min-width: 1300px) {  .categoryItem:hover i {    transform: scale(1.03) rotate(0);  }}.cate-button-text {  box-shadow: var(--xingzhi-shadow-black);}.recent-post-top .categoryGroup {  display: flex;  flex-direction: column;  justify-content: space-between;  min-width: 200px;}.categoryGroup .categoryItem:nth-child(3) {  display: none;}@media screen and (min-width: 1300px) {  .recent-post-top .categoryGroup {    flex-direction: row;    height: 24%;  }  .categoryItem {    width: calc(100% / 3 - 0.33rem);    height: 100%;    margin-right: 0.5rem;  }  .categoryItem:last-child {    margin-right: 0;  }  .categoryItem:hover {    width: 50%;  }  .categoryGroup .categoryItem:nth-child(3) {    display: flex;  }}a.categoryButton.bikan {  background: linear-gradient(to right, #358bff, #15c6ff);  background-size: 200%;}a.categoryButton.remen {  background: linear-gradient(to right, #f65, #ffbf37);  background-size: 200%;}a.categoryButton.shiyong {  background: linear-gradient(to right, #18e7ae, #1eebeb);  background-size: 200%;}[data-theme="dark"] a.categoryButton.bikan {  background: linear-gradient(to right, #0653b8, #2fcbff);  background-size: 200%;}[data-theme="dark"] a.categoryButton.remen {  background: linear-gradient(to right, #e22a16, #da980c);  background-size: 200%;}[data-theme="dark"] a.categoryButton.shiyong {  background: linear-gradient(to right, #099e74, #0ea4a4);  background-size: 200%;}a.categoryButton:hover {  background-position: 100% 0;}@keyframes rowup {  from {    transform: translateX(0);  }  to {    transform: translateX(-50%);  }}#recent-post-top .recent-post-item .post_cover {  width: 100%;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/iconfont.css"/>
      <url>/css/iconfont.css</url>
      
        <content type="html"><![CDATA[@font-face {  font-family: "iconfont"; /* Project id 4264124 */  src: url('//at.alicdn.com/t/c/font_4264124_dv1orumu7jg.woff2?t=1698044129526') format('woff2'),       url('//at.alicdn.com/t/c/font_4264124_dv1orumu7jg.woff?t=1698044129526') format('woff'),       url('//at.alicdn.com/t/c/font_4264124_dv1orumu7jg.ttf?t=1698044129526') format('truetype');}.xingzhifont {  font-family: "iconfont" !important;  font-size: 16px;  font-style: normal;  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;}.icon-add-circle:before {  content: "\e665";}.icon-pingtai:before {  content: "\e82c";}.icon-link:before {  content: "\e772";}.icon-arrow-right-s-line:before {  content: "\e834";}.icon-external:before {  content: "\e633";}.icon-moon:before {  content: "\e64a";}.icon-refresh:before {  content: "\e6ba";}.icon-pinglun:before {  content: "\e63f";}.icon-icon-arrow-left:before {  content: "\e6f7";}.icon-icon-arrow-up:before {  content: "\e6f8";}.icon-icon-arrow-right:before {  content: "\e6fa";}.icon-share:before {  content: "\e630";}.icon-CC:before {  content: "\e63a";}.icon-Sun:before {  content: "\e660";}.icon-jiaosequanxianguanli:before {  content: "\e67b";}.icon-moon-3:before {  content: "\e623";}.icon-jiantou_yemian_xiangxia:before {  content: "\eb0a";}.icon-arrow-down-s-line:before {  content: "\e72b";}.icon-file-copy-fill:before {  content: "\e6c5";}.icon-hand-heart-fill:before {  content: "\e8a7";}.icon-plant-fill:before {  content: "\eb5d";}.icon-copyright-line:before {  content: "\e652";}.icon-creative-commons-nd-line:before {  content: "\e6ec";}.icon-creative-commons-nc-line:before {  content: "\e6ef";}.icon-creative-commons-by-line:before {  content: "\e6f9";}.icon-wangyiyunyinyuemusic1193417easyiconnet:before {  content: "\e650";}.icon-facebook:before {  content: "\e677";}.icon-weibo:before {  content: "\e882";}.icon-github-line:before {  content: "\e767";}.icon-twitter:before {  content: "\e646";}.icon-bilibili-line:before {  content: "\e75d";}.icon-douyin:before {  content: "\e673";}.icon-email-fill:before {  content: "\e856";}.icon-history:before {  content: "\e61c";}.icon-comments:before {  content: "\e689";}.icon-file-word:before {  content: "\e7ba";}.icon-calender:before {  content: "\e752";}.icon-eye:before {  content: "\e823";}.icon-clock:before {  content: "\e621";}.icon-location-dot:before {  content: "\e8b0";}.icon-youqinglianjie:before {  content: "\e636";}.icon-fenlei:before {  content: "\e62f";}.icon-xingxing:before {  content: "\e718";}.icon-wangzhan:before {  content: "\e6f5";}.icon-fengche:before {  content: "\e614";}.icon-24gl-tags4:before {  content: "\e87d";}.icon-24gl-folderStar:before {  content: "\eac0";}.icon-ACE:before {  content: "\e66a";}.icon-tuijianbangshou:before {  content: "\e62e";}.icon-kaifasheji:before {  content: "\e613";}.icon-icon_:before {  content: "\e68f";}.icon-fengche1:before {  content: "\e827";}.icon-APP:before {  content: "\e691";}.icon-zhifeiji:before {  content: "\e68a";}.icon-github-fill:before {  content: "\e885";}.icon-bilibili-fill:before {  content: "\e66b";}.icon-hashtag:before {  content: "\e8b5";}.icon-arrow-up-line:before {  content: "\e67a";}.icon-moon-clear-fill:before {  content: "\e835";}.icon-side-bar-fill:before {  content: "\e676";}.icon-keyboard-box-fill:before {  content: "\ee2d";}.icon-cc-close-crude:before {  content: "\e62a";}.icon-igw-f-dashboard-rectangle:before {  content: "\e664";}.icon-shezhi-xianxing:before {  content: "\e8b7";}.icon-touzi:before {  content: "\e76d";}.icon-gongjiao:before {  content: "\e62d";}.icon-shouye:before {  content: "\e751";}.icon-grip-vertical:before {  content: "\eb3d";}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/keyboard.css"/>
      <url>/css/keyboard.css</url>
      
        <content type="html"><![CDATA[#keyboard-tips {  position: fixed;  top: 80px;  left: 20px;  z-index: 999;  background: var(--xingzhi-maskbgdeep);  border-radius: 12px;  border: var(--style-border);  padding: 20px;  display: flex;  flex-direction: column;  backdrop-filter: saturate(180%) blur(20px);  -webkit-backdrop-filter: blur(20px);  transform: translateZ(0);  pointer-events: none;  box-shadow: var(--xingzhi-shadow-border);  opacity: 0;  transition: 0.3s;}#keyboard-tips .keyboardTitle {  font-size: 12px;  color: var(--xingzhi-secondtext);  line-height: 1;}#keyboard-tips .keybordList {  display: flex;  flex-direction: column;  margin-top: 8px;}#keyboard-tips .keybordItem {  display: flex;  margin-top: 4px;}#keyboard-tips .keyGroup {  display: flex;  align-items: center;  width: 90px;}#keyboard-tips .keyGroup .key {  padding: 0.2em 0.4em;  font-family: inherit;  background-color: var(--xingzhi-card-bg);  color: var(--xingzhi-fontcolor);  border: var(--style-border);  border-color: var(--xingzhi-secondtext);  border-bottom: 2px solid var(--xingzhi-secondtext);  box-shadow: var(--xingzhi-shadow-border);  border-radius: 0.25rem;  overflow-wrap: break-word;  overflow-x: auto;  font-weight: 500;  font-size: 0.875em;  margin-right: 4px;  vertical-align: baseline;  line-height: 1;  height: 24px;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/layout.css"/>
      <url>/css/layout.css</url>
      
        <content type="html"><![CDATA[@media screen and (min-width: 1300px) {  .layout {    display: flex;    justify-content: space-between;    padding: 1rem 1.5rem;  }  #pagination {    margin-top: 0.25rem;  }  #recent-posts {    display: flex;    flex-wrap: wrap;    justify-content: space-between;    align-items: flex-start;    align-content: flex-start;    user-select: none;  }  #aside-content {    padding-left: 1rem;    animation: slide-in 0.6s 0.3s backwards;  }  #category-bar {    margin-bottom: 0.75rem;    box-shadow: var(--xingzhi-shadow-border);    animation: slide-in 0.6s 0.3s backwards;  }  #recent-posts > .recent-post-item {    width: calc(100% / 2 - 0.5rem);    margin-top: 0.25rem;    margin-bottom: 0.75rem;    box-shadow: var(--xingzhi-shadow-border);    flex-direction: column;  }  #recent-posts > .recent-post-item .left,  #recent-posts > .recent-post-item .right {    width: 100%;    display: flex;  }  #recent-posts > .recent-post-item .post_cover {    transition: 1s !important;    height: 225px;    width: 100%;  }  #recent-posts > .recent-post-item > .recent-post-info > .article-meta-wrap {    bottom: 20px;  }  .recent-post-item .recent-post-info .recent-post-info-top .article-title {    font-size: 20px;    -webkit-line-clamp: 2;  }  .recent-post-item:hover    .recent-post-info    .recent-post-info-top    .article-title {    -webkit-line-clamp: 2;  }  .recent-post-top .recent-post-item:hover .recent-post-info a {    color: var(--xingzhi-theme);    transition: 0.3s;  }  #recent-posts .recent-post-item:hover img.post-bg {    transform: scale(1.03);    transition: 0.3s ease-in-out;    filter: brightness(0.85);  }}@media screen and (min-width: 768px) {  #recent-posts .recent-post-item:hover .recent-post-info .article-title {    color: var(--xingzhi-theme);  }  #pagination {    overflow: visible;  }  #pagination .pagination {    position: relative;    display: flex;    justify-content: center;  }  #pagination .page-number.current:hover {    background: var(--xingzhi-theme);    border: var(--style-border-hover);    box-shadow: var(--xingzhi-shadow-theme);  }  #pagination .page-number {    width: 2rem;    background: var(--xingzhi-card-bg);    height: 2rem;    line-height: calc(2rem - 2px);    border-radius: 8px !important;    margin: 0 0.3rem;    box-shadow: var(--xingzhi-shadow-border);    border: var(--style-border);    transition: 0.3s;  }  #pagination .page-number:hover {    color: var(--xingzhi-theme);    border: var(--style-border-hover);    /* box-shadow: var(--xingzhi-shadow-main); */  }  #pagination a.extend.next {    overflow: hidden;  }  #pagination a.extend.next,  #pagination a.extend.prev {    width: 4rem;    height: 2rem;    line-height: 1.9rem;    border-radius: 8px !important;    background: var(--xingzhi-card-bg);    box-shadow: var(--xingzhi-shadow-border);    position: absolute;    border: var(--style-border);    display: flex;    align-items: center;    justify-content: center;    overflow: hidden;    transition: 0.3s;  }  #pagination a.extend.next:hover,  #pagination a.extend.prev:hover {    color: var(--xingzhi-theme);    border: var(--style-border-hover);    /* box-shadow: var(--xingzhi-shadow-main); */  }  #pagination a.extend.next .pagination_tips_next {    margin-left: -32px;    transition: 0.3s;    opacity: 0;  }  #pagination a.extend.prev .pagination_tips_prev {    margin-right: -32px;    transition: 0.3s;    opacity: 0;  }  #pagination a.extend.next:hover .pagination_tips_next {    margin-left: 2px;    opacity: 1;    white-space: nowrap;  }  #pagination a.extend.prev:hover .pagination_tips_prev {    margin-right: 2px;    opacity: 1;    white-space: nowrap;  }  #pagination a.extend.next i,  #pagination a.extend.prev i {    transition: 0.3s;  }}#pagination .page-number {  display: inline-block;  margin: 0 0.2rem;  min-width: 1.2rem;  height: 2rem;  text-align: center;  line-height: calc(2rem - 2px);  cursor: pointer;}#pagination .page-number.current {  /* background: #0079ff; */  background: var(--xingzhi-theme);  color: var(--xingzhi-card-bg);  cursor: default;  border-radius: 5px;}#pagination {  width: 100%;}#pagination .pagination {  text-align: center;}.layout#content-inner {  max-width: 1400px;}.layout {  display: flex;  margin: 0 auto;  /* padding: 2rem 15px; */  max-width: 1200px;}.layout > div:first-child {  width: 75%;  transition: all 0.3s ease 0s;}.layout > div:first-child {  width: calc(100% - 300px);}#recent-posts {  position: relative;}#aside-content {  width: 300px;}#category-bar {  padding: 0.4rem 1rem 0.4rem 0.7rem;  background: var(--xingzhi-card-bg);  border-radius: 12px;  display: flex;  white-space: nowrap;  overflow: hidden;  margin-bottom: 1rem;  border: var(--style-border);  transition: 0.3s;  width: 100%;  justify-content: space-between;  user-select: none;  display: flex;  align-items: center;}.category-bar-items {  white-space: nowrap;  overflow-x: scroll;  overflow-y: hidden;  display: flex;  border-radius: 8px;  align-items: center;  height: 30px;}.category-bar-item.select a {  background: var(--xingzhi-theme);  color: var(--xingzhi-card-bg);  border-radius: 8px;}.category-bar-item a {  padding: 0.1rem 0.5rem;  margin-right: 6px;  font-weight: 700;  border-radius: 8px;  display: flex;  align-items: center;  height: 30px;}#recent-posts > .recent-post-item {  margin-top: 0.5rem;  margin-bottom: 1rem;  position: relative;  overflow: hidden;  margin-top: 1rem;  animation: slide-in 0.6s 0.4s backwards;  will-change: transform;}#recent-posts > .recent-post-item {  box-shadow: var(--xingzhi-shadow-light2black);  display: flex;  -webkit-box-orient: horizontal;  -webkit-box-align: center;  align-items: center;  transition: all 0.3s ease 0s;  position: relative;}#recent-posts .recent-post-item {  height: fit-content;  background: var(--xingzhi-card-bg);  border-radius: 12px;  cursor: pointer;  border: var(--style-border);}#recent-posts > .recent-post-item > .recent-post-info {  height: 174px;  width: 100%;  cursor: pointer;  position: relative;  padding: 0;  display: inline-block;  overflow: hidden;}#recent-posts > .recent-post-item .left a,#recent-posts > .recent-post-item .right a {  min-height: 100%;  min-width: 100%;}#recent-posts > .recent-post-item .post_cover img.post_bg {  width: 100%;  height: 100%;  transition: all 0.6s ease 0s;  object-fit: cover;}img {  max-width: 100%;  transition: all 0.2s ease 0s;  border-style: none;}.recent-post-item .recent-post-info .recent-post-info-top {  position: relative;  transition: 0.3s;  padding: 0 32px;  width: 100%;}#recent-posts > .recent-post-item > .recent-post-info > .article-meta-wrap {  position: absolute;  bottom: 16px;  transition: 0.3s;  display: flex;  flex-direction: row;  flex-wrap: nowrap;  justify-content: space-between;  width: 100%;  left: 0;  padding: 0 32px;  white-space: nowrap;}#recent-posts > .recent-post-item > .recent-post-info > .article-meta-wrap {  color: var(--xingzhi-fontcolor);  font-size: 0.9rem;  user-select: none;}.recent-post-item span.tags-punctuation {  margin-right: 0;  font-size: 13px;}.recent-post-info-top-tips {  display: flex;  margin-top: 20px;  user-select: none;}#recent-posts > .recent-post-item .post_cover {  overflow: hidden;  mask-image: -webkit-radial-gradient(center, #fff, #000);}.recent-post-item .recent-post-info .recent-post-info-top .original {  display: flex;  color: var(--xingzhi-secondtext);  font-size: 0.7rem;  position: relative;  margin-right: 8px;}.recent-post-item .recent-post-info .recent-post-info-top .article-title {  line-height: 30px;  margin-top: 0;  font-weight: 700;  color: var(--xingzhi-fontcolor);  margin-bottom: 0;  width: 100%;  transition: 0.3s;  /* font-size: 1rem; */  -webkit-line-clamp: 2;  display: -webkit-box;  overflow: hidden;  -webkit-box-orient: vertical;}.recent-post-item .recent-post-info .recent-post-info-top .content {  opacity: 0;  transition: 0.3s;  display: none;  overflow: hidden;  -webkit-box-orient: vertical;  -webkit-line-clamp: 2;  line-height: 1.4;  color: var(--xingzhi-secondtext);  margin-top: 0.5rem;  height: 0;}.article-meta {  margin: 0 8px 0 0;  white-space: nowrap;  overflow: hidden;  display: inline-block;  text-overflow: ellipsis;}.article-meta__tags {  margin-right: 8px;  padding: 0 0.2rem;  padding-left: 0;  color: var(--xingzhi-fontcolor);}#recent-posts  > .recent-post-item  > .recent-post-info  > .article-meta-wrap  .article-meta__separator {  display: none;  margin: 0 0.3rem;}#recent-posts  > .recent-post-item  > .recent-post-info  > .article-meta-wrap  .article-meta__link {  margin: 0 0.2rem;  display: none;}i.icon-hashtag {  opacity: 0.6;  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=60)";  filter: alpha(opacity=60);  font-size: 13px;}#recent-posts > .recent-post-item > .recent-post-info > .article-meta-wrap i {  margin: 0 4px 0 0;}#recent-posts  > .recent-post-item  > .recent-post-info  > .article-meta-wrap  a  span {  pointer-events: none;}#recent-posts  > .recent-post-item  > .recent-post-info  > .article-meta-wrap  a:hover {  color: #425aef;}#recent-posts .recent-post-item:hover {  border: var(--style-border-hover);  /* box-shadow: var(--xingzhi-shadow-main); */}.recent-post-top .recent-post-item:hover .recent-post-info a {  color: var(--xingzhi-fontcolor);}#recent-posts  > .recent-post-item  > .recent-post-info  > .article-meta-wrap  > .post-meta-date {  right: 0;  text-align: right;  cursor: default;}.page .post-meta-date .article-meta-label,.page .post-meta-date i {  display: none;}#recent-posts  > .recent-post-item  > .recent-post-info  > .article-meta-wrap  .article-meta-label {  padding-right: 0.2rem;}a.extend.next {  right: 0;}a.extend.prev {  left: 0;}.layout > div:first-child:not(.recent-posts) {  /* box-shadow: var(--xingzhi-shadow-border); */  padding: 1rem 2rem;  border-radius: 12px;  background: var(--xingzhi-card-bg);  border: var(--style-border);  width: calc(100% - 300px);  align-self: flex-start;  animation: slide-in 0.6s 0.1s backwards;  position: relative;  overflow: hidden;}body {  position: relative;  min-height: 100%;  color: var(--xingzhi-fontcolor);  margin: 0;}#sakura.hide {  display: none;}#particle_box.hide {  display: none;}@media screen and (max-width: 899px) {  #nav #page-name-mask {    display: none !important;  }  #aside-content > .card-widget:first-child {    margin-top: 20px;  }}@media screen and (max-width: 768px) {  #nav-console {    display: none;  }}@media screen and (max-width: 1200px) {  #travellings_button {    display: none;  }}@media screen and (max-width: 768px) {  /* .page .layout#content-inner {    background: var(--xingzhi-background);  } */  #recent-posts {    padding: 0 1rem;  }  #aside-content .card-widget.card-info,  #aside-content .card-widget.card-announcement {    display: none;  }  .aside-content {    display: block;  }  #aside-content {    z-index: 2;    /* background: var(--xingzhi-background); */    padding: 0 1rem;    display: flex;    flex-direction: column;    width: 100%;  }  #recent-posts > .recent-post-item.lastestpost-item {    margin-top: 10px !important;  }  /* #recent-posts > .recent-post-item:not(:first-child) {    margin: 20px 20px 0;  } */  #aside-content > .card-widget:first-child {    margin-top: 0;  }  #pagination {    margin-bottom: 0;    margin-top: 0;  }  #pagination .pagination {    background: var(--xingzhi-background);    transition: 0.3s;    display: flex;  }  #pagination .page-number {    display: none;  }  #pagination .pagination .space {    display: none;  }  #pagination .pagination .extend i {    display: none;  }  #pagination .pagination .extend {    width: 100%;    height: 2.5rem;    margin: 0.2rem 0 1rem 0;    border-radius: 12px;    line-height: 2.5rem;    background: var(--xingzhi-card-bg);    border: var(--style-border-always);    box-shadow: var(--xingzhi-shadow-border);  }  #pagination .pagination .extend:hover {    background: var(--xingzhi-theme);    color: var(--xingzhi-white);  }  #footer {    background: linear-gradient(      180deg,      var(--xingzhi-background) 0,      var(--xingzhi-card-bg) 25%    ) !important;    margin-top: 0;    z-index: 999;  }  div#footer_deal {    flex-wrap: wrap;    flex-direction: row;  }}@media screen and (min-width: 900px) {  #aside-content .sticky_layout {    top: 60px;  }  .post #aside-content .sticky_layout {    top: 80px;  }}::-webkit-scrollbar {  width: 6px;  height: 6px;}::selection {  background: #0079ff;  color: #f7f7f7;}::-webkit-scrollbar-track {  background-color: var(--xingzhi-none);}::-webkit-scrollbar-thumb {  background: var(--xingzhi-scrollbar);  border-radius: 8px;  cursor: pointer;}.sticky_layout .card-widget.card-tags span.xingzhifont {  display: none;}#recent-posts .recent-post-item {  height: fit-content;  background: var(--xingzhi-card-bg);  border-radius: 12px;  cursor: pointer;  border: var(--style-border);}#category,#tag {  background-color: transparent;}[data-theme="dark"] #category {  background-color: var(--xingzhi-card-bg);}[data-theme="dark"] #tag {  background-color: var(--xingzhi-card-bg);}/* @media screen and (min-width: 768px) {  #pagination .page-number.current:hover {    background: var(--xingzhi-theme);    box-shadow: var(--xingzhi-shadow-theme);    color: var(--xingzhi-white);  }} */]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/loadingbox.css"/>
      <url>/css/loadingbox.css</url>
      
        <content type="html"><![CDATA[#loading-box {  -webkit-user-select: none;}#loading-box .loading-bg {  display: flex;  width: 100%;  height: 100%;  position: fixed;  background: var(--xingzhi-card-bg);  z-index: 1999;  opacity: 1;  transition: 0.2s;  pointer-events: all;  animation: showLoading 0.3s 0s backwards;}#loading-box.loaded .loading-bg {  pointer-events: none;  transition: 0.2s;  animation: hideLoading 0.3s 0.2s forwards;}#loading-box .loading-img {  width: 100px;  height: 100px;  border-radius: 50%;  margin: auto;  animation-duration: 0.2s;  animation-name: loadingAction;  animation-iteration-count: infinite;  animation-direction: alternate;} @keyframes loadingAction {  from {      opacity: 1;  }  to {      opacity: 0.6;  }}@keyframes hideLoading {  from {      opacity: 1;  }  to {      opacity: 0;  }}@keyframes showLoading {  from {      opacity: 0;  }  to {      opacity: 1;  }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/post.css"/>
      <url>/css/post.css</url>
      
        <content type="html"><![CDATA[#page-header.post-bg {  background-color: var(--xingzhi-background);  transition: 0.6s;  overflow: hidden;}#preview canvas {  border-radius: 10px;  border: 2px solid cyan;}@media screen and (min-width: 1300px) {  #page-header.post-bg {    height: 25rem;  }  #page-header.post-bg:before {    height: 25rem;    opacity: 0;    background-color: var(--xingzhi-main);    animation: slide-in-op 0.6s 0s forwards;  }  .coverdiv.loaded {    display: block;    opacity: 0.5;    animation: showCover 1s 0.3s backwards;    transform: rotate(10deg) translateY(-10%) scale(2);  }  .coverdiv {    width: 70%;    height: 100%;    position: relative;    margin: 0 -20% 0 auto;    overflow: hidden;    margin-bottom: 0;    transform: rotate(10deg) translateY(-8%) scale(1.8);    filter: blur(10px);    opacity: 0;  }  #page-header #post-info {    height: calc(100% + 0px);    top: 0;    display: flex;    justify-content: center;  }  #post-info .post-title {    width: 1100px;    font-size: 3.2rem !important;  }  #page-header.post-bg::before {    transition: 0.3s;    opacity: 0.93;    height: 25rem;    background-color: var(--xingzhi-main);    opacity: 1;    position: absolute;    top: 0;    left: 0;    display: block;    width: 100%;    content: "";  }}@media screen and (min-width: 768px) {  .coverdiv.loaded {    display: block;    opacity: 0.5;    animation: showCover 1s 0.3s backwards;    transform: rotate(10deg) translateY(-10%) scale(2);  }  .coverdiv {    width: 70%;    height: 100%;    position: relative;    margin: 0 -20% 0 auto;    overflow: hidden;    margin-bottom: 0;    transform: rotate(10deg) translateY(-8%) scale(1.8);    filter: blur(10px);    opacity: 0;  }}@media screen and (min-width: 900px) {  .post #nav #site-name:hover {    background: var(--xingzhi-white-op);    color: var(--xingzhi-white);  }}#page-header.post-bg::before {  transition: 0.3s;  opacity: 0.93;  height: 25rem;  background-color: var(--xingzhi-main);  opacity: 1;  position: absolute;  top: 0;  left: 0;  display: block;  width: 100%;  content: "";}.coverdiv {  width: 70%;  height: 100%;  position: relative;  margin: 0 -20% 0 auto;  overflow: hidden;  margin-bottom: 0;  transform: rotate(10deg) translateY(-10%) scale(2);  filter: blur(10px);}.coverdiv:after {  position: absolute;  content: "";  width: 100%;  height: 100%;  top: 0;  left: 0;  box-shadow: 110px -130px 300px 60px var(--xingzhi-main) inset;}.post-bg #post-cover {  width: 100%;  height: 100%;  object-fit: cover;  min-width: 50vw;  min-height: 20rem;  opacity: 0.8;}#page-header #post-info {  position: absolute;  padding: 0 8%;  width: 100%;  text-align: center;}#page-header #post-info {  top: 0;  position: absolute;  padding: 0 3rem;  margin: 0 auto;  z-index: 10;  color: var(--xingzhi-white);  max-width: 1400px;  display: flex;  flex-direction: column;  align-items: flex-start;  height: calc(100% + 0px);  justify-content: center;  animation: slide-in 0.6s 0s backwards;}#post-firstinfo {  text-align: left;  display: flex;  white-space: nowrap;  user-select: none;}#post-info .post-title {  color: var(--xingzhi-white);  font-weight: 700;  font-size: 2.3rem;  line-height: 1.2;  text-align: left;  margin: 1rem 0 1rem 0 !important;  -webkit-line-clamp: 2;  padding: 0;  overflow: hidden;}#post-info #post-meta {  color: var(--light-grey);  font-size: 120%;}#post-info #post-meta {  color: var(--xingzhi-white);  width: 50rem;  max-width: 100%;  margin-top: 0.4rem;  transition: 0.3s;  display: flex;  user-select: none;  justify-content: center;  flex-direction: column;}#post-firstinfo .meta-firstline {  display: flex;  align-items: center;  height: 32px;}a.post-meta-original {  background: var(--xingzhi-white-op) !important;  color: var(--xingzhi-white) !important;  padding: 0 0.6rem;  /* font-size: 0.7rem; */  margin: auto;  border-radius: 8px;  font-weight: 700;  height: 32px;  line-height: 32px;  width: 100%;  height: 100%;  display: flex;}span.post-meta-categories:not(:first-child) {  margin-left: 8px;}span.post-meta-categories {  background-color: var(--xingzhi-white-op);  padding: 0 0.6rem;  border-radius: 8px;  line-height: 32px;  height: 32px;  transition: 0.3s;}#post-firstinfo > div > span.post-meta-categories > a {  font-weight: 800;}a.post-meta-categories {  color: var(--xingzhi-white);  /* font-size: 0.7rem; */  width: 100%;  height: 100%;  display: flex;}.meta-firstline .tag_share {  margin-left: 1rem;}#post-firstinfo .post-meta__tags {  color: var(--xingzhi-white);  opacity: 0.8;  margin-right: 8px;}span.icon-hashtag {  margin-right: 2px;}#post-info .post-title {  color: var(--xingzhi-white);  font-weight: 700;  font-size: 2.3rem;  line-height: 1.2;  text-align: left;  margin: 1rem 0 1rem 0 !important;  -webkit-line-clamp: 2;  padding: 0;  overflow: hidden;}#post-meta > div {  text-align: left;}.meta-secondline {  display: flex;  flex-direction: row;  flex-wrap: wrap;  justify-content: flex-start;  align-items: center;}.main-hero-waves-area {  width: 100%;  position: absolute;  left: 0;  bottom: -11px;  z-index: 5;}.waves-area .waves-svg {  width: 100%;  height: 60px;}svg.waves-svg {  shape-rendering: auto;}.parallax > use:nth-child(1) {  animation-delay: -2s;  animation-duration: 7s;  fill: var(--xingzhi-background);  opacity: 0.5;}.parallax > use:nth-child(2) {  animation-delay: -3s;  animation-duration: 10s;  fill: var(--xingzhi-background);  opacity: 0.6;}.parallax > use:nth-child(3) {  animation-delay: -4s;  animation-duration: 13s;  fill: var(--xingzhi-background);  opacity: 0.7;}.parallax > use:nth-child(4) {  animation-delay: -5s;  animation-duration: 20s;  fill: var(--xingzhi-background);}.parallax > use {  animation: move-forever 30s cubic-bezier(0.55, 0.5, 0.45, 0.5) infinite;}@keyframes move-forever {  0% {    transform: translate3d(-90px, 0, 0);  }  100% {    transform: translate3d(85px, 0, 0);  }}.post .back-home-button:hover {  background: var(--xingzhi-white-op);  color: var(--xingzhi-white);}a.post-meta-original:hover {  color: var(--xingzhi-main) !important;  background: var(--xingzhi-white) !important;  border-radius: 8px !important;}span.post-meta-categories:hover {  background-color: var(--xingzhi-white);}span.post-meta-categories:hover a.post-meta-categories {  color: var(--xingzhi-main);}#post-firstinfo .post-meta__tags:hover {  color: var(--xingzhi-white);  opacity: 1;}.post #post-info #post-meta .post-meta-icon {  margin-right: 4px;}.post #post-info #post-meta .post-meta-label {  margin-right: 4px;}.post #post-meta i {  font-size: 16px;}.post #post-meta span.post-meta-separator {  margin: 0 8px;}.nav-fixed .back-home-button:hover {  background: var(--xingzhi-lighttext);  color: var(--xingzhi-white);}.post-tools-right {  padding-right: 0;  display: flex;  align-items: center;  flex-direction: row;  flex-wrap: wrap;}#post .tag_share .post-meta__tag-list {  display: flex;  padding: 0;  width: 100%;  flex-wrap: wrap;  flex-direction: row;}#post .tag_share .post-meta__tag-list a {  margin-bottom: 8px;  margin-right: 8px;}@media screen and (min-width: 1300px) {  #post .tag_share .post-meta__tags {    background: var(--xingzhi-card-bg);    border: var(--style-border);  }}#post .tag_share .post-meta__tags {  background: var(--xingzhi-card-bg);  border: var(--style-border-always);  color: var(--xingzhi-fontcolor);  border-radius: 8px;  margin: 0;  display: flex;  align-items: center;  white-space: nowrap;  height: 40px;  padding: 0 0.6rem;  width: fit-content;  font-size: 0.85em;  transition: all 0.2s ease-in-out 0s;}#post .tag_share .post-meta__tags span.tags-punctuation {  font-size: 12px;  margin-right: 1px;  display: flex;  align-items: center;}#post .tag_share .post-meta__tags span.tagsPageCount,#tag-page-tags .tagsPageCount {  padding: 2px;  background: var(--xingzhi-card-bg);  border: var(--style-border-always);  min-width: 22.5px;  display: inline-block;  border-radius: 4px;  text-align: center;  font-size: 0.8rem;  color: var(--xingzhi-fontcolor);  margin-left: 4px;}span.tagsPageCount {  background: var(--xingzhi-secondbg);  padding: 4px 4px;  border-radius: 8px;  color: var(--xingzhi-secondtext);  line-height: 1;  text-align: center;  min-width: 35px;  display: inline-block;  font-size: 1rem;  margin-left: 4px;}#article-container code {  color: var(--xingzhi-white);  padding: 0.2rem 0.4rem;  border-radius: 4px;  margin: 0 4px;  background: var(--xingzhi-pink);  line-height: 2;  box-shadow: var(--xingzhi-shadow-border);}#article-container .headerlink {  float: right;  opacity: 0.08;  border-bottom-style: none;  border-bottom: none;  position: relative;  padding: 0;  border: none;  border-radius: 8px !important;  line-height: 1;  font-size: 1rem;}#article-container ul > li:not(.tab)::before {  top: 0.78em;  width: 0.42em;  height: 0.42em;  border: 0.21em solid #307af6;  border-radius: 0.42em;  background: 0 0;  content: "";  line-height: 0.42em;}#article-container ul > li:not(.tab)::before {  border: 0.21em solid var(--xingzhi-lighttext);  background: var(--xingzhi-lighttext);}#article-container ol,#article-container ul {  margin-top: 0.4rem;  /* padding: 0 0 0 0.8rem; */  list-style: none;  counter-reset: li 0;}#article-container ul > li:not(.tab) {  padding: 0.2em 0.2em 0.2em 1.4em;}#article-container ol li:not(.tab),#article-container ul li:not(.tab) {  position: relative;  margin: 0.2rem 0;}#article-container ol li::before,#article-container ul li::before {  position: absolute;  top: 0;  left: 0;  background: #307af6;  color: #fff;  cursor: pointer;  transition: all 0.3s ease-out 0s;}#page p a:not(.headerlink) {  text-decoration: none;  border-bottom: 2px solid var(--xingzhi-lighttext);  font-weight: 700;  padding: 0 4px;  border-radius: 4px 4px 0 0;}@media screen and (max-width: 768px) {  #page-header.post-bg {    height: 30rem !important;    margin-bottom: -12px;  }  #page-header.post-bg:before {    height: 15rem;  }  #page-header #nav {    background: linear-gradient(      to top,      var(--xingzhi-main-none) 0,      var(--xingzhi-main) 100%    );    transition: 0s;  }  .coverdiv {    margin: 0 0 0 auto;    transform: rotate(0) translateY(0) scale(1);    filter: blur(0);    width: 100%;    position: fixed;    height: 30rem;    z-index: 1;  }  #page-header #post-info {    padding: 0 6%;    justify-content: normal;    padding-top: 18rem;  }  .post .layout#content-inner {    background: var(--xingzhi-main);  }  .layout {    padding: 0;  }  #footer {    background: linear-gradient(      180deg,      var(--xingzhi-background) 0,      var(--xingzhi-card-bg) 25%    );    margin-top: 0;    z-index: 999;  }  .main-hero-waves-area {    display: none;  }  #post-firstinfo {    white-space: nowrap;    margin: 0 auto;    z-index: 1;  }  #post-info .post-title {    font-size: 1.2rem;    -webkit-line-clamp: 3;    margin: 0.2rem auto !important;    text-align: center;    z-index: 1;  }  #post-info #post-meta {    z-index: 1;  }  #post-info #post-meta {    font-size: 90%;    align-items: center;  }  #post-info:after {    position: absolute;    content: "";    width: 100%;    height: 200%;    bottom: 0;    left: 0;    box-shadow: 0 -214px 287px 45px var(--xingzhi-main-op) inset;    z-index: 0;  }  .meta-secondline {    justify-content: center !important;  }  .meta-secondline span {    line-height: 1.5;  }  .post-meta-wordcount {    margin-left: 0;  }  .coverdiv:after {    box-shadow: 0 0 205px 59px var(--xingzhi-main) inset;  }  .post-bg #post-cover {    min-height: 15rem !important;    height: 70% !important;    opacity: 1 !important;  }  .post .layout > div:first-child:not(.recent-posts) {    border-radius: 12px 12px 0 0;  }  .layout > div:first-child:not(.recent-posts) {    z-index: 10;  }  .layout > div:first-child:not(.recent-posts) {    border-radius: 0;    padding: 0 1rem !important;    box-shadow: none !important;    background: var(--xingzhi-background);  }  .layout > div:first-child {    width: 100% !important;  }  article#article-container {    padding-top: 20px;  }  #aside-content {    z-index: 2;    background: var(--xingzhi-background);    padding: 0 1rem;    display: flex;    flex-direction: column;    width: 100%;  }  #post .post-copyright {    background: var(--xingzhi-card-bg);    box-shadow: var(--xingzhi-shadow-border);  }  #post .post-copyright {    padding: 1rem 1.3rem;  }  .post-tools-right {    margin-top: 1rem;    width: 100%;    justify-content: center;  }  #post #pagination {    border-radius: 12px;    border: var(--style-border-always);    box-shadow: var(--xingzhi-shadow-border);  }}@media screen and (max-width: 900px) {  .layout {    -webkit-box-orient: vertical;    flex-direction: column;  }  #page-header #post-info {    bottom: 1.5rem;    text-align: left;  }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/post_copyright.css"/>
      <url>/css/post_copyright.css</url>
      
        <content type="html"><![CDATA[#post .post-copyright {  background: var(--xingzhi-secondbg);  border-width: 1px;  transition: 0.3s;  position: relative;  margin: 80px 0 30px;  border-radius: 12px;  padding: 34px 0 20px 0;  border: var(--style-border-always);}#post .post-copyright:before {  display: none;}#post .post-copyright::before {  position: absolute;  top: 0.1rem;  right: 0.6rem;  color: #307af6;  content: "";  font-size: 1rem;}.post-copyright__author_img {  width: 66px;  height: 66px;  margin: auto;  border-radius: 66px;  overflow: hidden;  position: absolute;  left: calc(50% - 33px);  top: -33px;  border: var(--style-border-always);  box-shadow: var(--xingzhi-shadow-main);}.post-copyright__author_name {  text-align: center;  font-size: 20px;  font-weight: 700;  margin-top: 16px;  color: var(--xingzhi-fontcolor);  line-height: 1;}.post-copyright__author_desc {  text-align: center;  font-size: 14px;  color: var(--xingzhi-secondtext);  margin-top: 4px;}img.post-copyright__author_img_back {  border-radius: 66px;  z-index: 10;}img.post-copyright__author_img_front {  z-index: 20;  transform: scale(1.2) translateY(6px);}.post-copyright__author_img img {  position: absolute;  bottom: 0;  left: 0;}.post-tools {  display: flex;  width: 100%;  justify-content: center;  margin-top: 8px;  flex-wrap: wrap;  user-select: none;}.post-tools-left {  white-space: nowrap;  display: flex;  text-overflow: ellipsis;  /* flex-wrap: wrap; */}.post-reward {  margin-top: 0;  display: flex;  justify-content: center;}.post-reward {  position: relative;  /* margin-top: 4rem; */  text-align: center;}.post-reward .reward-button {  background: var(--xingzhi-red);  color: var(--xingzhi-white);  padding: 0 16px;  height: 40px;  line-height: 39px;  box-shadow: var(--xingzhi-shadow-red);  display: inline-block;  cursor: pointer;  transition: all 0.4s ease 0s;}.button--animated {  border-radius: 8px !important;  transition: 0.3s;}.button--animated {  position: relative;  z-index: 1;  transition: color 1s ease 0s;}.button--animated::before {  display: none;}.button--animated::before {  position: absolute;  inset: 0;  z-index: -1;  background: var(--btn-hover-color);  content: "";  transition: transform 0.5s ease-out 0s;  transform: scaleX(0);  transform-origin: 0 50%;}.post-reward .reward-main {  z-index: 1003;}.post-reward .reward-main .reward-all {  border-radius: 12px;  background: var(--xingzhi-card-bg);  border: var(--style-border-always);  padding: 0.8rem;  display: flex;  box-shadow: var(--xingzhi-shadow-border);  flex-direction: column;  align-items: center;}.reward-title {  font-weight: 700;  color: var(--xingzhi-red);}.reward-group {  display: flex;  margin-top: 0.5rem;}.post-reward .reward-main .reward-all .reward-item {  display: inline-block;  padding: 0 8px;  list-style-type: none;  vertical-align: top;}.post-reward .reward-main .reward-all .reward-item .post-qr-code-desc {  padding-top: 0;  margin-top: -8px;  margin-bottom: 8px;}.post-reward .reward-main .reward-all .reward-item .post-qr-code-desc {  padding-top: 0.4rem;  width: 130px;  color: #858585;}.post-reward .reward-main .reward-all .reward-item:first-child img {  border-color: var(--xingzhi-green);}.post-qr-code-img {  box-shadow: var(--xingzhi-shadow-lightblack);  border-radius: 12px;  border: var(--style-border-always);}.post-reward .reward-main .reward-all .reward-item img {  width: 130px;  height: 130px;}.reward-text {  margin-bottom: 0;  font-weight: 700;}.reward-dec {  font-size: 0.6rem;}.reward-link.mode {  background: var(--xingzhi-green);  color: var(--xingzhi-white);  padding: 0 16px;  height: 40px;  line-height: 39px;  box-shadow: var(--xingzhi-shadow-green);  border-radius: 8px;  margin-left: 0.5rem;  text-align: center;  transition: 0.3s;}.reward-link.mode a {  color: var(--xingzhi-white);}.reward-link.mode i {  margin-right: 4px;}#post > div.post-copyright > div.post-copyright__notice {  font-size: 12px;  margin: 0.5rem 0;}#post .post-copyright .post-copyright-info {  padding-left: 0;  color: var(--xingzhi-secondtext);  overflow: hidden;  display: -webkit-box;  -webkit-line-clamp: 1;  -webkit-box-orient: vertical;  text-align: center;}#post .post-copyright .post-copyright-info a {  padding: 0;  color: var(--xingzhi-fontcolor);  font-weight: 700;}#post .post-copyright .post-copyright__notice .post-copyright-info a {  padding: 0 4px;}#post .post-copyright .post-copyright-info a {  text-decoration: none;  word-break: break-word;  color: #3b82ff;  padding: 0 4px;  border-radius: 4px;}.post-reward:hover .reward-button {  color: var(--xingzhi-white);  background: var(--xingzhi-theme);  box-shadow: none;}a.reward-main-btn:hover {  color: var(--xingzhi-white);  background: var(--xingzhi-red);  background-image: url(https://p.zhheo.com/JgNrST23690481619450556342.gif!cover);  box-shadow: var(--xingzhi-shadow-red);}.reward-link.mode:hover {  background: var(--xingzhi-theme);  box-shadow: none;}#post .post-copyright .post-copyright-info a:hover {  text-decoration: none;  background-color: var(--xingzhi-main);  color: var(--xingzhi-white);  cursor: pointer;  border-radius: 4px;}@media screen and (min-width: 768px) {  .post-reward:hover > .reward-main {    display: flex !important;    justify-content: left;  }}.post-reward .reward-main {  position: absolute;  bottom: 40px;  left: -96px;  z-index: 100;  display: none;  padding: 0 0 15px;  width: fit-content;}.reward-main {  animation: 0.3s ease 0.1s 1 normal both running donate_effcet;}.post-reward .reward-main .reward-all::before {  position: absolute;  bottom: -10px;  left: 0;  width: 100%;  height: 20px;  content: "";}.post-reward .reward-main .reward-all:after {  display: none;}.post-reward .reward-main .reward-all::after {  position: absolute;  right: 0;  bottom: 2px;  left: 0;  margin: 0 auto;  width: 0;  height: 0;  border-top: 13px solid var(--reward-pop);  border-right: 13px solid transparent;  border-left: 13px solid transparent;  content: "";}a.reward-main-btn {  background: var(--xingzhi-secondbg);  color: var(--xingzhi-fontcolor);  display: flex;  flex-direction: column;  border-radius: 12px;  padding: 4px 0;  border: var(--style-border-always);  margin: 8px;  width: 100%;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/rightmenu.css"/>
      <url>/css/rightmenu.css</url>
      
        <content type="html"><![CDATA[#rightMenu {  display: none;  position: fixed;  padding: 0 0.30rem;  width: 12rem;  height: fit-content;  top: 10%;  left: 10%;  background-color: var(--xingzhi-maskbgdeep);  -webkit-backdrop-filter: blur(20px);  backdrop-filter: blur(20px);  transform: translateZ(0);  color: var(--xingzhi-fontcolor);  border-radius: 12px;  z-index: 99994;  border: var(--style-border);  user-select: none;  box-shadow: var(--xingzhi-shadow-black);  transition: border 0.3s;}#rightmenu-mask {  position: fixed;  width: 100vw;  height: 100vh;  background: 0 0;  top: 0;  left: 0;  display: none;  z-index: 101;  margin: 0 !important;  z-index: 99993;}#rightMenu .rightMenu-group.rightMenu-small {  display: flex;  justify-content: space-between;}#rightMenu .rightMenu-group {  padding: 0.35rem 0.3rem;  transition: 0.3s;}#rightMenu .rightMenu-group .rightMenu-item {  border-radius: 8px;  transition: 0.3s;  cursor: pointer;}.rightMenu-small .rightMenu-item {  width: 30px;  height: 30px;  line-height: 30px;  display: flex;  align-items: center;  justify-content: center;}#rightMenu .rightMenu-group .rightMenu-item i {  display: inline-block;  text-align: center;  line-height: 1.5rem;  width: 1.5rem;  padding: 0 0.30rem;}#rightMenu .rightMenu-line {  border-top: 1px dashed var(--xingzhi-theme-op);}#rightMenu .rightMenu-group.rightMenu-line .rightMenu-item {  display: flex;  gap: 8px;}#rightMenu .rightMenu-line .rightMenu-item {  margin: 0.30rem 0;  padding: 0.30rem 0;}#rightMenu .rightMenu-group .rightMenu-item span {  line-height: 1.5rem;}#rightMenu .rightMenu-line .rightMenu-item i {  margin: 0 0.30rem;}#rightMenu .rightMenu-group .rightMenu-item:hover {    background-color: var(--xingzhi-lighttext);    color: var(--xingzhi-card-bg);    box-shadow: var(--xingzhi-shadow-main);}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/rightside.css"/>
      <url>/css/rightside.css</url>
      
        <content type="html"><![CDATA[#rightside {  display: none;  padding-right: 8px;  position: fixed;  right: -38px;  bottom: 40px;  z-index: 100;  opacity: 0;  transition: all 0.5s ease 0s;}#rightside #rightside-config-hide {  transform: translate(42px, 0);}#rightside #rightside-config-hide {  transition: transform 0.4s ease 0s;  transform: translate(35px, 0);}#rightside > div > a:hover,#rightside > div > button {  transition: 0.3s;}#rightside > div > a,#rightside > div > button {  margin-bottom: 8px;  transition: 0.3s;}#rightside > div > a,#rightside > div > button {  display: block;  margin-bottom: 2px;  width: 30px;  height: 30px;  background-color: var(--btn-bg);  color: var(--btn-color);  text-align: center;  font-size: 16px;}[type="button"],[type="reset"],[type="submit"],button {  appearance: button;}button {  padding: 0;  outline: 0;  border: none;  background: 0 0;  cursor: pointer;}button,select {  text-transform: none;}button,input {  overflow: visible;}button,input,optgroup,select,textarea {  font-family: inherit;  font-size: 100%;  line-height: 1.15;  margin: 0;}#rightside #mobile-toc-button {  display: none;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/sidebar.css"/>
      <url>/css/sidebar.css</url>
      
        <content type="html"><![CDATA[#sidebar {  background: var(--xingzhi-maskbg);}#sidebar #menu-mask {  position: fixed;  z-index: 1001;  display: none;  width: 100%;  height: 100%;  background: var(--xingzhi-maskbg);  backdrop-filter: saturate(180%) blur(20px);  -webkit-backdrop-filter: blur(20px);  transform: translateZ(0);  animation: 0.6s ease 0s 1 normal none running to_show;  -webkit-transform-style: preserve-3d;}#sidebar #sidebar-menus.open {  transform: translate3d(-100%, 0, 0);}#sidebar #sidebar-menus {  position: fixed;  top: 0;  right: -300px;  z-index: 103;  overflow: hidden auto;  width: 300px;  height: 100%;  background: var(--xingzhi-background);  transition: all 0.5s ease 0s;  padding-top: 30px;  z-index: 1001;  border-left: var(--style-border-always);}#sidebar #sidebar-menus .sidebar-menu-item {  display: flex;  flex-direction: column;  padding: 0 16px;  margin-bottom: 6px;}#sidebar #sidebar-menus span.sidebar-menu-item-title {  font-size: 12px;  color: var(--xingzhi-secondtext);  margin-left: 16px;}#sidebar #sidebar-menus .menus_items {  padding: 0 16px;}#sidebar #sidebar-menus .sidebar-menu-item {  display: flex;  flex-direction: column;  padding: 0 16px;  margin-bottom: 6px;}#sidebar #sidebar-menus .sidebar-menu-item a.menu-child {  width: 100%;  background: var(--xingzhi-card-bg);  border-radius: 8px;  border: var(--style-border-always);  display: flex;  align-items: center;  font-size: 14px;}a.darkmode_switchbutton {  padding: 4px 8px !important;  cursor: pointer;  margin: 0 !important;  font-size: 0.9rem;  color: var(--xingzhi-fontcolor);}#sidebar #sidebar-menus .sidebar-menu-item a.menu-child i {  width: 24px;  height: 24px;  display: flex;  align-items: center;  justify-content: center;}#sidebar #sidebar-menus .sidebar-menu-item a.menu-child span {  margin-left: 10px;}#sidebar #sidebar-menus .back-menu-list-groups {  padding: 0 16px;}#sidebar #sidebar-menus .back-menu-list-groups .back-menu-list-title {  font-size: 12px;  color: var(--xingzhi-secondtext);}.back-menu-list-groups .back-menu-list {  display: flex;  flex-direction: row;  flex-wrap: wrap;  width: 340px;  justify-content: space-between;}#sidebar #sidebar-menus .back-menu-list-groups .back-menu-list {  width: calc(100% + 16px);  justify-content: flex-start;  margin: 0 -8px;}.back-menu-list-groups .back-menu-list .back-menu-item {  display: flex;  align-items: center;  margin: 4px 8px;  padding: 4px 8px !important;  transition: 0.3s;  border-radius: 8px;}#sidebar #sidebar-menus .back-menu-list-groups .back-menu-list .back-menu-item {  background: var(--xingzhi-card-bg);  border: var(--style-border-always);  border-radius: 8px;}@media screen and (max-width: 768px) {  #sidebar    #sidebar-menus    .back-menu-list-groups    .back-menu-list    .back-menu-item {    width: calc(50% - 16px);  }  .back-menu-list-groups .back-menu-list .back-menu-item .back-menu-item-text {    font-size: 14px;  }}.back-menu-list-groups .back-menu-list .back-menu-item .back-menu-item-icon {  width: 24px;  height: 24px;  border-radius: 8px;  background: var(--xingzhi-none);}.back-menu-list-groups .back-menu-list .back-menu-item .back-menu-item-text {  font-size: 16px;  margin-left: 0.5rem;  color: var(--xingzhi-fontcolor);  transition: 0.3s;}#sidebar #sidebar-menus .menus_item > .site-page {  display: flex;  font-size: 12px;  color: var(--xingzhi-secondtext);}#sidebar #sidebar-menus .menus_items .menus_item_child {  margin: 0 -4px;  list-style: none;  display: flex;  flex-direction: row;  flex-wrap: wrap;}#sidebar #sidebar-menus .menus_item_child li {  width: calc(50% - 8px);  margin: 4px;}#sidebar #sidebar-menus .menus_items .site-page {  position: relative;  display: block;  padding: 0;  color: var(--xingzhi-fontcolor);  font-size: 1.15em;  cursor: pointer;  font-size: 14px;  font-weight: 700;}#sidebar #sidebar-menus .menus_item_child .site-page.child {  display: flex;  flex-direction: column;  align-items: center;  padding: 8px;  border-radius: 8px;  border: var(--style-border-always);  background: var(--xingzhi-card-bg);}@media screen and (max-width: 768px) {  #sidebar #sidebar-menus .menus_items .site-page {    font-weight: 400;  }}#sidebar #sidebar-menus .menus_item_child .site-page.child span {  line-height: 1;  margin-top: 8px;  font-size: 14px;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/tags.css"/>
      <url>/css/tags.css</url>
      
        <content type="html"><![CDATA[/* #page h1.page-title {  margin: 0.4rem 2rem 0.2rem;} */@media screen and (min-width: 1300px) {  #page > div:not(.author-content-item) {    animation: slide-in 0.6s 0.2s backwards;  }}#page .category-lists {  padding: 1rem 0 1.5rem;}#page .tag-cloud-list a:hover {  background: var(--xingzhi-main) !important;  box-shadow: var(--xingzhi-shadow-blue);  color: var(--xingzhi-white) !important;  border: var(--style-border-hover);}.is-center {  text-align: center;  display: flex;  flex-wrap: wrap;  justify-content: center;  flex-direction: row;  align-items: center;}#page .tag-cloud-list a {  display: flex;  width: fit-content;  color: var(--xingzhi-fontcolor) !important;  font-size: 1.4em !important;  padding: 0.2em 0.5em;  background: var(--xingzhi-card-bg);  margin: 0.5em 0.5em;  border-radius: 12px;  -webkit-backface-visibility: hidden;  -webkit-transform-style: preserve-3d;  border: var(--style-border-always);  box-shadow: var(--xingzhi-shadow-border);  align-items: center;}.tag-cloud-list a {  display: inline-block;  padding: 0 0.4rem;  transition: all 0.3s ease 0s;}#page {  background: 0 0;  border: none;  padding: 0;}.page #page .tag-cloud-list span {  font-size: 1.4rem;}#page .tag-cloud-list span:before {  font-size: 1.2rem;}.icon-hashtag:before {  content: "\e8b5";  font-size: 14px;  opacity: 0.4;}#article-container .highlight:not(.js-file-line-container) {  background-color: var(--xingzhi-card-bg) !important;  color: var(--xingzhi-fontcolor);  border: var(--style-border-always);  overflow: hidden;}#article-container figure.highlight {  border-radius: 8px 8px 4px 4px;}#article-container figure.highlight {  position: relative;}#article-container figure.highlight,#article-container pre {  overflow: auto;  margin: 0 0 1rem;  padding: 0;  line-height: 1.6;}figure {  margin-top: 0.5rem !important;}#article-container figure.highlight .highlight-tools {  background: var(--xingzhi-secondbg);  border-bottom: var(--style-border-always);  color: var(--xingzhi-fontcolor);}#article-container .highlight-tools {  position: relative;  display: flex;  -webkit-box-align: center;  align-items: center;  overflow: hidden;  min-height: 1.2rem;  height: 2.15em;  background: var(--hltools-bg);  color: var(--hltools-color);  font-size: 16px;}#article-container .highlight-tools .expand {  position: absolute;  padding: 0.4rem 0.3rem;  cursor: pointer;  transition: transform 0.3s ease 0s;}#article-container .highlight-tools .expand + .code-lang {  left: 1.7rem;}#article-container .highlight-tools .code-lang {  text-transform: capitalize;  left: 1.9rem;}#article-container .highlight-tools .code-lang {  position: absolute;  left: 0.7rem;  text-transform: uppercase;  font-weight: 700;  font-size: 1.15em;  user-select: none;}#article-container .code-lang {  margin-left: 6px;}#article-container .highlight-tools .copy-notice {  position: absolute;  right: 1.7rem;  opacity: 0;  transition: opacity 0.4s ease 0s;}.highlight-tools .icon-file-copy-fill {  position: absolute;  right: 0.7rem;  cursor: pointer;  transition: color 0.2s;  font-size: 18px;}#article-container .code-expand-btn {  background: var(--xingzhi-secondbg);  transition: 0.3s;  backdrop-filter: saturate(180%) blur(20px);  -webkit-backdrop-filter: blur(20px);  transform: translateZ(0);  border-top: var(--style-border-always);  position: absolute;  bottom: 0;  z-index: 10;  width: 100%;  text-align: center;  font-size: 16px;  cursor: pointer;  display: flex;  align-items: center;  justify-content: center;  height: 32px;}#article-container .code-expand-btn i {  color: var(--xingzhi-fontcolor);  font-size: 14px;  line-height: 1;  animation: 1.2s ease 0s infinite normal none running code-expand-key;}#article-container .code-expand-btn:not(.expand-done) ~ pre,#article-container .code-expand-btn:not(.expand-done) ~ table {  overflow: hidden;  height: 400px;}#article-container figure.highlight table {  display: block;  border: none;  overflow: scroll;}table {  display: table;  width: 100%;  border-spacing: 0;  border-collapse: collapse;  empty-cells: show;}#article-container figure.highlight table td {  padding: 0;  border: none;  height: 100%;}#article-container figure.highlight table td.code {  width: 100%;  display: flex;  position: relative;}#article-container figure.highlight .gutter pre {  color: var(--xingzhi-secondtext);  background: var(--xingzhi-secondbg);  border-right: var(--style-border-always);  padding-right: 0.5rem;  padding-left: 0.5rem;  text-align: right;}#article-container figure.highlight pre {  margin: 0;  padding: 8px 0;  border: none;}#article-container figure.highlight,#article-container pre {  overflow: auto;  margin: 0 0 1rem;  padding: 0;  line-height: 1.6;}#article-container figure.highlight pre span::selection {  background: var(--xingzhi-main) !important;  color: var(--xingzhi-white) !important;}#article-container figure.highlight table td {  padding: 0;  border: none;  height: 100%;}#article-container figure.highlight .code pre {  padding-right: 0.5rem;  padding-left: 0.5rem;  width: 100%;}figure.highlight pre .tag {  color: var(--xingzhi-pink);}figure.highlight pre .attribute,figure.highlight pre .css .class,figure.highlight pre .css .id,figure.highlight pre .css .pseudo,figure.highlight pre .html .doctype,figure.highlight pre .regexp,figure.highlight pre .ruby .constant,figure.highlight pre .tag .name,figure.highlight pre .variable,figure.highlight pre .xml .doctype,figure.highlight pre .xml .pi,figure.highlight pre .xml .tag .title {  color: var(--xingzhi-red);}figure.highlight pre .javascript .function,figure.highlight pre .tag .attr {  color: #c792ea;}#article-container pre,#article-container figure.highlight {  background-color: transparent;}a {  background-color: transparent;  color: var(--xingzhi-fontcolor);  text-decoration: none;  transition: all 0.2s ease 0s;  overflow-wrap: break-word;  -webkit-user-drag: none;}/* #tag #tag-page-tags:hover {  max-height: 1000px;  transition: .3s ease-out;  background: var(--xingzhi-maskbgdeep);} */#tag #tag-page-tags {  display: -webkit-box;  display: -moz-box;  display: -webkit-flex;  display: -ms-flexbox;  display: box;  display: flex;  -webkit-box-orient: horizontal;  -moz-box-orient: horizontal;  -o-box-orient: horizontal;  -webkit-box-lines: multiple;  -moz-box-lines: multiple;  -o-box-lines: multiple;  -webkit-flex-flow: row wrap;  -ms-flex-flow: row wrap;  flex-flow: row wrap;}#tag #tag-page-tags a.select {  color: var(--xingzhi-card-bg) !important;  background: var(--xingzhi-theme);  box-shadow: var(--xingzhi-shadow-theme);}#tag #tag-page-tags a {  padding: 0.1rem 0.5rem;  margin: 0.25rem 0.25rem;  line-height: 1.6;  border-radius: 8px;  color: var(--xingzhi-fontcolor) !important;  border: var(--style-border-always);  display: flex;  align-items: center;  background: var(--xingzhi-card-bg);}#tag #tag-page-tags a.select .tagsPageCount {  background: var(--xingzhi-card-bg);  color: var(--xingzhi-lighttext);}#post .tag_share .post-meta__tags span.tagsPageCount,#tag-page-tags .tagsPageCount {  padding: 2px;  background: var(--xingzhi-card-bg);  border: var(--style-border-always);  min-width: 22.5px;  display: inline-block;  border-radius: 4px;  text-align: center;  font-size: 0.6rem;  color: var(--xingzhi-fontcolor);  margin-left: 4px;}#tag #tag-page-tags a:hover {  color: var(--xingzhi-card-bg)!important;  background: var(--xingzhi-theme);  box-shadow: var(--xingzhi-shadow-theme);}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/tools.css"/>
      <url>/css/tools.css</url>
      
        <content type="html"><![CDATA[.author-content.author-content-item.toolsPage {  height: 25rem;  background: url(https://img.hoshinagi.top/tools/4081697985418_.pic.webp)    no-repeat top;  background-size: cover;  color: var(--xingzhi-white);  overflow: hidden;  margin-top: 0;}#tools-link.tools-link {  margin-top: 1rem;}#tools-link .tools-list {  display: flex;  flex-wrap: wrap;  padding: 0;  margin: 0.5rem -6px 1rem -6px;  overflow-x: hidden;  text-align: center;  /* overflow: auto; */}#tools-link .tools-list .tools-list-item {  display: flex;  margin: 6px 6px;  transition: 0.3s;  border-radius: 12px;  height: 90px;  line-height: 17px;  transition-timing-function: ease-in-out;  position: relative;  width: calc(20% - 12px);  border: var(--style-border);  box-shadow: var(--xingzhi-shadow-border);  background: var(--xingzhi-card-bg);}#tools-link .tools-list .tools-list-item:hover {  transform: scale(1);  background: var(--xingzhi-lighttext);  border: var(--style-border-hover);  box-shadow: var(--xingzhi-shadow-main);}#tools-link .tools-list .tools-list-item:hover a img {  transition: 0.6s;  width: 0;  height: 0;  opacity: 0;  margin: 5px;  min-width: 0;  min-height: 0;}#tools-link .tools-list .tools-list-item:hover .tool-item-info {  min-width: calc(100% - 20px);}#tools-link .tools-list .tools-list-item:hover a .tool-item-name {  color: var(--xingzhi-card-bg) !important;}#tools-link .tools-list .tools-list-item:hover a .tool-item-desc {  overflow: hidden;  width: 100%;  color: var(--xingzhi-card-bg);}#tools-link .tools-list .tools-list-item a {  display: flex;  border: none;  width: 100%;  height: 100%;  align-items: center;  color: var(--xingzhi-fontcolor);  text-decoration: none;  /* border-bottom: 2px solid var(--xingzhi-lighttext); */  font-weight: 700;  padding: 0 4px;  border-radius: 4px 4px 0 0;}#tools-link .tools-list .tools-list-item img {  border-radius: 32px;  margin: 15px 20px 15px 15px;  transition: 0.3s;  background: var(--xingzhi-background);  min-width: 60px;  min-height: 60px;  width: 60px;  height: 60px;}#tools-link .tools-list .tools-list-item .tool-item-info {  display: flex;  flex-direction: column;  justify-content: center;  width: calc(100% - 90px);  height: fit-content;}#tools-link .tools-list .tools-list-item .tool-item-info .tool-item-name {  text-align: left;  font-size: 19px;  line-height: 20px;  color: var(--xingzhi-fontcolor);  display: block;  padding: 0 10px 0 0;  font-weight: 700;  max-width: calc(100% - 12px);  overflow: hidden;  text-overflow: ellipsis;  white-space: nowrap;}#tools-link .tools-list .tools-list-item .tool-item-info .tool-item-desc {  font-size: 0.93em;  white-space: normal;  padding: 5px 10px 16px 0;  color: var(--xingzhi-fontcolor);  text-align: left;  height: 40px;  text-overflow: ellipsis;  opacity: 0.7;  display: -webkit-box;  overflow: hidden;  -webkit-box-orient: vertical;  -webkit-line-clamp: 2;}@media screen and (max-width: 600px) {  #tools-link .tools-list .tools-list-item {    width: calc(100% - 12px) !important;  }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/xingzhi.css"/>
      <url>/css/xingzhi.css</url>
      
        <content type="html"><![CDATA[@charset "UTF-8";:root {  --heo-white: #fff;  --heo-white-op: rgba(255, 255, 255, 0.15);  --heo-black: #000;  --heo-black-op: rgba(0, 0, 0, 0.15);  --heo-none: #00000000;  --heo-gray: #999999;  --heo-gray-op: #9999992b;  --heo-vip: #e5a80d;  --heo-main: var(--heo-theme);  --heo-main-op: var(--heo-theme-op);  --heo-main-op-deep: var(--heo-theme-op-deep);  --heo-main-op-light: var(--heo-theme-op-light);  --heo-main-none: var(--heo-theme-none);  --heo-shadow-theme: 0 8px 12px -3px var(--heo-theme-op);  --heo-shadow-blackdeep: 0 2px 16px -3px rgba(0, 0, 0, 0.15);  --heo-shadow-main: 0 8px 12px -3px var(--heo-main-op);  --heo-shadow-blue: 0 8px 12px -3px rgba(40, 109, 234, 0.2);  --heo-shadow-white: 0 8px 12px -3px rgba(255, 255, 255, 0.2);  --heo-shadow-black: 0 0 12px 4px rgba(0, 0, 0, 0.05);  --heo-shadow-yellow: 0px 38px 77px -26px rgba(255, 201, 62, 0.12);  --heo-shadow-red: 0 8px 12px -3px #ee7d7936;  --heo-shadow-green: 0 8px 12px -3px #87ee7936;  --heo-logo-color: linear-gradient(215deg, #4584ff 0%, #cf0db9 100%);  --heo-snackbar-time: 5s;}::selection {  background: var(--heo-fontcolor);  color: var(--heo-background);}[data-theme="light"] {  --heo-theme: #425aef;  --heo-theme-op: #4259ef23;  --heo-theme-op-deep: #4259efdd;  --heo-theme-op-light: #4259ef0d;  --heo-theme-none: #4259ef01;  --heo-blue: #425aef;  --heo-red: #f04a63;  --heo-pink: #ff7c7c;  --heo-green: #57bd6a;  --heo-yellow: #936900;  --heo-yellow-op: #d99c001a;  --heo-orange: #e38100;  --heo-purple: #7a60d2;  --heo-fontcolor: #363636;  --heo-background: #f7f9fe;  --heo-reverse: #000;  --heo-maskbg: rgba(255, 255, 255, 0.6);  --heo-maskbgdeep: rgba(255, 255, 255, 0.85);  --heo-hovertext: var(--heo-main);  --heo-ahoverbg: #f7f7fa;  --heo-lighttext: var(--heo-main);  --heo-secondtext: rgba(60, 60, 67, 0.8);  --heo-scrollbar: rgba(60, 60, 67, 0.4);  --heo-card-btn-bg: #edf0f7;  --heo-post-blockquote-bg: #fafcff;  --heo-post-tabs-bg: #f2f5f8;  --heo-secondbg: #f7f7f9;  --heo-shadow-nav: 0 5px 12px -5px rgba(102, 68, 68, 0.05);  --heo-card-bg: #fff;  --heo-card-bg-op: var(--heo-black-op);  --heo-card-bg-none: rgba(255, 255, 255, 0);  --heo-shadow-lightblack: 0 5px 12px -5px rgba(102, 68, 68, 0);  --heo-shadow-light2black: 0 5px 12px -5px rgba(102, 68, 68, 0);  --heo-card-border: #e3e8f7;  --heo-shadow-border: 0 8px 16px -4px #2c2d300c;  --style-border: 1px solid var(--heo-card-border);  --style-border-always: 1px solid var(--heo-card-border);  --style-border-hover: 1px solid var(--heo-main);  --style-border-hover-always: 1px solid var(--heo-main);  --style-border-dashed: 1px dashed var(--heo-theme-op);  --style-border-forever: 2px solid var(--heo-main);}[data-theme="dark"] {  --heo-theme: #ffc848;  --heo-theme-op: #f2b94b23;  --heo-theme-op-deep: #f2b94bdd;  --heo-theme-none: #f2b94b00;  --heo-blue: #0084ff;  --heo-red: #ff3842;  --heo-pink: #d44040;  --heo-green: #3e9f50;  --heo-purple: #7a60d2;  --heo-yellow: #ffc93e;  --heo-yellow-op: #ffc93e30;  --heo-orange: #ff953e;  --heo-fontcolor: #f7f7fa;  --heo-background: #18171d;  --heo-reverse: #fff;  --heo-maskbg: rgba(0, 0, 0, 0.6);  --heo-maskbgdeep: rgba(0, 0, 0, 0.85);  --heo-hovertext: #0a84ff;  --heo-ahoverbg: #fff;  --heo-lighttext: var(--heo-theme);  --heo-secondtext: #a1a2b8;  --heo-scrollbar: rgba(200, 200, 223, 0.4);  --heo-card-btn-bg: #30343f;  --heo-post-blockquote-bg: #000;  --heo-post-tabs-bg: #121212;  --heo-secondbg: #21232a;  --heo-shadow-nav: 0 5px 20px 0px rgba(28, 28, 28, 0.4);  --heo-card-bg: #1b1c20;  --heo-card-bg-op: var(--heo-white-op);  --heo-card-bg-none: #1d1b2600;  --heo-shadow-lightblack: 0 5px 12px -5px rgba(102, 68, 68, 0);  --heo-shadow-light2black: 0 5px 12px -5px rgba(102, 68, 68, 0);  --heo-card-border: #3d3d3f;  --heo-shadow-border: 0 8px 16px -4px #00000050;  --style-border: 1px solid var(--heo-card-border);  --style-border-always: 1px solid var(--heo-card-border);  --style-border-hover: 1px solid var(--heo-theme);  --style-border-hover-always: 1px solid var(--heo-theme);  --style-border-dashed: 1px dashed var(--heo-theme-op);  --style-border-forever: 2px solid var(--heo-lighttext);}@media screen and (max-width: 768px) {  :root {    --style-border: 1px solid var(--heo-none);    --style-border-hover: 1px solid var(--heo-none);  }}@keyframes barrageIn {  0% {    transform: translateY(20px);    opacity: 0;  }  100% {    transform: translateY(0);    opacity: 1;  }}@keyframes barrageOut {  0% {    transform: translateY(0);    opacity: 1;  }  100% {    transform: translateY(20px);    opacity: 0;  }}i.heofont {  font-size: 22px;  line-height: 1;}#page img {  border-radius: 12px;}#page p a:not(.headerlink) {  text-decoration: none;  border-bottom: 2px solid var(--heo-lighttext);  font-weight: 700;  padding: 0 4px;  border-radius: 4px 4px 0 0;}#page p a:hover {  text-decoration: none;}html {  line-height: 1.15;  text-size-adjust: 100%;}main {  display: block;}h1 {  font-size: 2em;  margin: 0.67em 0;}hr {  box-sizing: content-box;  height: 0;  overflow: visible;}pre {  font-family: monospace, monospace;}a {  background-color: transparent;  color: var(--heo-fontcolor);  text-decoration: none;  transition: all 0.2s ease 0s;  overflow-wrap: break-word;  -webkit-user-drag: none;}abbr[title] {  border-bottom: none;  text-decoration: underline dotted;}b,strong {  font-weight: bolder;}code,kbd,samp {  font-family: monospace, monospace;  font-size: 1em;}small {  font-size: 80%;}sub,sup {  font-size: 75%;  line-height: 0;  position: relative;  vertical-align: baseline;}sub {  bottom: -0.25em;}sup {  top: -0.5em;}button,input,optgroup,select,textarea {  font-family: inherit;  font-size: 100%;  line-height: 1.15;  margin: 0;}button,input {  overflow: visible;}button,select {  text-transform: none;}[type="button"],[type="reset"],[type="submit"],button {  appearance: button;}fieldset {  padding: 0.35em 0.75em 0.625em;}legend {  box-sizing: border-box;  color: inherit;  display: table;  max-width: 100%;  padding: 0;  white-space: normal;}progress {  vertical-align: baseline;}textarea {  overflow: auto;}[type="checkbox"],[type="radio"] {  box-sizing: border-box;  padding: 0;}[type="number"]::-webkit-inner-spin-button,[type="number"]::-webkit-outer-spin-button {  height: auto;}[type="search"] {  appearance: textfield;  outline-offset: -2px;}[type="search"]::-webkit-search-decoration {  appearance: none;}input[type="checkbox"] + label::before {  content: "";  display: inline-block;  width: 16px;  height: 16px;  border: 1px solid #999;  background-color: #fff;  margin-right: 5px;  vertical-align: middle;}::-webkit-file-upload-button {  appearance: button;  font: inherit;}summary {  display: list-item;}template {  display: none;}[hidden] {  display: none;}#aside-content  .card-archives  ul.card-archive-list  > .card-archive-list-item  a  span,#aside-content  .card-categories  ul.card-category-list  > .card-category-list-item  a  span,#aside-content .card-info .card-info-data > .card-info-data-item a .headline,#pagination .next_info,#pagination .prev_info,#sidebar #sidebar-menus .menus_items .site-page,#sidebar #sidebar-menus .site-data .data-item .data-item-link > a > div,.flink#article-container .flink-list > .flink-list-item a .flink-item-desc,.flink#article-container .flink-list > .flink-list-item a .flink-item-name,.limit-one-line {  text-overflow: ellipsis;  white-space: nowrap;}#aside-content .aside-list > .aside-list-item .content > .comment,#aside-content .aside-list > .aside-list-item .content > .name,#aside-content .aside-list > .aside-list-item .content > .title,#error-wrap .error-content .error-info .error_subtitle,#post-info .post-title,#recent-posts > .recent-post-item > .recent-post-info > .article-title,#recent-posts > .recent-post-item > .recent-post-info > .content,.article-sort-item-title,.limit-more-line,.relatedPosts > .relatedPosts-list .content .title,figure.gallery-group .gallery-group-name,figure.gallery-group p {  display: -webkit-box;  -webkit-box-orient: vertical;}#aside-content .aside-list > .aside-list-item .content > .title {  overflow: hidden;}#article-container h1::before,#article-container h2::before,#article-container h3::before,#article-container h4::before,#article-container h5::before,#article-container h6::before,#post .post-copyright::before,#post .post-outdate-notice::before,.fontawesomeIcon,.note:not(.no-icon)::before {  display: inline-block;  font-weight: 600;  font-style: normal;  font-variant: normal;  font-family: heofont;  text-rendering: auto;  -webkit-font-smoothing: antialiased;}.card-announcement-animation {  color: red;  animation: 0.8s linear 0s infinite normal none running announ_animation;}.scroll-down-effects {  animation: 1.5s ease 0s infinite normal none running scroll-down-effect;}.reward-main {  animation: 0.3s ease 0.1s 1 normal both running donate_effcet;}@-webkit-keyframes scroll-down-effect {  0% {    top: 0;    opacity: 0.4;  }  50% {    top: -16px;    opacity: 1;    filter: none;  }  100% {    top: 0;    opacity: 0.4;  }}@keyframes scroll-down-effect {  0% {    top: 0;    opacity: 0.4;  }  50% {    top: -16px;    opacity: 1;    filter: none;  }  100% {    top: 0;    opacity: 0.4;  }}@-webkit-keyframes header-effect {  0% {    opacity: 0;    transform: translateY(-50px);  }  100% {    opacity: 1;    filter: none;    transform: translateY(0);  }}@keyframes header-effect {  0% {    opacity: 0;    transform: translateY(-50px);  }  100% {    opacity: 1;    filter: none;    transform: translateY(0);  }}@-webkit-keyframes headerNoOpacity {  0% {    transform: translateY(-50px);  }  100% {    transform: translateY(0);  }}@keyframes headerNoOpacity {  0% {    transform: translateY(-50px);  }  100% {    transform: translateY(0);  }}@-webkit-keyframes bottom-top {  0% {    opacity: 0;    margin-top: 50px;  }  100% {    opacity: 1;    filter: none;    margin-top: 0;  }}@keyframes bottom-top {  0% {    opacity: 0;    margin-top: 50px;  }  100% {    opacity: 1;    filter: none;    margin-top: 0;  }}@-webkit-keyframes titlescale {  0% {    opacity: 0;    transform: scale(0.7);  }  100% {    opacity: 1;    filter: none;    transform: scale(1);  }}@keyframes titlescale {  0% {    opacity: 0;    transform: scale(0.7);  }  100% {    opacity: 1;    filter: none;    transform: scale(1);  }}@-webkit-keyframes search_close {  0% {    transform: translateY(0);    opacity: 1;  }  100% {    transform: translateY(20px);    opacity: 0;  }}@keyframes search_close {  0% {    transform: translateY(0);    opacity: 1;  }  100% {    transform: translateY(20px);    opacity: 0;  }}@-webkit-keyframes to_show {  0% {    opacity: 0;  }  100% {    opacity: 1;    filter: none;  }}@keyframes to_show {  0% {    opacity: 0;  }  100% {    opacity: 1;    filter: none;  }}@-webkit-keyframes to_hide {  0% {    opacity: 1;    filter: none;  }  100% {    opacity: 0;  }}@keyframes to_hide {  0% {    opacity: 1;    filter: none;  }  100% {    opacity: 0;  }}@-webkit-keyframes ribbon_to_show {  0% {    opacity: 0;  }  100% {    opacity: 0.6;  }}@keyframes ribbon_to_show {  0% {    opacity: 0;  }  100% {    opacity: 0.6;  }}@-webkit-keyframes avatar_turn_around {  0% {    transform: rotate(0);  }  100% {    transform: rotate(360deg);  }}@keyframes avatar_turn_around {  0% {    transform: rotate(0);  }  100% {    transform: rotate(360deg);  }}@-webkit-keyframes sub_menus {  0% {    opacity: 0;    transform: translateY(-10px) scale(0);  }  70% {    opacity: 0;    transform: translateY(-5px) scale(1);  }  100% {    opacity: 1;    filter: none;    transform: translateY(0);  }}@keyframes sub_menus {  0% {    opacity: 0;    transform: translateY(-10px);  }  30% {    transform: translateY(-5px);  }  100% {    opacity: 1;    filter: none;    transform: translateY(0);  }}@-webkit-keyframes donate_effcet {  0% {    opacity: 0;    transform: translateY(-20px);  }  100% {    opacity: 1;    filter: none;    transform: translateY(0);  }}@keyframes donate_effcet {  0% {    opacity: 0;    transform: translateY(-20px);  }  100% {    opacity: 1;    filter: none;    transform: translateY(0);  }}@-webkit-keyframes announ_animation {  0%,  100% {    transform: scale(1);    filter: blur(0);  }  50% {    transform: scale(1.2);    filter: blur(20px);  }}@keyframes announ_animation {  0%,  100% {    transform: scale(1);    filter: blur(0);  }  50% {    transform: scale(1.2);    filter: blur(20px);  }}@-webkit-keyframes sidebarItem {  0% {    transform: translateX(200px);  }  100% {    transform: translateX(0);  }}@keyframes sidebarItem {  0% {    transform: translateX(200px);  }  100% {    transform: translateX(0);  }}@keyframes heo-spin {  0% {    transform: rotate(0);  }  100% {    transform: rotate(360deg);  }}:root {  --global-bg: #fff;  --hr-border: #97bcfb;  --hr-before-color: #6ea2f9;  --search-bg: #f6f8fa;  --search-input-color: #4c4948;  --search-result-title: #4c4948;  --preloader-bg: #37474f;  --preloader-color: #fff;  --tab-border-color: #f0f0f0;  --tab-botton-bg: #f0f0f0;  --tab-botton-color: #1f2d3d;  --tab-button-hover-bg: #dcdcdc;  --tab-button-active-bg: #fff;  --sidebar-bg: #f6f8fa;  --btn-hover-color: #ff7242;  --btn-color: #fff;  --btn-bg: #307af6;  --text-bg-hover: #307af6;  --light-grey: #eee;  --text-highlight-color: #1f2d3d;  --blockquote-color: #6a737d;  --blockquote-bg: rgba(73, 177, 245, 0.1);  --reward-pop: #f5f5f5;  --toc-link-color: #666261;  --card-box-shadow: 0 3px 8px 6px rgba(7, 17, 27, 0.06);  --card-hover-box-shadow: 0 3px 8px 6px rgba(7, 17, 27, 0.15);}html {  height: 100%;  font-size: 20px;}body {  position: relative;  min-height: 100%;  background: var(--heo-background);  color: var(--heo-fontcolor);  font-size: 16px;  font-family: "PingFang SC", "Hiragino Sans GB", "Microsoft YaHei";  line-height: 2;  -webkit-tap-highlight-color: transparent;  margin: 0;}input::placeholder {  color: var(--heo-fontcolor);}h1,h2,h3,h4,h5,h6 {  position: relative;  margin: 1rem 0 0.7rem;  color: var(--heo-fontcolor);  font-weight: 700;}h1 code,h2 code,h3 code,h4 code,h5 code,h6 code {  font-size: inherit !important;}* {  box-sizing: border-box;}hr {  position: relative;  margin: 2rem auto;  border: 2px dashed var(--hr-border);}.table-wrap {  overflow-x: scroll;  margin: 0 0 1rem;}table {  display: table;  width: 100%;  border-spacing: 0;  border-collapse: collapse;  empty-cells: show;}table thead {  background: rgba(153, 169, 191, 0.1);}table td,table th {  padding: 0.3rem 0.6rem;  border: 1px solid var(--light-grey);  vertical-align: middle;}::selection {  background: #0079ff;  color: #f7f7f7;}.fa-spin {  animation: heo-spin 1.2s linear infinite;  opacity: 0.6;}button {  padding: 0;  outline: 0;  border: none;  background: 0 0;  cursor: pointer;}a:hover {  color: var(--heo-lighttext);}#aside-content .author-info__description,#aside-content .author-info__name,#site-name,#site-subtitle,#site-title {  font-family: "PingFang SC", "Hiragino Sans GB", "Microsoft YaHei", sans-serif;}.is-center {  text-align: center;  display: flex;  flex-wrap: wrap;  justify-content: center;  flex-direction: row;  align-items: center;}.card-info-avatar.is-center {  flex-direction: column;  display: flex;  align-items: flex-start;}.copy-true {  user-select: all;}.pull-left {  float: left;}.pull-right {  float: right;}.button--animated {  position: relative;  z-index: 1;  transition: color 1s ease 0s;}.button--animated::before {  position: absolute;  inset: 0;  z-index: -1;  background: var(--btn-hover-color);  content: "";  transition: transform 0.5s ease-out 0s;  transform: scaleX(0);  transform-origin: 0 50%;}.button--animated:hover::before {  transition-timing-function: cubic-bezier(0.45, 1.64, 0.47, 0.66);  transform: scaleX(1);}img {  max-width: 100%;  transition: all 0.2s ease 0s;  border-style: none;}img:not([src]),img[src=""] {  opacity: 0;}.img-alt {  margin: -0.5rem 0 0.5rem;  color: #858585;}.img-alt:hover {  text-decoration: none !important;}:root {  --hl-color: #eff;  --hl-bg: #212121;  --hltools-bg: #1c1c1c;  --hltools-color: rgba(238, 255, 255, 0.8);  --hlnumber-bg: #212121;  --hlnumber-color: rgba(238, 255, 255, 0.5);  --hlscrollbar-bg: #121212;  --hlexpand-bg: linear-gradient(    180deg,    rgba(33, 33, 33, 0.6),    rgba(33, 33, 33, 0.9)  );}figure.highlight table::-webkit-scrollbar-thumb {  background: var(--hlscrollbar-bg);}figure.highlight pre .deletion {  color: #bf42bf;}figure.highlight pre .addition {  color: #105ede;}figure.highlight pre .meta {  color: #c792ea;}figure.highlight pre .comment {  color: #969896;}figure.highlight pre .attribute,figure.highlight pre .css .class,figure.highlight pre .css .id,figure.highlight pre .css .pseudo,figure.highlight pre .html .doctype,figure.highlight pre .regexp,figure.highlight pre .ruby .constant,figure.highlight pre .tag .name,figure.highlight pre .variable,figure.highlight pre .xml .doctype,figure.highlight pre .xml .pi,figure.highlight pre .xml .tag .title {  color: var(--heo-red);}figure.highlight pre .tag {  color: var(--heo-pink);}figure.highlight pre .command,figure.highlight pre .constant,figure.highlight pre .literal,figure.highlight pre .number,figure.highlight pre .params,figure.highlight pre .preprocessor {  color: var(--heo-orange);}figure.highlight pre .built_in {  color: var(--heo-yellow);}figure.highlight pre .css .rules .attribute,figure.highlight pre .formula,figure.highlight pre .header,figure.highlight pre .inheritance,figure.highlight pre .number,figure.highlight pre .ruby .class .title,figure.highlight pre .ruby .symbol,figure.highlight pre .special,figure.highlight pre .string,figure.highlight pre .value,figure.highlight pre .xml .cdata {  color: var(--heo-green);}figure.highlight pre .css .hexcolor,figure.highlight pre .keyword,figure.highlight pre .title {  color: #3eb1df;}figure.highlight pre .coffeescript .title,figure.highlight pre .function,figure.highlight pre .javascript .title,figure.highlight pre .perl .sub,figure.highlight pre .python .decorator,figure.highlight pre .python .title,figure.highlight pre .ruby .function .title,figure.highlight pre .ruby .title .keyword {  color: var(--heo-blue);}figure.highlight pre .javascript .function,figure.highlight pre .tag .attr {  color: #c792ea;}#article-container figure.highlight .line.marked {  background-color: rgba(97, 97, 97, 0.314);}#article-container figure.highlight table {  display: block;  border: none;  overflow: scroll;}#article-container figure.highlight table td {  padding: 0;  border: none;  height: 100%;}#article-container figure.highlight table td.code {  width: 100%;  display: flex;  position: relative;}#article-container figure.highlight .code pre {  padding-right: 0.5rem;  padding-left: 0.5rem;  width: 100%;}#article-container figure.highlight,#article-container pre {  overflow: auto;  margin: 0 0 1rem;  padding: 0;  line-height: 1.6;}blockquote {  margin: 0 0 1rem;  padding: 0.1rem 0.8rem;  border-left: 0.2rem solid #49b1f5;  background-color: var(--blockquote-bg);  color: var(--blockquote-color);}blockquote a {  word-break: break-all;}blockquote p {  padding: 0.5rem 0;  margin: 0 !important;}blockquote footer {  padding: 0 0 0.5rem;}blockquote footer cite::before {  padding: 0 0.3em;  content: "—";}#article-container code,#article-container pre {  font-family: consolas, Menlo, "PingFang SC", "Microsoft YaHei", sans-serif !important;}#article-container code {  padding: 0.1rem 0.2rem;  background: rgba(27, 31, 35, 0.05);  color: #f47466;}#article-container pre code {  padding: 0;  background: 0 0;  color: var(--hl-color);  text-shadow: none;}#article-container figure.highlight {  position: relative;}#article-container figure.highlight pre {  margin: 0;  padding: 8px 0;  border: none;}#article-container figure.highlight .caption,#article-container figure.highlight figcaption {  padding: 0.3rem 0 0.1rem 0.7rem;  font-size: 16px;  line-height: 1em;}#article-container figure.highlight .caption a,#article-container figure.highlight figcaption a {  float: right;  padding-right: 10px;  color: var(--hl-color);}#article-container figure.highlight .caption a:hover,#article-container figure.highlight figcaption a:hover {  border-bottom-color: var(--hl-color);}#article-container .highlight-tools {  position: relative;  display: flex;  -webkit-box-align: center;  align-items: center;  overflow: hidden;  min-height: 1.2rem;  height: 2.15em;  background: var(--hltools-bg);  color: var(--hltools-color);  font-size: 16px;}.highlight-tools .icon-file-copy-fill {  position: absolute;  right: 0.7rem;  cursor: pointer;  transition: color 0.2s;  font-size: 18px;}.highlight-tools .icon-file-copy-fill:hover {  color: var(--heo-main);}#article-container .highlight-tools.closed + table {  display: none;}#article-container .highlight-tools .expand {  position: absolute;  padding: 0.4rem 0.3rem;  cursor: pointer;  transition: transform 0.3s ease 0s;}#article-container .highlight-tools .expand + .code-lang {  left: 1.7rem;}#article-container .highlight-tools .expand.closed {  transition: all 0.3s ease 0s;  transform: rotate(-90deg) !important;}#article-container .highlight-tools .code-lang {  position: absolute;  left: 0.7rem;  text-transform: uppercase;  font-weight: 700;  font-size: 1.15em;  user-select: none;}#article-container .highlight-tools .copy-notice {  position: absolute;  right: 1.7rem;  opacity: 0;  transition: opacity 0.4s ease 0s;}#article-container .highlight-tools .copy-button {  position: absolute;  right: 0.7rem;  cursor: pointer;  transition: color 0.2s ease 0s;}#article-container .highlight-tools .copy-button:hover {  color: #307af6;}#article-container .gist table {  width: auto;}#article-container .gist table td {  border: none;}#article-container .code-expand-btn.expand-done {  display: none !important;}#article-container .code-expand-btn:not(.expand-done) ~ pre,#article-container .code-expand-btn:not(.expand-done) ~ table {  overflow: hidden;  height: 400px;}@-webkit-keyframes code-expand-key {  0% {    opacity: 0.6;  }  50% {    opacity: 0.1;  }  100% {    opacity: 0.6;  }}@keyframes code-expand-key {  0% {    opacity: 0.6;  }  50% {    opacity: 0.1;  }  100% {    opacity: 0.6;  }}@keyframes slide-in {  from {    transform: translateY(20px);    opacity: 0;  }  to {    transform: translateY(0);    opacity: 1;  }}@keyframes slide-in-op {  from {    opacity: 0;  }  to {    opacity: 1;  }}.article-sort {  margin-left: 0.5rem;  padding-left: 1rem;  border-left: 2px solid #92b9fa;}.article-sort-title::before {  position: absolute;  top: calc((100% - 1.8rem) / 2);  left: -0.45rem;  z-index: 1;  width: 0.5rem;  height: 0.5rem;  border: 0.25rem solid #307af6;  border-radius: 0.5rem;  background: var(--heo-card-bg);  content: "";  line-height: 0.5rem;  transition: all 0.2s ease-in-out 0s;}.article-sort-title::after {  position: absolute;  bottom: 0;  left: 0;  z-index: 0;  width: 0.1rem;  height: 1.5em;  background: #92b9fa;  content: "";}.article-sort-item {  position: relative;  display: flex;  -webkit-box-align: center;  align-items: center;  margin: 0 0 1rem 0.5rem;  transition: all 0.2s ease-in-out 0s;}.article-sort-item:hover::before {  border-color: #ff7242;}.article-sort-item::before {  position: absolute;  left: calc(-1rem - 17px);  width: 0.3rem;  height: 0.3rem;  border: 0.15rem solid #307af6;  border-radius: 0.3rem;  background: var(--heo-card-bg);  content: "";  transition: all 0.2s ease-in-out 0s;}.article-sort-item.no-article-cover {  height: 80px;}.article-sort-item.no-article-cover .article-sort-item-info {  padding: 0;}.article-sort-item.year {  font-size: 1.43em;}.article-sort-item.year:hover::before {  border-color: #307af6;}.article-sort-item.year::before {  border-color: #ff7242;}.article-sort-item-time {  color: #858585;  font-size: 95%;}.article-sort-item-time time {  padding-left: 0.3rem;  cursor: default;}.article-sort-item-title {  color: var(--heo-fontcolor);  font-size: 1.1em;  transition: all 0.3s ease 0s;  -webkit-line-clamp: 2;}.article-sort-item-title:hover {  color: #307af6;  transform: translateX(10px);}.article-sort-item-img {  overflow: hidden;  width: 80px;  height: 80px;}.article-sort-item-img img {  width: 100%;  height: 100%;  transition: all 0.6s ease 0s;  object-fit: cover;}.article-sort-item-img img:hover {  transform: scale(1.1);}.article-sort-item-info {  -webkit-box-flex: 1;  flex: 1 1 0%;  padding: 0 0.8rem;}#page .category-lists {  padding: 1rem 0 1.5rem;}@media screen and (max-width: 768px) {  #page .category-lists {    padding: 0;  }}#page .category-lists .category-title {  font-size: 2.57em;}@media screen and (max-width: 768px) {  #page .category-lists .category-title {    font-size: 2em;  }}#page .category-lists .category-list a {  color: var(--heo-fontcolor);}#page .category-lists .category-list a:hover {  color: #307af6;}#page .category-lists .category-list .category-list-count {  margin-left: 0.4rem;  color: #858585;}#page .category-lists .category-list .category-list-count::before {  content: "(";}#page .category-lists .category-list .category-list-count::after {  content: ")";}#page .category-lists ul {  margin-top: 0.4rem;  padding: 0 0 0 1rem;  list-style: none;  counter-reset: li 0;}#page .category-lists ul ul {  padding-left: 0.2rem;}#page .category-lists ul li {  position: relative;  margin: 0.3rem 0;  padding: 0.12em 0.4em 0.12em 1.4em;}#page .category-lists ul li::before {  position: absolute;  left: 0;  cursor: pointer;  transition: all 0.3s ease-out 0s;  top: 0.7em;  width: 0.43em;  height: 0.43em;  border: 0.215em solid #307af6;  border-radius: 0.43em;  background: 0 0;  content: "";}#page .category-lists ul li:hover::before {  border-color: #ff7242;}.layout {  display: flex;  margin: 0 auto;  padding: 2rem 15px;  max-width: 1200px;}@media screen and (max-width: 900px) {  .layout {    -webkit-box-orient: vertical;    flex-direction: column;  }}@media screen and (max-width: 768px) {  .layout {    padding: 1rem 5px;  }}@media screen and (min-width: 2000px) {  .layout {    max-width: 1500px;  }}@media screen and (max-width: 768px) {  .layout > div:first-child:not(.recent-posts) {    padding: 1.8rem 0.7rem !important;  }}.layout > div:first-child {  width: 75%;  transition: all 0.3s ease 0s;}@media screen and (max-width: 1200px) {  .layout > div:first-child {    width: 100% !important;  }}.layout.hide-aside {  max-width: 1000px;}@media screen and (min-width: 2000px) {  .layout.hide-aside {    max-width: 1300px;  }}.layout.hide-aside > div {  width: 100% !important;}.flink#article-container .flink-desc {  margin: 0.2rem 0 0.5rem;}.flink#article-container .flink-list {  overflow: auto;  padding: 10px 10px 0;  text-align: center;}.flink#article-container .flink-list > .flink-list-item {  position: relative;  float: left;  overflow: hidden;  margin: 15px 7px;  width: calc(25% - 12px);  height: 90px;  border-radius: 5px;  line-height: 17px;  transform: translateZ(0);  transition: all 0.3s ease 0s;}.flink#article-container .flink-list.mini > .flink-list-item {  height: 60px;}@media screen and (max-width: 1200px) {  .flink#article-container .flink-list > .flink-list-item {    width: calc(25% - 12px) !important;  }}@media screen and (max-width: 1024px) {  .flink#article-container .flink-list > .flink-list-item {    width: calc(33.3333% - 12px) !important;  }}@media screen and (max-width: 768px) {  .flink#article-container .flink-list > .flink-list-item {    width: calc(50% - 12px) !important;  }}@media screen and (max-width: 600px) {  .flink#article-container .flink-list > .flink-list-item {    width: calc(100% - 12px) !important;  }}.flink#article-container .flink-list > .flink-list-item:hover {  background: #006cf2;  transform: scale(1.05);}.flink#article-container .flink-list > .flink-list-item a {  color: var(--heo-fontcolor);  text-decoration: none;}.flink#article-container .flink-list > .flink-list-item a img {  float: left;  margin: 15px 10px;  width: 60px;  height: 60px;  border-radius: 35px;  transition: all 0.3s ease 0s;}.flink#article-container .flink-list.mini > .flink-list-item a img {  width: 30px;  height: 30px;  min-width: 30px;  min-height: 30px;}.flink#article-container .flink-list > .flink-list-item a .img-alt {  display: none;}.flink#article-container .flink-list > .flink-list-item a .flink-item-name {  display: block;  padding: 0 10px 0 0;  font-weight: 700;  font-size: 1.43em;  max-width: calc(100% - 12px);  overflow: hidden;  text-overflow: ellipsis;  white-space: nowrap;}.flink#article-container .flink-list > .flink-list-item a .flink-item-desc {  display: block;  padding: 4px 10px 0 0;  height: 50px;  font-size: 0.93em;}.flink#article-container  .flink-list.mini  > .flink-list-item  a  .flink-item-desc {  display: none;}.flink#article-container .site-card-group {  display: flex;  flex-wrap: wrap;  -webkit-box-pack: start;  justify-content: flex-start;  margin: -8px;  -webkit-box-align: stretch;  align-items: stretch;}.flink#article-container .site-card {  margin: 8px;  width: calc(20% - 16px);  display: block;  line-height: 1.4;  height: 100%;}@media screen and (max-width: 1200px) {  .flink#article-container .site-card {    width: calc(20% - 16px) !important;  }}@media screen and (max-width: 1024px) {  .flink#article-container .site-card {    width: calc(25% - 16px) !important;  }}@media screen and (max-width: 768px) {  .flink#article-container .site-card {    width: calc(33.3333% - 16px) !important;  }}@media screen and (max-width: 600px) {  .flink#article-container .site-card {    width: calc(50% - 16px) !important;  }}.flink#article-container .site-card .img {  width: 100%;  height: 120px;  overflow: hidden;  border-radius: 12px 12px 0 0;  background: #f6f6f6;}@media screen and (max-width: 500px) {  .flink#article-container .site-card .img {    height: 100px;  }}.flink#article-container .site-card .img img {  width: 100%;  height: 100%;  transition: transform 2s ease 0s;  object-fit: cover;}.flink#article-container .site-card .info {  margin-top: 8px;}.flink#article-container .site-card .info img {  width: 32px;  height: 32px;  border-radius: 16px;  float: left;  margin-right: 8px;  margin-top: 2px;}.flink#article-container .site-card .info span {  display: block;}.flink#article-container .site-card .info .title {  font-weight: 600;  color: #444;  display: -webkit-box;  -webkit-box-orient: vertical;  overflow: hidden;  -webkit-line-clamp: 1;  transition: all 0.3s ease 0s;}.flink#article-container .site-card .info .desc {  overflow-wrap: break-word;  line-height: 1.2;  color: #888;  display: -webkit-box;  -webkit-box-orient: vertical;  overflow: hidden;  -webkit-line-clamp: 2;}.flink#article-container .site-card .img {  transition: all 0.3s ease 0s;}.flink#article-container .site-card .img-alt {  display: none;}.flink#article-container .site-card:hover .info .title {  color: #ff5722;}@media screen and (max-width: 768px) {  #recent-posts > .recent-post-item {    border-radius: 12px 12px 8px 8px;  }}#recent-posts > .recent-post-item:hover {  box-shadow: var(--card-hover-box-shadow);}#recent-posts > .recent-post-item:hover img.post_bg {  transform: scale(1.1);}#recent-posts > .recent-post-item.ads-wrap {  display: block !important;  height: auto !important;}#recent-posts > .recent-post-item .post_cover {  overflow: hidden;  width: 45%;  height: 100%;  -webkit-mask-image: -webkit-radial-gradient(center, #fff, #000);}#recent-posts > .recent-post-item .post_cover img.post_bg {  width: 100%;  height: 100%;  transition: all 0.6s ease 0s;  object-fit: cover;}#recent-posts > .recent-post-item .post_cover img.post_bg:hover {  transform: scale(1.1);}#recent-posts > .recent-post-item > .recent-post-info.no-cover {  width: 100%;}#recent-posts > .recent-post-item > .recent-post-info > .article-title {  margin-bottom: 0.3rem;  color: var(--text-highlight-color);  font-size: 1.4em;  line-height: 1.4;  transition: all 0.2s ease-in-out 0s;  -webkit-line-clamp: 2;}#recent-posts > .recent-post-item > .recent-post-info > .article-title:hover {  color: #307af6;}#recent-posts > .recent-post-item > .recent-post-info > .article-meta-wrap {  color: var(--heo-fontcolor);  font-size: 0.7rem;  user-select: none;}#recent-posts  > .recent-post-item  > .recent-post-info  > .article-meta-wrap  > .post-meta-date {  cursor: default;}#recent-posts  > .recent-post-item  > .recent-post-info  > .article-meta-wrap  .sticky {  color: #ff7242;}#recent-posts > .recent-post-item > .recent-post-info > .article-meta-wrap i {  margin: 0 0.2rem 0 0;}#recent-posts  > .recent-post-item  > .recent-post-info  > .article-meta-wrap  .article-meta-label {  padding-right: 0.2rem;}#recent-posts  > .recent-post-item  > .recent-post-info  > .article-meta-wrap  .article-meta__separator {  margin: 0 0.3rem;}#recent-posts  > .recent-post-item  > .recent-post-info  > .article-meta-wrap  .article-meta__link {  margin: 0 0.2rem;}#recent-posts  > .recent-post-item  > .recent-post-info  > .article-meta-wrap  .fa-angle-right {  margin: 0 0.2rem;}#recent-posts  > .recent-post-item  > .recent-post-info  > .article-meta-wrap  time {  display: none;}#recent-posts > .recent-post-item > .recent-post-info > .content {  margin-top: 0.3rem;  -webkit-line-clamp: 3;}@media screen and (max-width: 768px) {  #recent-posts .recent-post-item {    -webkit-box-orient: vertical;    flex-direction: column;    height: auto !important;  }  #recent-posts .recent-post-item .post_cover {    width: 100%;    height: 230px;    border-radius: 5px 8px 0 0;    -webkit-box-ordinal-group: 1 !important;    order: 1 !important;  }  #recent-posts .recent-post-item .recent-post-info {    padding: 1rem 1rem 1.5rem;    width: 100%;    -webkit-box-ordinal-group: 2 !important;    order: 2 !important;  }  #recent-posts .recent-post-item .recent-post-info.no-cover {    padding: 1.5rem 1rem;  }  #recent-posts .recent-post-item .recent-post-info .article-title {    font-size: 1.43em;  }  #recent-posts .recent-post-item .recent-post-info .content {    height: auto;  }}.tag-cloud-list a {  display: inline-block;  padding: 0 0.4rem;  transition: all 0.3s ease 0s;}.tag-cloud-list a:hover {  transform: scale(1.1);  color: #307af6 !important;}@media screen and (max-width: 768px) {  .tag-cloud-list a {    zoom: 0.85;  }}.tag-cloud-title {  font-size: 2.57em;}@media screen and (max-width: 768px) {  .tag-cloud-title {    font-size: 2em;  }}#error-wrap {  display: flex;  justify-content: center;  margin: 0 1rem;  width: 100%;  position: relative;}#error-wrap .error-content {  display: flex;  -webkit-box-orient: horizontal;  flex-direction: row;  -webkit-box-pack: center;  justify-content: center;  -webkit-box-align: center;  align-items: center;  margin: 0 1rem;  height: 18rem;  max-width: 800px;  border-radius: 5px;  background: var(--heo-card-bg);  box-shadow: var(--card-box-shadow);  transition: all 0.3s ease 0s;  border: var(--style-border-always);  position: relative;  width: 100%;}#error-wrap .error-content:hover {  box-shadow: var(--card-hover-box-shadow);}@media screen and (max-width: 768px) {  #error-wrap .error-content {    -webkit-box-orient: vertical;    flex-direction: column;    margin: 0;    height: 25rem;    width: 100%;  }}#error-wrap .error-content .error-img {  -webkit-box-flex: 1;  flex: 1 1 0%;  height: 90%;  width: 600px;  border-top-left-radius: 8px;  border-bottom-left-radius: 8px;  background-color: #307af6;  background-position: center center;  background-size: cover;}@media screen and (max-width: 768px) {  #error-wrap .error-content .error-img {    -webkit-box-flex: 1;    flex: 1 1 0%;    width: 100%;    border-radius: 12px;  }}#error-wrap .error-content .error-info {  -webkit-box-flex: 1;  flex: 1 1 0%;  padding: 0.5rem;  text-align: center;  font-size: 14px;  font-family: "PingFang SC", "Hiragino Sans GB", "Microsoft YaHei", sans-serif;}#error-wrap .error-content .error-info .error_title {  font-size: 9em;  line-height: 1;}@media screen and (max-width: 768px) {  #error-wrap .error-content .error-info {    -webkit-box-flex: 1.1;    flex: 1.1 1 0%;    width: 100%;    padding-bottom: 2rem;  }  #error-wrap .error-content .error-info .error_title {    font-size: 4rem;  }}#error-wrap .error-content .error-info .error_subtitle {  word-break: break-word;  font-size: 1.6em;  -webkit-line-clamp: 2;}#error-wrap .error-content .error-info a {  display: inline-block;  margin-top: 0.5rem;  padding: 0.3rem 1.5rem;  background: var(--btn-bg);  color: var(--btn-color);}#error-wrap .error-content .error-info a i {  padding-right: 0.3rem;}@media screen and (min-width: 900px) {  #aside-content {    padding-left: 15px;  }}@media screen and (max-width: 900px) {  #aside-content {    width: 100%;  }}@media screen and (max-width: 900px) {  #aside-content > .card-widget:first-child {    margin-top: 1rem;  }}@media screen and (max-width: 768px) {  #aside-content .card-widget:not(#card-toc) {    display: none;  }}#aside-content .card-info .avatar-img {  width: 118px;  height: 118px;  right: 0;  top: 0;  border-radius: 500px;  position: absolute;  opacity: 1;  transition: 0.3s;  border: 5px solid var(--heo-white);  overflow: hidden;}.page #aside-content .card-info .avatar-img {  border-color: var(--heo-card-bg);}.author-info__top-group {  display: flex;  height: 28px;  width: 100%;}#aside-content .card-info .author-info__description {  margin-top: -0.3rem;}#aside-content .card-info .card-info-data {  display: table;  margin: 0.7rem 0 0.2rem;  width: 100%;  table-layout: fixed;}#aside-content .card-info .card-info-data > .card-info-data-item {  display: table-cell;}#aside-content .card-info .card-info-data > .card-info-data-item:hover {  background: #000;  border-radius: 5px;}#aside-content .card-info .card-info-data > .card-info-data-item a .headline {  color: var(--heo-fontcolor);  font-size: 1em;}#aside-content .card-info .card-info-data > .card-info-data-item a .length-num {  margin-top: -0.3rem;  color: var(--text-highlight-color);  font-size: 1.4em;}#aside-content .card-info .card-info-social-icons {  margin: 0.3rem 0 -0.3rem;}#aside-content .card-info .card-info-social-icons .social-icon {  margin: 0 0.5rem;  color: var(--heo-fontcolor);  font-size: 1.4em;  cursor: pointer;  display: flex;}#aside-content .card-info .card-info-social-icons i {  transition: all 0.3s ease 0s;  padding: 8px;  border-radius: 32px;}#aside-content .card-info .card-info-social-icons i:hover {  transform: rotate(540deg);  background-color: #000;  cursor: pointer;}#aside-content .card-info #card-info-btn {  display: block;  margin-top: 0.7rem;  background-color: var(--btn-bg);  color: var(--btn-color);  text-align: center;  line-height: 2.4;}#aside-content .card-info #card-info-btn span {  padding-left: 0.5rem;}@media screen and (min-width: 900px) {  #aside-content .sticky_layout {    position: sticky;    top: 20px;    transition: top 0.3s ease 0s;  }}#aside-content .card-tag-cloud a {  display: inline-block;  padding: 0 0.3rem;}#aside-content .card-tag-cloud a:hover {  background-color: #fff;  cursor: pointer;  border-radius: 5px;  color: #307af6 !important;}#aside-content .aside-list > span {  display: block;  margin-bottom: 0.5rem;  text-align: center;}#aside-content .aside-list > .aside-list-item .thumbnail {  overflow: hidden;  width: 2.1em;  height: 2.1em;  margin-top: 4px;}#aside-content .aside-list > .aside-list-item .thumbnail > img {  width: 140%;  height: 140%;  transition: all 0.6s ease 0s;  object-fit: cover;}#aside-content .aside-list > .aside-list-item .thumbnail > img:hover {  transform: scale(1.1);}#aside-content .aside-list > .aside-list-item .content {  -webkit-box-flex: 1;  flex: 1 1 0%;  padding-left: 10px;  word-break: break-all;  display: flex;  flex-direction: column;}#aside-content .aside-list > .aside-list-item .content > .name {  -webkit-line-clamp: 1;}#aside-content .aside-list > .aside-list-item .content > .name,#aside-content .aside-list > .aside-list-item .content > time {  display: block;  color: #858585;  font-size: 85%;}#aside-content .aside-list > .aside-list-item .content > .comment,#aside-content .aside-list > .aside-list-item .content > .title {  color: var(--heo-fontcolor);  font-size: 95%;  line-height: 1.3;  -webkit-line-clamp: 2;}#aside-content .aside-list > .aside-list-item .content > .comment:hover,#aside-content .aside-list > .aside-list-item .content > .title:hover {  color: #307af6;}#aside-content .aside-list > .aside-list-item.no-cover {  min-height: 4.4em;}#aside-content .card-archives ul.card-archive-list,#aside-content .card-categories ul.card-category-list {  margin: 0;  padding: 0;  list-style: none;}#aside-content .card-archives ul.card-archive-list > .card-archive-list-item a,#aside-content  .card-categories  ul.card-category-list  > .card-category-list-item  a {  display: inline-block;  padding: 0.15rem 0.5rem;  width: 100%;  color: var(--heo-fontcolor);  transition: all 0.4s ease 0s;  border-radius: 5px;}#aside-content  .card-archives  ul.card-archive-list  > .card-archive-list-item  a:hover,#aside-content  .card-categories  ul.card-category-list  > .card-category-list-item  a:hover {  padding: 0.15rem 0.85rem;  background-color: #fff;  color: #427bee;  border-radius: 5px;}#aside-content  .card-archives  ul.card-archive-list  > .card-archive-list-item  a  span,#aside-content  .card-categories  ul.card-category-list  > .card-category-list-item  a  span {  display: inline-block;  vertical-align: bottom;}#aside-content  .card-archives  ul.card-archive-list  > .card-archive-list-item  a  span:first-child,#aside-content  .card-categories  ul.card-category-list  > .card-category-list-item  a  span:first-child {  width: 80%;}#aside-content  .card-archives  ul.card-archive-list  > .card-archive-list-item  a  span:last-child,#aside-content  .card-categories  ul.card-category-list  > .card-category-list-item  a  span:last-child {  width: 20%;  text-align: right;}#aside-content .card-categories .card-category-list.child {  padding: 0 0 0 0.8rem;}#aside-content  .card-categories  .card-category-list  > .parent  > a  .card-category-list-name {  width: 70% !important;}#aside-content  .card-categories  .card-category-list  > .parent  > a  .card-category-list-count {  width: calc(30% - 20px);  text-align: right;}#aside-content .card-categories .card-category-list > .parent i {  float: right;  margin-right: -0.35rem;  padding: 0.35rem;  transition: transform 0.3s ease 0s;  transform: rotate(0);}#aside-content .card-categories .card-category-list > .parent i.expand {  transform: rotate(-90deg);}#aside-content .card-webinfo .webinfo .webinfo-item {  display: flex;  -webkit-box-align: center;  align-items: center;  padding: 0.1rem 0.5rem 0;}#aside-content .card-webinfo .webinfo .webinfo-item div:first-child {  -webkit-box-flex: 1;  flex: 1 1 0%;  padding-right: 1rem;}@media screen and (min-width: 901px) {  #aside-content #card-toc {    right: 0 !important;  }}@media screen and (max-width: 900px) {  #aside-content #card-toc {    position: fixed;    right: -100%;    bottom: 30px;    z-index: 100;    max-height: calc(100% - 60px);    width: 300px;    opacity: 0;    transform-origin: right bottom;  }}#aside-content #card-toc .toc-content {  overflow-y: auto;  max-height: calc(100vh - 300px);}@media screen and (max-width: 900px) {  #aside-content #card-toc .toc-content {    max-height: calc(100vh - 140px);  }}#aside-content #card-toc .toc-content .toc-child {  display: none;}@media screen and (max-width: 900px) {  #aside-content #card-toc .toc-content .toc-child {    display: block !important;  }}#aside-content #card-toc .toc-content .toc-item.active .toc-child {  display: block;}#aside-content #card-toc .toc-content li,#aside-content #card-toc .toc-content ol {  list-style: none;}#aside-content #card-toc .toc-content > ol {  padding: 0 !important;}#aside-content #card-toc .toc-content ol {  margin: 0;  padding-left: 0.4rem;}#aside-content #card-toc .toc-content .toc-link {  display: block;  padding-left: 0.3rem;  border-left: 3px solid transparent;  color: var(--toc-link-color);  transition: all 0.2s ease-in-out 0s;}#aside-content #card-toc .toc-content .toc-link.active {  border-left-color: #0061cc;  background: #0079ff;  color: #fff;}#aside-content #card-toc .toc-content::before {  position: absolute;  top: 0.6rem;  right: 1.2rem;  color: #a9a9a9;  content: attr(progress-percentage);  font-style: italic;  font-size: 1.2rem;}#aside-content :only-child > .card-widget {  margin-top: 0;}#aside-content .card-more-btn {  float: right;  color: inherit;}#aside-content .card-more-btn:hover {  animation: 1s ease 0s infinite normal none running more-btn-move;}@media screen and (min-width: 900px) {  html.hide-aside .layout {    -webkit-box-pack: center;    justify-content: center;  }  html.hide-aside .layout > .aside-content {    display: none;  }  html.hide-aside .layout > div:first-child {    width: 100%;  }}.page .sticky_layout {  display: flex;  -webkit-box-orient: vertical;  flex-direction: column;}@-webkit-keyframes more-btn-move {  0%,  100% {    transform: translateX(0);  }  50% {    transform: translateX(3px);  }}@keyframes more-btn-move {  0%,  100% {    transform: translateX(0);  }  50% {    transform: translateX(3px);  }}@-webkit-keyframes toc-open {  0% {    transform: scale(0.7);  }  100% {    transform: scale(1);  }}@keyframes toc-open {  0% {    transform: scale(0.7);  }  100% {    transform: scale(1);  }}@-webkit-keyframes toc-close {  0% {    transform: scale(1);  }  100% {    transform: scale(0.7);  }}@keyframes toc-close {  0% {    transform: scale(1);  }  100% {    transform: scale(0.7);  }}#post-comment .comment-head .comment-headline {  display: inline-block;  vertical-align: middle;  font-weight: 700;  font-size: 20px;}#post-comment .comment-head #comment-switch {  display: inline-block;  float: right;  margin: 0.1rem auto 0;  padding: 0.2rem 0.8rem;  width: max-content;  border-radius: 5px;  background: #f6f8fa;}#post-comment .comment-head #comment-switch .first-comment {  color: #307af6;}#post-comment .comment-head #comment-switch .second-comment {  color: #ff7242;}#post-comment .comment-head #comment-switch .switch-btn {  position: relative;  display: inline-block;  margin: -4px 0.4rem 0;  width: 42px;  height: 22px;  border-radius: 34px;  background-color: #307af6;  vertical-align: middle;  cursor: pointer;  transition: all 0.4s ease 0s;}#post-comment .comment-head #comment-switch .switch-btn::before {  position: absolute;  bottom: 4px;  left: 4px;  width: 14px;  height: 14px;  border-radius: 50%;  background-color: #fff;  content: "";  transition: all 0.4s ease 0s;}#post-comment .comment-head #comment-switch .switch-btn.move {  background-color: #ff7242;}#post-comment .comment-head #comment-switch .switch-btn.move::before {  transform: translateX(20px);}#post-comment .comment-wrap > div:nth-child(2) {  display: none;}#footer {  position: relative;  background: center bottom/cover local #307af6;}#footer-wrap {  position: relative;  padding: 2rem 1rem;  color: var(--light-grey);  text-align: center;}#footer-wrap a {  color: var(--light-grey);  padding: 4px 12px;  border-radius: 5px;}#footer-wrap a:hover {  background-color: #fff;  color: #3b82ff;  cursor: pointer;  border-radius: 5px;}#footer-wrap .footer-separator {  margin: 0 0.2rem;}#footer-wrap .icp-icon {  padding: 0 4px;  vertical-align: text-bottom;  max-height: 1.4em;  width: auto;}#page-header {  position: relative;  width: 100%;  background-position: center center;  background-size: cover;  background-repeat: no-repeat;  transition: all 0.5s ease 0s;}#page-header.full_page {  height: 20rem;  background-attachment: fixed;}#page-header.full_page #site-info {  position: absolute;  top: 7.8rem;  padding: 0 0.5rem;  width: 100%;}#page-header #scroll-down .scroll-down-effects,#page-header #site-subtitle,#page-header #site-title {  text-align: center;  line-height: 1.5;}#page-header #site-title {  margin: 0;  color: var(--heo-white);  font-size: 1.85em;}@media screen and (min-width: 768px) {  #page-header #site-title {    font-size: 2.85em;  }}#page-header #site-subtitle {  color: var(--light-grey);  font-size: 1.15em;}@media screen and (min-width: 768px) {  #page-header #site-subtitle {    font-size: 1.72em;  }}#page-header #site_social_icons {  display: none;  margin: 0 auto;  width: 15rem;  text-align: center;}@media screen and (max-width: 768px) {  #page-header #site_social_icons {    display: block;  }}#page-header #site_social_icons .social-icon {  margin: 0 0.5rem;  color: var(--light-grey);  text-shadow: rgba(0, 0, 0, 0.15) 0.1rem 0.1rem 0.2rem;  font-size: 1.43em;  cursor: pointer;}#page-header #scroll-down {  position: absolute;  bottom: 0;  width: 100%;  cursor: pointer;  display: none;}#page-header #scroll-down .scroll-down-effects {  position: relative;  width: 100%;  color: var(--light-grey);  font-size: 30px;}#page-header.not-home-page {  height: 20rem;}@media screen and (max-width: 768px) {  #page-header.not-home-page {    height: 14rem;  }}#page-header #page-site-info {  position: absolute;  top: 10rem;  padding: 0 0.5rem;  width: 100%;}@media screen and (max-width: 768px) {  #page-header #page-site-info {    top: 7rem;  }}#page-header.post-bg {  height: 20rem;}@media screen and (max-width: 768px) {  #page-header.post-bg {    height: 18rem;    background-color: var(--heo-main) !important;    transition: 0s;  }}#page-header #post-info {  position: absolute;  padding: 0 8%;  width: 100%;  text-align: center;}@media screen and (max-width: 900px) {  #page-header #post-info {    bottom: 1.5rem;    text-align: left;  }}@media screen and (max-width: 768px) {  #page-header #post-info {    bottom: 1.1rem;    padding: 0 1.1rem;  }}#page-header.not-top-img {  margin-bottom: 0.5rem;  height: 60px;  background: 0 center;}#page-header.nav-fixed #nav {  position: fixed;  top: 0;  z-index: 91;  transition: 0.3s;}#page-header.nav-fixed #nav #site-name,#page-header.nav-fixed #nav #toggle-menu,#page-header.nav-fixed #nav a {  text-shadow: none;}#page-header.nav-visible + .layout > .aside-content > .sticky_layout {  top: 70px;  transition: top 0.5s ease 0s;}#page h1.page-title {  margin: 0.4rem 0 1rem;}#post > #post-info {  margin-bottom: 1.5rem;}#post > #post-info .post-title {  padding-bottom: 0.2rem;  border-bottom: 1px solid var(--light-grey);  color: var(--text-highlight-color);}#post > #post-info .post-title .post-edit-link {  float: right;}#post > #post-info #post-meta,#post > #post-info #post-meta a {  color: #78818a;}#post-info .post-title {  margin-bottom: 0.4rem;  color: var(--heo-white);  font-weight: 400;  font-size: 2.5em;  line-height: 1.5;  -webkit-line-clamp: 3;}@media screen and (max-width: 768px) {  #post-info .post-title {    font-size: 1.72em;  }}#post-info .post-title .post-edit-link {  padding-left: 0.5rem;}#post-info #post-meta {  color: var(--light-grey);  font-size: 95%;}@media screen and (min-width: 768px) {  #post-info #post-meta > .meta-secondline > span:first-child {    display: none;  }}@media screen and (max-width: 768px) {  #post-info #post-meta {    font-size: 90%;  }}#post-info #post-meta .post-meta-separator {  margin: 0 0.25rem;}#post-info #post-meta .post-meta-icon {  margin-right: 0.2rem;}#post-info #post-meta .post-meta-label {  margin-right: 0.2rem;}#post-info #post-meta a {  color: var(--light-grey);  transition: all 0.3s ease-out 0s;}#post-info #post-meta a:hover {  color: #307af6;  text-decoration: underline;}#nav {  position: absolute;  top: 0;  z-index: 90;  display: flex;  flex-wrap: wrap;  -webkit-box-align: center;  align-items: center;  padding: 0 36px;  width: 100%;  height: 60px;  font-size: 1.3em;  opacity: 0;  transition: all 0.5s ease 0s;  outline: 1px solid var(--heo-none);}@media screen and (max-width: 768px) {  #nav {    padding: 0 16px;  }}#nav a {  color: var(--heo-white);}.page #nav a {  color: var(--heo-fontcolor);}#nav.show {  opacity: 1;  filter: none;}#nav #toggle-menu {  display: none;  padding: 0.1rem 0 0 0.3rem;  vertical-align: top;}#nav #toggle-menu:hover {  color: var(--heo-white);}#nav a {  padding: 0.3rem 0.4rem 0;  border-radius: 5px;}#nav .menus_items .menus_item:hover i.expand {  transform: rotate(180deg) !important;}#nav .menus_items .menus_item i.expand {  padding: 4px;  transition: transform 0.3s ease 0s;}#nav .menus_items .menus_item:hover .menus_item_child {  display: block;  opacity: 1;  pointer-events: auto;  transform: translateY(0);}#nav .menus_items .menus_item .menus_item_child::before {  position: absolute;  top: -8px;  left: 0;  width: 100%;  height: 20px;  content: "";}#nav .menus_items .menus_item:last-child .menus_item_child::after {  position: absolute;  top: -60px;  right: 0;  width: 50%;  height: 60px;  content: "";}#nav .menus_items .menus_item:first-child .menus_item_child::after {  position: absolute;  top: -60px;  left: 0;  width: 50%;  height: 60px;  content: "";}#nav.hide-menu #toggle-menu {  display: inline-block;}@media screen and (min-width: 768px) {  #nav.hide-menu #toggle-menu {    display: none;  }}#nav.hide-menu #toggle-menu .site-page {  font-size: inherit;}#nav.hide-menu .menus_items {  position: absolute;  left: 0;  visibility: hidden;  opacity: 0;}#nav.hide-menu #search-button span {  display: none !important;}#nav #search-button {  display: inline;  padding: 0 0.4rem;}#nav .site-page {  position: relative;  padding-bottom: 0.3rem;  text-shadow: rgba(0, 0, 0, 0.3) 0.05rem 0.05rem 0.1rem;  font-size: 0.78em;  cursor: pointer;}.li-style {  width: 100%;  height: 25px;  text-align: center;}li,ul {  list-style: none;  display: block;  margin: 0;  padding: 0;}@-webkit-keyframes configure-clockwise {  0% {    transform: rotate(0);  }  25% {    transform: rotate(90deg);  }  50% {    transform: rotate(180deg);  }  75% {    transform: rotate(270deg);  }  100% {    transform: rotate(360deg);  }}@keyframes configure-clockwise {  0% {    transform: rotate(0);  }  25% {    transform: rotate(90deg);  }  50% {    transform: rotate(180deg);  }  75% {    transform: rotate(270deg);  }  100% {    transform: rotate(360deg);  }}@-webkit-keyframes configure-xclockwise {  0% {    transform: rotate(45deg);  }  25% {    transform: rotate(-45deg);  }  50% {    transform: rotate(-135deg);  }  75% {    transform: rotate(-225deg);  }  100% {    transform: rotate(-315deg);  }}@keyframes configure-xclockwise {  0% {    transform: rotate(45deg);  }  25% {    transform: rotate(-45deg);  }  50% {    transform: rotate(-135deg);  }  75% {    transform: rotate(-225deg);  }  100% {    transform: rotate(-315deg);  }}#pagination .pagination {  text-align: center;}#pagination .page-number {  display: inline-block;  margin: 0 0.2rem;  min-width: 1.2rem;  height: 1.2rem;  text-align: center;  line-height: 1.2rem;  cursor: pointer;}#pagination .page-number.current {  background: #0079ff;  color: var(--heo-card-bg);  cursor: default;  border-radius: 5px;}#pagination img.next-cover,#pagination img.prev-cover {  position: absolute;  width: 100%;  height: 100%;  opacity: 0.4;  transition: all 0.6s ease 0s;  object-fit: cover;}#pagination .pagination-info {  position: absolute;  top: 50%;  padding: 1rem 2rem;  width: 100%;  transform: translate(0, -50%);}#pagination .next_info,#pagination .prev_info {  color: var(--heo-white);  font-weight: 500;}#pagination .next-post .pagination-info {  text-align: right;}#pagination .pull-full {  width: 100% !important;}#pagination .next-post .label,#pagination .prev-post .label {  color: var(--light-grey);  text-transform: uppercase;  font-size: 90%;}#pagination .next-post,#pagination .prev-post {  width: 50%;}@media screen and (max-width: 768px) {  #pagination .next-post,  #pagination .prev-post {    width: 100%;  }}#pagination .next-post a,#pagination .prev-post a {  position: relative;  display: block;  overflow: hidden;  height: 150px;}#pagination .next-post:hover img.next-cover,#pagination .next-post:hover img.prev-cover,#pagination .prev-post:hover img.next-cover,#pagination .prev-post:hover img.prev-cover {  opacity: 0.8;  transform: scale(1.1);}#pagination.pagination-post {  margin-top: 1.5rem;  background: #000;}#article-container {  overflow-wrap: break-word;}#article-container a {  color: #307af6;}#article-container a:hover {  text-decoration: none;  background: var(--heo-main);  border: none;  color: var(--heo-white);  border-radius: 4px;}#article-container img {  display: block;  margin: 0 auto 0.8rem;  max-width: 90%;  max-height: 450px;}@media screen and (max-width: 768px) {  #article-container img {    max-width: 100%;  }}#article-container p {  margin: 0 0 0.8rem;}#article-container iframe {  margin: 0 0 1rem;}#article-container kbd {  margin: 0 3px;  padding: 3px 5px;  border: 1px solid #b4b4b4;  border-radius: 3px;  background-color: #f8f8f8;  box-shadow: rgba(0, 0, 0, 0.25) 0 1px 3px,    rgba(255, 255, 255, 0.6) 0 2px 1px 0 inset;  color: #34495e;  white-space: nowrap;  font-weight: 600;  font-size: 0.9em;  font-family: Monaco, "Ubuntu Mono", monospace;  line-height: 1em;}#article-container h1,#article-container h2,#article-container h3,#article-container h4,#article-container h5,#article-container h6 {  transition: all 0.2s ease-out 0s;}#article-container h1::before,#article-container h2::before,#article-container h3::before,#article-container h4::before,#article-container h5::before,#article-container h6::before {  position: absolute;  top: calc(50% - 0.35rem);  color: #f2ba4b;  content: "";  line-height: 1;  transition: all 0.2s ease-out 0s;}#article-container h1:hover::before,#article-container h2:hover::before,#article-container h3:hover::before,#article-container h4:hover::before,#article-container h5:hover::before,#article-container h6:hover::before {  color: #307af6;}#article-container h1 {  padding-left: 1.4rem;}#article-container h1 code {  font-size: 1rem;}#article-container h1::before {  margin-left: -1.2rem;  font-size: 1rem;}#article-container h1:hover {  padding-left: 1.6rem;}#article-container h2 {  padding-left: 1.3rem;}#article-container h2 code {  font-size: 0.9rem;}#article-container h2::before {  margin-left: -1.1rem;  font-size: 0.9rem;}#article-container h2:hover {  padding-left: 1.5rem;}#article-container h3 {  padding-left: 1.2rem;}#article-container h3 code {  font-size: 0.8rem;}#article-container h3::before {  margin-left: -1rem;  font-size: 0.8rem;}#article-container h3:hover {  padding-left: 1.4rem;}#article-container h4 {  padding-left: 1.1rem;}#article-container h4 code {  font-size: 0.7rem;}#article-container h4::before {  margin-left: -0.9rem;  font-size: 0.7rem;}#article-container h4:hover {  padding-left: 1.3rem;}#article-container h5 {  padding-left: 1rem;}#article-container h5 code {  font-size: 0.6rem;}#article-container h5::before {  margin-left: -0.8rem;  font-size: 0.6rem;}#article-container h5:hover {  padding-left: 1.2rem;}#article-container h6 {  padding-left: 1rem;}#article-container h6 code {  font-size: 0.6rem;}#article-container h6::before {  margin-left: -0.8rem;  font-size: 0.6rem;}#article-container h6:hover {  padding-left: 1.2rem;}#article-container ol,#article-container ul {  margin-top: 0.4rem;  padding: 0 0 0 0.8rem;  list-style: none;  counter-reset: li 0;}@media screen and (max-width: 768px) {  #article-container ol,  #article-container ul {    padding: 0 0 0 0.4rem;  }}#article-container ol p,#article-container ul p {  margin: 0 0 0.5rem;}#article-container ol ol,#article-container ol ul,#article-container ul ol,#article-container ul ul {  padding-left: 0.6rem;}@media screen and (max-width: 768px) {  #article-container ol ol,  #article-container ol ul,  #article-container ul ol,  #article-container ul ul {    padding-left: 0.2rem;  }}#article-container ol li:not(.tab),#article-container ul li:not(.tab) {  position: relative;  margin: 0.2rem 0;}#article-container ol li:hover::before,#article-container ul li:hover::before {  transform: rotate(360deg);}#article-container ol li::before,#article-container ul li::before {  position: absolute;  top: 0;  left: 0;  background: #307af6;  color: #fff;  cursor: pointer;  transition: all 0.3s ease-out 0s;}#article-container ol > li:not(.tab) {  padding: 0.2em 0.2em 0.2em 1.8em;}#article-container ol > li::before {  margin-top: 0.65em;  width: 1.45em;  height: 1.45em;  border-radius: 0.725em;  content: counter(li);  counter-increment: li 1;  text-align: center;  font-size: 0.85em;  line-height: 1.45em;}#article-container ul > li:not(.tab) {  padding: 0.2em 0.2em 0.2em 1.4em;}#article-container ul > li:not(.tab):hover::before {  border-color: #ff7242;}#article-container ul > li:not(.tab)::before {  top: 0.78em;  width: 0.42em;  height: 0.42em;  border: 0.21em solid #307af6;  border-radius: 0.42em;  background: 0 0;  content: "";  line-height: 0.42em;}#article-container > :last-child {  margin-bottom: 0 !important;}#post-info span.tags-punctuation::before {  font-size: 20px;}#post .tag_share .post-meta__tags span.tags-punctuation {  font-size: 12px;  margin-right: 1px;  display: flex;  align-items: center;}.el-input-group--prepend .el-input__inner,.el-input-group__append {  border-left-width: 0 !important;}#post .tag_share .post_share {  display: inline-block;  float: right;  margin: 0.4rem 0;  width: fit-content;}#post .tag_share .post_share .social-share {  font-size: 0.85em;}#post .tag_share .post_share .social-share .social-share-icon {  margin: 0 4px;  width: 1.85em;  height: 1.85em;  font-size: 1.2em;  line-height: 1.85em;}#post .post-copyright::before {  position: absolute;  top: 0.1rem;  right: 0.6rem;  color: #307af6;  content: "";  font-size: 1rem;}#post .post-copyright .post-copyright-meta {  color: #307af6;  font-weight: 700;}#post .post-copyright .post-copyright-info {  padding-left: 0.3rem;}#post .post-copyright .post-copyright-info a {  text-decoration: none;  word-break: break-word;  color: #3b82ff;  padding: 0 4px;  border-radius: 4px;}#post .post-copyright .post-copyright-info a:hover {  text-decoration: none;  background-color: var(--heo-main);  color: var(--heo-white);  cursor: pointer;  border-radius: 4px;}#post .post-outdate-notice {  position: relative;  margin: 0 0 1rem;  border-radius: 3px;  background-color: #ffe6e6;  color: #f66;  padding: 0.5em 1em 0.5em 2.6em;  border-left: 5px solid #ff8080;}#post .post-outdate-notice::before {  position: absolute;  top: 50%;  left: 0.9em;  color: #ff8080;  content: "";  transform: translateY(-50%);}#post .ads-wrap {  margin: 2rem 0;}.relatedPosts {  margin-top: 2rem;  -webkit-user-select: none;}.relatedPosts > .relatedPosts-list > div {  position: relative;  display: inline-block;  overflow: hidden;  margin: 3px;  width: calc(33.333% - 6px);  height: 200px;  background: var(--heo-main);  vertical-align: bottom;}@media screen and (max-width: 768px) {  .relatedPosts > .relatedPosts-list > div {    margin: 2px;    width: calc(50% - 4px);    height: 150px;  }}@media screen and (max-width: 600px) {  .relatedPosts > .relatedPosts-list > div {    width: calc(100% - 4px);  }}.relatedPosts > .relatedPosts-list .cover {  width: 360px;  min-width: 45%;  height: 100%;  transition: all 0.6s ease 0s;  object-fit: cover;  max-width: 45%;}.relatedPosts > .relatedPosts-list .content {  padding: 0 1rem;  width: 100%;}.relatedPosts > .relatedPosts-list .content .date {  color: var(--light-grey);  font-size: 90%;}.relatedPosts > .relatedPosts-list .content .title {  color: var(--heo-white);  -webkit-line-clamp: 2;  margin-right: auto;}.relatedPosts-link {  display: block;  justify-content: space-between;  margin-left: 8px;  font-size: 13px;}.post-reward {  position: relative;  margin-top: 4rem;  text-align: center;}.post-reward:hover > .reward-main {  display: block;}.post-reward .reward-main {  position: absolute;  bottom: 40px;  left: -96px;  z-index: 100;  display: none;  padding: 0 0 15px;  width: fit-content;}.post-reward .reward-main .reward-all {  display: inline-block;  margin: 0;  padding: 1rem 0.5rem;  border-radius: 4px;  background: var(--heo-maskbgdeep);}.post-reward .reward-main .reward-all::before {  position: absolute;  bottom: -10px;  left: 0;  width: 100%;  height: 20px;  content: "";}.post-reward .reward-main .reward-all::after {  position: absolute;  right: 0;  bottom: 2px;  left: 0;  margin: 0 auto;  width: 0;  height: 0;  border-top: 13px solid var(--reward-pop);  border-right: 13px solid transparent;  border-left: 13px solid transparent;  content: "";}.post-reward .reward-main .reward-all .reward-item {  display: inline-block;  padding: 0 8px;  list-style-type: none;  vertical-align: top;}.post-reward .reward-main .reward-all .reward-item img {  width: 130px;  height: 130px;}.post-reward .reward-main .reward-all .reward-item .post-qr-code-desc {  padding-top: 0.4rem;  width: 130px;  color: #858585;}#rightside #rightside-config-hide {  transition: transform 0.4s ease 0s;  transform: translate(35px, 0);}#rightside #rightside-config-hide.show {  transform: translate(0, 0) !important;}#rightside > div > a,#rightside > div > button {  display: block;  margin-bottom: 2px;  width: 30px;  height: 30px;  background-color: var(--btn-bg);  color: var(--btn-color);  text-align: center;  font-size: 16px;}#rightside > div > a:hover,#rightside > div > button:hover {  background-color: var(--btn-hover-color);}#rightside #mobile-toc-button {  display: none;}@media screen and (max-width: 900px) {  #rightside #mobile-toc-button {    display: block;  }}@media screen and (max-width: 900px) {  #rightside #hide-aside-btn {    display: none;  }}#sidebar #menu-mask {  position: fixed;  z-index: 1001;  display: none;  width: 100%;  height: 100%;  background: var(--heo-maskbg);  backdrop-filter: saturate(180%) blur(20px);  -webkit-backdrop-filter: blur(20px);  transform: translateZ(0);  animation: 0.6s ease 0s 1 normal none running to_show;  -webkit-transform-style: preserve-3d;}#sidebar #sidebar-menus {  position: fixed;  top: 0;  right: -300px;  z-index: 103;  overflow: hidden auto;  width: 300px;  height: 100%;  background: var(--heo-background);  transition: all 0.5s ease 0s;  padding-top: 30px;  z-index: 1001;  border-left: var(--style-border-always);}#sidebar #sidebar-menus.open {  transform: translate3d(-100%, 0, 0);}@media screen and (min-width: 768px) {  #sidebar #sidebar-menus {    display: none;  }}#sidebar #sidebar-menus .back-menu-list-groups {  padding: 0 16px;}#sidebar #sidebar-menus .back-menu-list-groups .back-menu-list-title {  font-size: 12px;  color: var(--heo-secondtext);}#sidebar #sidebar-menus .back-menu-list-groups .back-menu-list {  width: calc(100% + 16px);  justify-content: flex-start;  margin: 0 -8px;}#sidebar #sidebar-menus .back-menu-list-groups .back-menu-list .back-menu-item {  background: var(--heo-card-bg);  border: var(--style-border-always);  border-radius: 8px;}@media screen and (max-width: 768px) {  #sidebar    #sidebar-menus    .back-menu-list-groups    .back-menu-list    .back-menu-item {    width: calc(50% - 16px);  }}#sidebar #sidebar-menus .back-home-button {  display: none;}#sidebar #sidebar-menus > .author-avatar {  padding: 1.3rem 1.5rem 0;  text-align: center;}#sidebar #sidebar-menus > .author-avatar img {  width: 110px;  height: 110px;  border-radius: 70px;  transition: all 0.5s ease 0s;}#sidebar #sidebar-menus > .author-avatar img:hover {  transform: rotate(360deg);}#sidebar #sidebar-menus .site-data {  display: table;  padding: 0.6rem 0.5rem 0;  width: 100%;  table-layout: fixed;}#sidebar #sidebar-menus .site-data .data-item {  display: table-cell;}#sidebar #sidebar-menus .site-data .data-item .data-item-link .length-num {  color: var(--text-highlight-color);  font-size: 1.28em;}#sidebar #sidebar-menus .site-data .data-item .data-item-link .headline {  color: var(--heo-fontcolor);}#sidebar #sidebar-menus hr {  margin: 1rem auto;}#sidebar #sidebar-menus .menus_items {  padding: 0 16px;}#sidebar #sidebar-menus .menus_items .site-page {  position: relative;  display: block;  padding: 0;  color: var(--heo-fontcolor);  font-size: 1.15em;  cursor: pointer;  font-size: 14px;  font-weight: 700;}@media screen and (max-width: 768px) {  #sidebar #sidebar-menus .menus_items .site-page {    font-weight: 400;  }}#sidebar #sidebar-menus .menus_items .site-page span:hover {  color: #307af6;}#sidebar #sidebar-menus .menus_item > .site-page {  display: flex;  font-size: 12px;  color: var(--heo-secondtext);}#sidebar #sidebar-menus .menus_items .expand {  position: absolute;  top: 0.78em;  right: 0.4rem;  transition: transform 0.3s ease 0s;}#sidebar #sidebar-menus .menus_items .expand.hide {  transform: rotate(90deg) !important;}#sidebar #sidebar-menus .menus_items .menus_item_child {  margin: 0 -4px;  list-style: none;  display: flex;  flex-direction: row;  flex-wrap: wrap;}#sidebar #sidebar-menus .menus_item_child .site-page.child {  display: flex;  flex-direction: column;  align-items: center;  padding: 8px;  border-radius: 8px;  border: var(--style-border-always);  background: var(--heo-card-bg);}#sidebar #sidebar-menus .menus_item_child li {  width: calc(50% - 8px);  margin: 4px;}#sidebar #sidebar-menus .menus_item_child .site-page.child span {  line-height: 1;  margin-top: 8px;  font-size: 14px;}#sidebar #sidebar-menus .card-tag-cloud {  padding: 0 16px;  display: flex;  flex-direction: row;  flex-wrap: wrap;  margin-bottom: 60px;}#sidebar #sidebar-menus .card-tag-cloud a {  color: var(--heo-fontcolor) !important;  padding: 2px 8px 2px 12px;  margin: 4px;  border-radius: 8px;  border: var(--style-border-always);  background: var(--heo-card-bg);  font-size: 14px !important;}#sidebar #sidebar-menus .card-tag-cloud a sup {  opacity: 0.6;  margin-left: 4px;}#sidebar #sidebar-menus span.sidebar-menu-item-title {  font-size: 12px;  color: var(--heo-secondtext);  margin-left: 16px;}#sidebar #sidebar-menus .sidebar-menu-item {  display: flex;  flex-direction: column;  padding: 0 16px;  margin-bottom: 6px;}#sidebar #sidebar-menus .sidebar-menu-item a.menu-child {  width: 100%;  background: var(--heo-card-bg);  border-radius: 8px;  border: var(--style-border-always);  display: flex;  align-items: center;  font-size: 14px;}#sidebar #sidebar-menus .sidebar-menu-item a.menu-child i {  width: 24px;  height: 24px;  display: flex;  align-items: center;  justify-content: center;}#sidebar #sidebar-menus .sidebar-menu-item a.menu-child span {  margin-left: 10px;}#sidebar #sidebar-menus .webinfo {  padding: 0 16px;  display: flex;  white-space: nowrap;  flex-direction: column;}#sidebar #sidebar-menus .webinfo .webinfo-item {  justify-content: space-between;}#vcomment,#waline {  font-size: 1.1em;}#vcomment .vbtn,#waline .vbtn {  border: none;  background: var(--btn-bg);  color: var(--btn-color);}#vcomment .vbtn:hover,#waline .vbtn:hover {  background: var(--btn-hover-color);}#vcomment .vimg,#waline .vimg {  transition: all 0.3s ease 0s;}#vcomment .vimg:hover,#waline .vimg:hover {  transform: rotate(360deg);}#vcomment .vcards .vcard .vcontent.expand::after,#vcomment .vcards .vcard .vcontent.expand::before,#waline .vcards .vcard .vcontent.expand::after,#waline .vcards .vcard .vcontent.expand::before {  z-index: 22;}.fireworks {  position: fixed;  top: 0;  left: 0;  z-index: 9999;  pointer-events: none;}.medium-zoom-image--opened {  z-index: 99999 !important;  margin: 0 !important;}.medium-zoom-overlay {  z-index: 99999 !important;}.mermaid {  overflow: auto;  margin: 0 0 1rem;  background: #fff;  text-align: center;  opacity: 0;  transition: all 0.3s ease 0s;}.mermaid[data-processed] {  opacity: 1;  filter: none;}.fb-comments iframe,.utterances {  width: 100% !important;}#gitalk-container .gt-meta {  margin: 0 0 0.8em;  padding: 0.3rem 0 0.8em;}.katex-wrap {  overflow: auto;}.katex-wrap::-webkit-scrollbar {  display: none;}.mathjax-overflow {  overflow: auto hidden;}mjx-container[jax="CHTML"][display="true"] {  overflow: auto hidden;  padding-bottom: 0.3rem;}#article-container .aplayer {  margin: 0 0 1rem;}#article-container .aplayer ol,#article-container .aplayer ul {  margin: 0;  padding: 0;}#article-container .aplayer ol li,#article-container .aplayer ul li {  margin: 0;  padding: 0 15px;}#article-container .aplayer ol li::before,#article-container .aplayer ul li::before {  content: none;}#article-container .btn-center {  margin: 0 0 1rem;  text-align: center;}#article-container .btn-beautify {  display: inline-block;  margin: 0 0.2rem 0.3rem;  padding: 0 1rem;  background-color: #777;  color: #fff;  line-height: 2;}#article-container .btn-beautify i + span {  margin-left: 0.3rem;}#article-container .btn-beautify:not(.block) + .btn-beautify:not(.block) {  margin: 0 0.2rem 1rem;}#article-container .btn-beautify.block {  display: block;  margin: 0 0 1rem;  width: fit-content;}#article-container .btn-beautify.block.center {  margin: 0 auto 1rem;}#article-container .btn-beautify.block.right {  margin: 0 0 1rem auto;}#article-container .btn-beautify.larger {  padding: 0.3rem 1.3rem;}#article-container .btn-beautify:hover {  text-decoration: none;}#article-container .btn-beautify.blue {  background-color: #428bca;}#article-container .btn-beautify.pink {  background-color: #ff69b4;}#article-container .btn-beautify.red {  background-color: red;}#article-container .btn-beautify.purple {  background-color: #6f42c1;}#article-container .btn-beautify.orange {  background-color: #ff8c00;}#article-container .btn-beautify.green {  background-color: #5cb85c;}#article-container .btn-beautify.outline {  border: 1px solid #777;  background-color: transparent;  color: #777;  transition: all 0.3s ease 0s;}#article-container .btn-beautify.outline.button--animated::before {  background: #777;}#article-container .btn-beautify.outline:hover {  color: #fff !important;}#article-container .btn-beautify.outline.blue {  border-color: #428bca;  color: #428bca;}#article-container .btn-beautify.outline.blue.button--animated::before {  background: #428bca;}#article-container .btn-beautify.outline.pink {  border-color: #ff69b4;  color: #ff69b4;}#article-container .btn-beautify.outline.pink.button--animated::before {  background: #ff69b4;}#article-container .btn-beautify.outline.red {  border-color: red;  color: red;}#article-container .btn-beautify.outline.red.button--animated::before {  background: red;}#article-container .btn-beautify.outline.purple {  border-color: #6f42c1;  color: #6f42c1;}#article-container .btn-beautify.outline.purple.button--animated::before {  background: #6f42c1;}#article-container .btn-beautify.outline.orange {  border-color: #ff8c00;  color: #ff8c00;}#article-container .btn-beautify.outline.orange.button--animated::before {  background: #ff8c00;}#article-container .btn-beautify.outline.green {  border-color: #5cb85c;  color: #5cb85c;}#article-container .btn-beautify.outline.green.button--animated::before {  background: #5cb85c;}figure.gallery-group {  position: relative;  float: left;  overflow: hidden;  margin: 0.3rem 0.2rem;  width: calc(50% - 0.4rem);  height: 250px;  border-radius: 5px;  background: #000;  transform: translate3d(0, 0, 0);}@media screen and (max-width: 600px) {  figure.gallery-group {    width: calc(100% - 0.4rem);  }}figure.gallery-group:hover img {  opacity: 0.4;  transform: translate3d(0, 0, 0);}figure.gallery-group:hover .gallery-group-name::after {  transform: translate3d(0, 0, 0);}figure.gallery-group:hover p {  opacity: 1;  filter: none;  transform: translate3d(0, 0, 0);}figure.gallery-group img {  position: relative;  max-width: none;  width: calc(100% + 20px);  height: 250px;  backface-visibility: hidden;  opacity: 0.8;  transition: opacity 0.35s ease 0s, transform 0.35s ease 0s;  transform: translate3d(-10px, 0, 0);  object-fit: cover;  margin: 0 !important;}figure.gallery-group figcaption {  position: absolute;  top: 0;  left: 0;  padding: 1.5rem;  width: 100%;  height: 100%;  color: #fff;  text-transform: uppercase;  backface-visibility: hidden;}figure.gallery-group figcaption > a {  position: absolute;  inset: 0;  z-index: 1000;  opacity: 0;}figure.gallery-group p {  margin: 0;  padding: 0.4rem 0 0;  letter-spacing: 1px;  font-size: 1.1em;  line-height: 1.5;  opacity: 0;  transition: opacity 0.35s ease 0s, transform 0.35s ease 0s;  transform: translate3d(100%, 0, 0);  -webkit-line-clamp: 4;}figure.gallery-group .gallery-group-name {  position: relative;  margin: 0;  padding: 0.4rem 0;  font-weight: 700;  font-size: 1.65em;  line-height: 1.5;  -webkit-line-clamp: 2;}figure.gallery-group .gallery-group-name::after {  position: absolute;  bottom: 0;  left: 0;  width: 100%;  height: 2px;  background: #fff;  content: "";  transition: transform 0.35s ease 0s;  transform: translate3d(-100%, 0, 0);}.gallery-group-main {  overflow: auto;  padding: 0 0 0.8rem;}.justified-gallery {  margin: 0 0 0.8rem;}.justified-gallery img {  opacity: 0;}.justified-gallery .img-alt {  display: none;}.justified-gallery .fancybox {  width: auto;  text-align: inherit;}blockquote.pullquote {  position: relative;  max-width: 45%;  font-size: 110%;}blockquote.pullquote.left {  float: left;  margin: 1em 0.5em 0 0;}blockquote.pullquote.right {  float: right;  margin: 1em 0 0 0.5rem;}.video-container {  position: relative;  overflow: hidden;  margin-bottom: 0.8rem;  padding-top: 56.25%;  height: 0;}.video-container iframe {  position: absolute;  top: 0;  left: 0;  margin-top: 0;  width: 100%;  height: 100%;}.hide-block > .hide-button,.hide-inline > .hide-button {  display: inline-block;  padding: 0.3rem 1rem;  background: #307af6;  color: var(--heo-white);}.hide-block > .hide-button.open,.hide-inline > .hide-button.open {  display: none;}.hide-block > .hide-button.open + div,.hide-inline > .hide-button.open + div {  display: block;}.hide-block > .hide-button.open + span,.hide-inline > .hide-button.open + span {  display: inline;}.hide-block > .hide-content,.hide-inline > .hide-content {  display: none;}.hide-inline > .hide-button {  margin: 0 0.3rem;}.hide-inline > .hide-content {  margin: 0 0.3rem;}.hide-block {  margin: 0 0 0.8rem;}.hide-toggle {  margin-bottom: 1rem;  border: 1px solid #f0f0f0;}.hide-toggle > .hide-button {  padding: 0.3rem 0.5rem;  background: #f0f0f0;  color: #1f2d3d;  cursor: pointer;}.hide-toggle > .hide-button > i {  font-size: 1.2em;  transition: all 0.3s ease 0s;}.hide-toggle > .hide-button.open i {  transform: rotate(90deg);}.hide-toggle > .hide-button.open + div {  display: block;}.hide-toggle > .hide-content {  display: none;  margin: 1.5rem 1.2rem;}#article-container .inline-img {  display: inline;  margin: 0 3px;  height: 1.1em;  vertical-align: text-bottom;}.hl-label {  padding: 2px 4px;  border-radius: 3px;  color: #fff;}.hl-label.default {  background-color: #777;}.hl-label.blue {  background-color: #428bca;}.hl-label.pink {  background-color: #ff69b4;}.hl-label.red {  background-color: red;}.hl-label.purple {  background-color: #6f42c1;}.hl-label.orange {  background-color: #ff8c00;}.hl-label.green {  background-color: #5cb85c;}.note {  position: relative;  margin: 0 0 1rem;  padding: 15px;  border-radius: 3px;}.note.icon {  padding-left: 2.25rem;}.note > .note-icon {  position: absolute;  top: calc(50% - 0.4rem);  left: 0.7rem;  font-size: larger;}.note.blue:not(.disabled) {  border-left-color: #428bca !important;}.note.blue:not(.disabled).modern {  color: #428bca;  border-left-color: transparent !important;}.note.blue:not(.disabled):not(.simple) {  background: #e3eef7 !important;}.note.blue > .note-icon {  color: #428bca;}.note.pink:not(.disabled) {  border-left-color: #ff69b4 !important;}.note.pink:not(.disabled).modern {  color: #ff69b4;  border-left-color: transparent !important;}.note.pink:not(.disabled):not(.simple) {  background: #ffe9f4 !important;}.note.pink > .note-icon {  color: #ff69b4;}.note.red:not(.disabled) {  border-left-color: red !important;}.note.red:not(.disabled).modern {  color: red;  border-left-color: transparent !important;}.note.red:not(.disabled):not(.simple) {  background: #ffd9d9 !important;}.note.red > .note-icon {  color: red;}.note.purple:not(.disabled) {  border-left-color: #6f42c1 !important;}.note.purple:not(.disabled).modern {  color: #6f42c1;  border-left-color: transparent !important;}.note.purple:not(.disabled):not(.simple) {  background: #e9e3f6 !important;}.note.purple > .note-icon {  color: #6f42c1;}.note.orange:not(.disabled) {  border-left-color: #ff8c00 !important;}.note.orange:not(.disabled).modern {  color: #ff8c00;  border-left-color: transparent !important;}.note.orange:not(.disabled):not(.simple) {  background: #ffeed9 !important;}.note.orange > .note-icon {  color: #ff8c00;}.note.green:not(.disabled) {  border-left-color: #5cb85c !important;}.note.green:not(.disabled).modern {  color: #5cb85c;  border-left-color: transparent !important;}.note.green:not(.disabled):not(.simple) {  background: #e7f4e7 !important;}.note.green > .note-icon {  color: #5cb85c;}.note.simple {  border-width: 1px 1px 1px 5px;  border-style: solid;  border-color: #eee;  border-image: initial;}.note.modern {  background-color: #f5f5f5;  color: #4c4948;  border: 1px solid transparent !important;}.note.flat {  border-top: initial;  border-right: initial;  border-bottom: initial;  border-image: initial;  border-left: 5px solid #eee;  background-color: #f9f9f9;  color: #4c4948;}.note h2,.note h3,.note h4,.note h5,.note h6 {  margin-top: 3px;  margin-bottom: 0;  border-bottom: initial;  padding-top: 0 !important;}.note blockquote:first-child,.note img:first-child,.note ol:first-child,.note p:first-child,.note pre:first-child,.note table:first-child,.note ul:first-child {  margin-top: 0 !important;}.note blockquote:last-child,.note img:last-child,.note ol:last-child,.note p:last-child,.note pre:last-child,.note table:last-child,.note ul:last-child {  margin-bottom: 0 !important;  font-size: 14px !important;}.note:not(.no-icon) {  padding-left: 2.25rem;}.note:not(.no-icon)::before {  position: absolute;  top: calc(50% - 15px);  left: 0.7rem;  font-size: larger;}.note.default.flat {  background: #f7f7f7;}.note.default.modern {  border-color: #e1e1e1;  background: #f3f3f3;  color: #666;}.note.default.modern a:not(.btn) {  color: #666;}.note.default.modern a:not(.btn):hover {  color: #454545;}.note.default:not(.modern) {  border-left-color: #777;}.note.default:not(.modern) h2,.note.default:not(.modern) h3,.note.default:not(.modern) h4,.note.default:not(.modern) h5,.note.default:not(.modern) h6 {  color: #777;}.note.default:not(.no-icon)::before {  content: "";}.note.default:not(.no-icon):not(.modern)::before {  color: #777;}.note.primary.flat {  background: #f5f0fa;}.note.primary.modern {  border-color: #e1c2ff;  background: #f3daff;  color: #6f42c1;}.note.primary.modern a:not(.btn) {  color: #6f42c1;}.note.primary.modern a:not(.btn):hover {  color: #453298;}.note.primary:not(.modern) {  border-left-color: #6f42c1;}.note.primary:not(.modern) h2,.note.primary:not(.modern) h3,.note.primary:not(.modern) h4,.note.primary:not(.modern) h5,.note.primary:not(.modern) h6 {  color: #6f42c1;}.note.primary:not(.no-icon)::before {  content: "";}.note.primary:not(.no-icon):not(.modern)::before {  color: #6f42c1;}.note.info.flat {  background: #eef7fa;}.note.info.modern {  border-color: #b3e5ef;  background: #d9edf7;  color: #31708f;}.note.info.modern a:not(.btn) {  color: #31708f;}.note.info.modern a:not(.btn):hover {  color: #215761;}.note.info:not(.modern) {  border-left-color: #428bca;}.note.info:not(.modern) h2,.note.info:not(.modern) h3,.note.info:not(.modern) h4,.note.info:not(.modern) h5,.note.info:not(.modern) h6 {  color: #428bca;}.note.info:not(.no-icon)::before {  content: "";}.note.info:not(.no-icon):not(.modern)::before {  color: #428bca;}.note.success.flat {  background: #eff8f0;}.note.success.modern {  border-color: #d0e6be;  background: #dff0d8;  color: #3c763d;}.note.success.modern a:not(.btn) {  color: #3c763d;}.note.success.modern a:not(.btn):hover {  color: #32562c;}.note.success:not(.modern) {  border-left-color: #5cb85c;}.note.success:not(.modern) h2,.note.success:not(.modern) h3,.note.success:not(.modern) h4,.note.success:not(.modern) h5,.note.success:not(.modern) h6 {  color: #5cb85c;}.note.success:not(.no-icon)::before {  content: "";}.note.success:not(.no-icon):not(.modern)::before {  color: #5cb85c;}.note.warning.flat {  background: #fdf8ea;}.note.warning.modern {  border-color: #fae4cd;  background: #fcf4e3;  color: #8a6d3b;}.note.warning.modern a:not(.btn) {  color: #8a6d3b;}.note.warning.modern a:not(.btn):hover {  color: #714f30;}.note.warning:not(.modern) {  border-left-color: var(--heo-orange);}.note.warning:not(.modern) h2,.note.warning:not(.modern) h3,.note.warning:not(.modern) h4,.note.warning:not(.modern) h5,.note.warning:not(.modern) h6 {  color: var(--heo-orange);}.note.warning:not(.no-icon)::before {  content: "\e067";}.note.warning:not(.no-icon):not(.modern)::before {  color: var(--heo-orange);}.note.danger.flat {  background: #fcf1f2;}.note.danger.modern {  border-color: #ebcdd2;  background: #f2dfdf;  color: #a94442;}.note.danger.modern a:not(.btn) {  color: #a94442;}.note.danger.modern a:not(.btn):hover {  color: #84333f;}.note.danger:not(.modern) {  border-left-color: #d9534f;}.note.danger:not(.modern) h2,.note.danger:not(.modern) h3,.note.danger:not(.modern) h4,.note.danger:not(.modern) h5,.note.danger:not(.modern) h6 {  color: #d9534f;}.note.danger:not(.no-icon)::before {  content: "";}.note.danger:not(.no-icon):not(.modern)::before {  color: #d9534f;}#article-container .tabs {  position: relative;  margin: 0 0 1rem;  border-right: 1px solid var(--tab-border-color);  border-bottom: 1px solid var(--tab-border-color);  border-left: 1px solid var(--tab-border-color);}#article-container .tabs > .nav-tabs {  display: flex;  flex-wrap: wrap;  margin: 0;  padding: 0;  background: var(--tab-botton-bg);}#article-container .tabs > .nav-tabs > .tab {  margin: 4px;  padding: 0;  list-style: none;}@media screen and (max-width: 768px) {  #article-container .tabs > .nav-tabs > .tab {    -webkit-box-flex: 1;    flex-grow: 1;  }}#article-container .tabs > .nav-tabs > .tab button i {  width: 1.5em;}#article-container .tabs > .nav-tabs > .tab.active button {  border-top: 2px solid #307af6;  background: var(--tab-button-active-bg);  cursor: default;}#article-container .tabs > .nav-tabs > .tab:not(.active) button:hover {  border-top: 2px solid var(--tab-button-hover-bg);  background: var(--tab-button-hover-bg);}#article-container .tabs > .tab-contents .tab-item-content {  position: relative;  display: none;  padding: 1.8rem 1.2rem;  background: var(--heo-background);  border: var(--style-border-always);}@media screen and (max-width: 768px) {  #article-container .tabs > .tab-contents .tab-item-content {    padding: 1.2rem 0.7rem;  }}#article-container .tabs > .tab-contents .tab-item-content.active {  display: block;  animation: 0.5s ease 0s 1 normal none running tabshow;}#article-container .tabs .tab-to-top {  position: relative;  display: block;  margin: 16px 0 0 auto;  color: #99a9bf;}@-webkit-keyframes tabshow {  0% {    transform: translateY(15px);  }  100% {    transform: translateY(0);  }}@keyframes tabshow {  0% {    transform: translateY(15px);  }  100% {    transform: translateY(0);  }}.search-dialog {  position: fixed;  top: 5rem;  left: 50%;  z-index: 1001;  display: none;  margin-left: -15rem;  padding: 1rem;  width: 30rem;  background: var(--search-bg);  border-radius: 5px;}@media screen and (max-width: 768px) {  .search-dialog {    top: 0;    left: 0;    margin: 0;    width: 100%;    height: 100%;  }}.search-dialog hr {  margin: 1rem auto;}.search-dialog span.search-close-button {  position: absolute;  top: 0.8rem;  right: 1rem;  color: #858585;  font-size: 1.4em;  line-height: 1;  cursor: pointer;  transition: color 0.2s ease-in-out 0s;}.search-dialog span.search-close-button:hover {  color: #307af6;}.search-dialog__title {  padding: 0 0 0.7rem;  color: #307af6;  font-size: 1.4em;  line-height: 1;}#search-mask {  position: fixed;  inset: 0;  z-index: 1000;  display: none;  background: rgba(0, 0, 0, 0.6);}#algolia-search .search-dialog {  animation: slide-in 0.6s ease 0s 1 normal none running;}#algolia-search .search-dialog .ais-search-box {  margin: 0 auto;  max-width: 100%;  width: 100%;}#algolia-search .search-dialog .ais-search-box input {  padding: 0.25rem 0.7rem;  outline: 0;  border: 2px solid #307af6;  border-radius: 2rem;  background: var(--heo-secondbg);  color: var(--search-input-color);}#algolia-search .search-dialog .ais-hits--item.algolia-hit-item {  position: relative;  padding-left: 1.2rem;}#algolia-search .search-dialog .ais-hits--item.algolia-hit-item:hover::before {  border-color: #ff7242;}#algolia-search .search-dialog .ais-hits--item.algolia-hit-item::before {  position: absolute;  top: 0.53em;  left: 0;  width: 0.5em;  height: 0.5em;  border: 0.15rem solid #307af6;  border-radius: 0.5em;  background: 0 0;  content: "";  line-height: 0.5em;  transition: all 0.2s ease-in-out 0s;}#algolia-search .search-dialog .ais-hits--item.algolia-hit-item a {  display: block;  color: var(--search-result-title);  cursor: pointer;}#algolia-search .search-dialog .ais-hits--item.algolia-hit-item a:hover {  color: #307af6;}#algolia-search .search-dialog .ais-hits--item.algolia-hit-item em {  color: #f47466;  font-weight: 700;}#algolia-search .search-dialog .ais-pagination.pagination {  margin: 0.8rem 0 0;  padding: 0;  text-align: center;}#algolia-search  .search-dialog  .ais-pagination.pagination  .ais-pagination--item {  margin: 0 0.2rem;  padding: 0;}#algolia-search  .search-dialog  .ais-pagination.pagination  .ais-pagination--item  a {  display: inline-block;  min-width: 1.2rem;  height: 1.2rem;  text-align: center;  line-height: 1.2rem;}#algolia-search  .search-dialog  .ais-pagination.pagination  .ais-pagination--item.current  a {  background: #0079ff;  color: #eee;  cursor: default;}#algolia-search .search-dialog .algolia-logo {  padding-top: 2px;  width: 4rem;  height: 1.5rem;}#page {  min-height: calc(100vh - 464px);}::-webkit-scrollbar {  width: 6px;  height: 6px;}::-webkit-scrollbar-thumb {  background: var(--heo-scrollbar);  border-radius: 8px;  cursor: pointer;}::-webkit-scrollbar-thumb:hover {  background: var(--heo-main);  opacity: 1;  display: block !important;}::-webkit-scrollbar-track {  background-color: var(--heo-none);}html {  overflow-y: overlay;}.layout.hide-aside {  max-width: 1400px;}[data-theme="dark"] img {  filter: brightness(1);}#nav {  flex-wrap: nowrap;  justify-content: space-between;}#nav .menus_items .menus_item .menus_item_child {  padding: 6px 4px 8px 4px;  border-radius: 100px;  background-color: var(--heo-maskbgdeep);  box-shadow: var(--heo-shadow-black);  border: var(--style-border);  transition: 0.3s;  backdrop-filter: blur(20px);  -webkit-backdrop-filter: blur(20px);  top: 35px;  position: absolute;  margin-top: 8px;  white-space: nowrap;  opacity: 0;  pointer-events: none;  transform: translateY(-10px) scale(0.8);}#nav .menus_items .menus_item:hover .menus_item_child {  border: var(--style-border-hover);  box-shadow: var(--heo-shadow-main);  opacity: 1;  pointer-events: all;  transform: translateY(0) scale(1);}#page-header.nav-fixed > #nav,#page-header.not-top-img > #nav {  box-shadow: none;}#sidebar #sidebar-menus .menus_items .site-page span:hover {  color: var(--heo-fontcolor);}.site-page i.fa-chevron-down {  display: none;}.fa,.fa-brands,.fa-light,.fa-regular,.fa-solid,.fa-thin,.fab,.fad,.fal,.far,.fas,.fat {  line-height: 1;}#nav .menus_items .menus_item .menus_item_child:before {  top: -10px;}#nav .menus_items .menus_item .menus_item_child li a i:not(.fa-brands) {  font-size: 22px;  margin-right: 8px;  line-height: 1;}#nav .menus_items .menus_item {  padding: 0 0.4rem;  display: flex;  flex-direction: column;  align-items: center;  margin: auto;  position: relative;}#nav .menus_items .menus_item .menus_item_child li {  display: inline-flex;  list-style: none;  border-radius: 5px;  margin: 0 4px;}#nav a {  border-radius: 8px;}.nav-fixed #nav a {  color: var(--heo-fontcolor);  transition: 0.3s;}.topbar-html {  background: #aeaeae !important;}#mozi-assist {  position: fixed;  z-index: 999;}.topbar-html-content {  height: 160px !important;  align-items: flex-end;  padding-bottom: 12px;}.topbar-html {  box-shadow: none !important;}.bigtext-html-btn {  display: flex;  align-items: center;  justify-content: center;}.topbar-html-content-item img {  border-radius: 12px !important;}#page-header.nav-fixed #nav {  top: 0;  box-shadow: none;  background: var(--heo-card-bg);  outline: 1px solid var(--heo-card-border);}#nav {  padding: 0;}#page-header #nav {  box-shadow: none;  transition: 0.3s;  display: flex;  justify-content: center;  z-index: 1000 !important;  -webkit-user-select: none;}@media screen and (max-width: 768px) {  #nav {    padding: 0;  }  #page-header #nav {    background: linear-gradient(      to top,      var(--heo-main-none) 0,      var(--heo-main) 100%    );    transition: 0s;  }}#page-header #nav #nav-group {  max-width: 1400px;  width: 100%;  display: flex;  position: relative;  padding: 0 1.5rem;  align-items: center;}#page-header #nav #nav-right {  position: absolute;  right: 0;  z-index: 102;  display: flex;  flex-direction: row;  height: 100%;  align-items: center;  margin-right: 1.5rem;  overflow: hidden;}#page-header #nav #nav-left {  z-index: 102;  display: flex;  flex-direction: row;  height: 100%;  align-items: center;  margin-right: 1.5rem;  overflow: hidden;}.nav-button {  cursor: pointer;}#page-header #nav #nav-left .nav-button a,#page-header #nav #nav-right .nav-button a {  height: 35px;  width: 35px;  display: flex;  align-items: center;  justify-content: center;  border-radius: 40px;}#page-header #nav #nav-left .nav-button a i,#page-header #nav #nav-right .nav-button a i {  line-height: 1;  font-size: 22px;}#page-header #nav #nav-right div {  margin-left: 0.5rem;  padding: 0;}@media screen and (max-width: 768px) {  #nav #menus {    display: none !important;  }  #nav.hide-menu #toggle-menu .site-page {    width: 35px;    height: 35px;    display: flex;    align-items: center;    justify-content: center;  }  #page-header #nav #nav-group {    width: 100%;    display: flex;    position: relative;    padding: 0 12px;  }  #page-header #nav #nav-right {    margin-right: 12px;  }}#nav.show {  top: 0;  transition: 0.2s;  position: fixed;  z-index: 91;}#page-header.not-top-img #nav {  transition: 0.3s;  background: var(--heo-card-bg);}#page-header.not-top-img:not(.nav-fixed) #nav {  background: var(--heo-none);  transition: 0.3s;}@media screen and (max-width: 768px) {  #page-header.not-top-img:not(.nav-fixed) #nav {    transition: 0s;  }}#page-header.nav-fixed #nav #menus > div.menus_items {  transition: 0.3s;  height: 40px;  margin: auto 0;}#page-header.not-top-img {  margin-bottom: 0;}#nav #toggle-menu {  padding: 0 0.4rem;}#page-header.no-top-img {  margin-bottom: 0;}.layout {  padding: 1rem 1.5rem;}@media screen and (min-width: 1300px) {  .layout {    display: flex;    justify-content: space-between;    padding: 1rem 1.5rem;  }}#site-name .iconfont {  font-size: 20px;  font-weight: 400;  line-height: 48px;}#site-logo {  width: 121px;}#nav-totop {  position: relative;  width: 35px;  height: 35px;  transition: 0.3s;  display: flex;  border-radius: 40px;  transition: all 0.3s ease-in-out;  align-items: center;}#nav-totop.long {  width: 80px;}#nav-totop .totopbtn {  padding-top: 0;}#nav-totop .totopbtn i {  position: absolute;  display: flex;  font-size: 0.8rem;  opacity: 0;}#nav-totop:hover .totopbtn i {  opacity: 1;  color: var(--heo-card-bg);  transition: 0.3s;}#nav-totop #percent {  font-size: 12px;  border-radius: 35px;  display: flex;  justify-content: center;  align-items: center;  transition: 0.3s;  white-space: nowrap;}.nav-fixed #nav-totop #percent,.page #nav-totop #percent {  font-size: 12px;  border-radius: 35px;  display: flex;  justify-content: center;  align-items: center;  transition: 0.3s;  white-space: nowrap;}#page-header:not(.nav-fixed) #percent {  transition: 0.3s;}#page-header:not(.nav-fixed) #nav-totop {  width: 0;  transform: scale(0);  transition: 0.3s;  margin-left: 0 !important;  overflow: hidden;  transition: 0.3s ease-in;}#nav-totop:hover #percent {  opacity: 0;  font-weight: 700;}#page-header #nav #nav-right .nav-button a.totopbtn {  width: 25px;  height: 25px;  border-radius: 40px;  background: var(--heo-fontcolor);  color: var(--heo-card-bg);  position: absolute;  top: 5px;  right: 5px;  transition: 0.3s;}#page-header #nav #nav-right .nav-button.long a.totopbtn {  width: 70px;}#page-header #nav #nav-right .nav-button:hover a.totopbtn {  background: var(--heo-lighttext);}#page-header #nav #nav-right .nav-button:not(.long):hover a.totopbtn {  width: 35px;  height: 35px;  top: 0;  right: 0;}#nav #site-name i {  font-size: 16px;  line-height: 35px;  padding: 0 12px;}.back-home-button {  display: flex;  width: 35px;  height: 35px;  padding: 0 !important;  align-items: center;  justify-content: center;  margin-right: 4px;  transition: 0.3s;  border-radius: 8px;  color: var(--heo-white);  border-radius: 40px;}.page .back-home-button {  color: var(--heo-fontcolor);}.back-home-button i {  font-size: 22px;}@media screen and (max-width: 768px) {  .back-home-button {    display: none;  }}.nav-fixed #nav .back-home-button {  color: var(--heo-fontcolor);}#page-header.not-top-img #nav .back-home-button i {  font-size: 20px;}.back-home-button:hover {  background: var(--heo-main);  color: var(--heo-white);}.post .back-home-button:hover {  background: var(--heo-white-op);  color: var(--heo-white);}.nav-fixed .back-home-button:hover {  background: var(--heo-lighttext);  color: var(--heo-white);}.back-menu-list-groups .back-menu-list {  display: flex;  flex-direction: row;  flex-wrap: wrap;  width: 340px;  justify-content: space-between;}.back-menu-list-groups .back-menu-list::before {  position: absolute;  top: -15px;  left: 0;  width: 100%;  height: 20px;  content: "";}.back-menu-list-groups .back-menu-list .back-menu-item {  display: flex;  align-items: center;  margin: 4px 8px;  padding: 4px 8px !important;  transition: 0.3s;  border-radius: 8px;}.back-menu-list-groups .back-menu-list .back-menu-item:hover {  background: var(--heo-lighttext) !important;  transform: scale(1) !important;}.back-menu-list-groups .back-menu-list .back-menu-item .back-menu-item-icon {  width: 24px;  height: 24px;  border-radius: 8px;  background: var(--heo-none);}.back-menu-list-groups .back-menu-list .back-menu-item .back-menu-item-text {  font-size: 16px;  margin-left: 0.5rem;  color: var(--heo-fontcolor);  transition: 0.3s;}@media screen and (max-width: 768px) {  .back-menu-list-groups .back-menu-list .back-menu-item .back-menu-item-text {    font-size: 14px;  }}.back-menu-list-groups  .back-menu-list  .back-menu-item:hover  .back-menu-item-text {  color: var(--heo-card-bg);}.back-home-button .back-menu-list-group {  display: flex;  flex-direction: column;}.back-home-button .back-menu-list-groups {  position: absolute;  top: 45px;  transform: scale(0.8);  transform-origin: top left;  left: 1.5rem;  background-color: var(--heo-maskbgdeep);  border-radius: 12px;  border: var(--style-border);  flex-direction: column;  font-size: 12px;  color: var(--heo-secondtext);  box-shadow: var(--heo-shadow-border);  transition: 0.1s;  opacity: 0;  pointer-events: none;  backdrop-filter: blur(20px);  -webkit-backdrop-filter: blur(20px);}.back-home-button .back-menu-list-groups:hover {  border: var(--style-border-hover);}.back-home-button .back-menu-list-group .back-menu-list-title {  margin: 8px 0 0 16px;  transition: 0.3s;}.back-home-button .back-menu-list-group:hover .back-menu-list-title {  color: var(--heo-lighttext);}.back-home-button:hover .back-menu-list-groups {  display: flex;  opacity: 1;  transition: 0.3s;  top: 55px;  pointer-events: auto;  left: 1.5rem;  transform: scale(1);}.back-home-button .back-menu-list .back-menu-item {  width: 150px;}@media screen and (max-width: 768px) {  .back-home-button .back-menu-list-groups {    left: 0;  }  .back-home-button:hover .back-menu-list-groups {    padding-bottom: 8px;    box-shadow: var(--heo-shadow-border);    left: 0;  }}#nav #blog_name {  flex-wrap: nowrap;  height: 60px;  display: flex;  align-items: center;  z-index: 102;  transition: 0.3s;}@media screen and (min-width: 900px) {  #nav #site-name i {    opacity: 1;    transition: all 0.3s, color 0s, opacity 0.3s;  }  #nav #site-name:hover i {    opacity: 0;  }  #nav #site-name:after {    opacity: 0;    position: absolute;    display: flex;    z-index: 1;    content: "\e061";    transition: 0.1s;    font-family: heofont !important;    align-items: center;    justify-content: center;    font-size: 22px;    line-height: 1;  }  .post #nav #site-name:hover {    background: var(--heo-white-op);    color: var(--heo-white);  }  .nav-fixed #nav #site-name:hover {    background: var(--heo-lighttext);    color: var(--heo-card-bg);  }  #nav #site-name:hover:after {    opacity: 1;  }  #nav .back-home-button:hover {    box-shadow: var(--heo-shadow-main);    color: var(--heo-card-bg);  }  #nav #page-name-text {    display: inline;    font-weight: 700;    padding: 4px 8px;    opacity: 0;    transition: 0.1s;    text-overflow: ellipsis;    overflow: hidden;    white-space: nowrap;    position: relative;    text-align: center;    cursor: pointer;    top: 0;    font-size: 0.9rem;    animation-timing-function: ease-in;    -webkit-animation-timing-function: ease-in;  }  #nav #page-name-text:hover {    color: var(--heo-lighttext) !important;    background: var(--heo-none);    box-shadow: none;  }  #page-header.nav-fixed #nav #page-name-text {    display: inline;    opacity: 1;    transition: 0.3s;    line-height: 1;  }  #page-header.nav-fixed #nav #page-name-text:hover:after {    opacity: 1;    line-height: 36px;  }  #page-header.nav-fixed #nav div.menus_items {    transition: 0.15s;    position: relative;    top: -60px;  }  #page-header.nav-fixed.nav-visible #nav #page-name-text {    display: inline;    transition: 0.15s;  }  #page-header.nav-fixed.nav-visible #nav div.menus_items {    opacity: 1;    transition: 0.15s;    position: relative;    top: 0;  }  #page-name {    align-items: center;    display: flex;    border-radius: 12px;    height: 40px;    position: absolute;    top: 62px;    left: 0;    right: 0;    margin: auto;    justify-content: center;    animation-timing-function: ease-out;    -webkit-animation-timing-function: ease-out;  }  #page-header.nav-fixed #nav #menus {    z-index: 100;  }  #page-header.nav-fixed.nav-visible #nav #menus {    z-index: 101;  }  #page-header.nav-fixed #page-name {    z-index: 101;    transition: 0.3s;    top: 10px;  }  #page-header.nav-fixed.nav-visible #page-name {    z-index: 100;    top: 60px;    transition: 0.3s;  }  #page-name-mask {    width: 100%;    height: 100%;    position: absolute;    overflow: hidden;    left: 0;  }}@media screen and (max-width: 899px) {  #nav #page-name-mask {    display: none !important;  }}@media screen and (max-width: 798px) {  #nav-music {    display: none !important;  }}#nav-music {  display: flex;  align-items: center;  z-index: 1001;  position: fixed;  bottom: 20px;  left: 20px;  cursor: pointer;  transition: 0.3s;  transform-origin: left bottom;  box-shadow: var(--heo-shadow-border);  border-radius: 40px;  overflow: hidden;  user-select: none;}#nav-music span {  user-select: none;}#nav-music div {  user-select: none;}#nav-music.playing {  box-shadow: 0 0 12px -3px var(--heo-none);  -webkit-animation: playingShadow 5s linear infinite;}@-webkit-keyframes playingShadow {  0% {    box-shadow: 0 0 12px -6px var(--heo-none);  }  50% {    box-shadow: 0 0 12px 0 var(--heo-main);  }  100% {    box-shadow: 0 0 12px -6px var(--heo-none);  }}#nav-music .aplayer.aplayer-withlrc .aplayer-pic {  height: 25px;  width: 25px;  border-radius: 40px;  z-index: 1;  transition: 0.3s;  -webkit-transform: rotate(0) scale(1);  border: var(--style-border-always);  -webkit-animation: changeright 24s linear infinite;  animation-play-state: paused;}#nav-music.playing .aplayer.aplayer-withlrc .aplayer-pic {  box-shadow: 0 0 14px #ffffffa6;  -webkit-transform: rotate(0) scale(1.1);  border-color: var(--heo-white);  animation-play-state: running;}@-webkit-keyframes changeright {  0% {    -webkit-transform: rotate(0) scale(1.1);    box-shadow: 0 0 2px #ffffff00;  }  25% {    -webkit-transform: rotate(90deg) scale(1.1);    box-shadow: 0 0 10px #fff;  }  50% {    -webkit-transform: rotate(180deg) scale(1.1);    box-shadow: 0 0 2px #ffffff00;  }  75% {    -webkit-transform: rotate(270deg) scale(1.1);    box-shadow: 0 0 10px #fff;  }  100% {    -webkit-transform: rotate(360deg) scale(1.1);    box-shadow: 0 0 2px #ffffff00;  }}#nav-music .aplayer.aplayer-withlrc .aplayer-info {  height: 100%;  color: var(--heo-fontcolor);  margin-left: 8px;  padding: 0;  display: flex;  align-items: center;}#nav-music.playing .aplayer.aplayer-withlrc .aplayer-info {  color: var(--heo-white);}#nav-music #nav-music-hoverTips {  color: var(--heo-white);  background: var(--heo-main);  width: 100%;  height: 100%;  position: absolute;  top: 0;  left: 0;  align-items: center;  justify-content: center;  display: flex;  border-radius: 40px;  opacity: 0;  font-size: 12px;  transition: 0s;  z-index: 2;  pointer-events: none;  transition: 0.3s;}#nav-music:hover:not(.playing) #nav-music-hoverTips {  opacity: 1;}#nav-music.playing #nav-music-hoverTips {  opacity: 0;}#nav-music .aplayer {  background: var(--heo-card-bg);  border-radius: 60px;  height: 41px;  display: flex;  margin: 0;  pointer-events: none;  transition: 0.3s;  border: var(--style-border);  box-shadow: none;}#nav-music.playing .aplayer {  background: var(--heo-main-op-deep);  border: var(--style-border-hover);  backdrop-filter: saturate(180%) blur(20px);  -webkit-backdrop-filter: blur(20px);  transform: translateZ(0);}#nav-music .aplayer .aplayer-notice {  display: none;}#nav-music .aplayer .aplayer-miniswitcher {  display: none;}#nav-music .aplayer .aplayer-body {  position: relative;  display: flex;  align-items: center;  padding: 0 8px;  padding-right: 12px;}#nav-music .aplayer .aplayer-pic .aplayer-play {  opacity: 0;}#nav-music .aplayer-list {  display: none;}#nav-music .aplayer .aplayer-info .aplayer-music {  margin: 0;  display: flex;  align-items: center;  padding: 0;  z-index: 1;}#nav-music .aplayer .aplayer-info .aplayer-controller .aplayer-time {  display: none;}#nav-music .aplayer .aplayer-info .aplayer-music .aplayer-author {  display: none;}#nav-music .aplayer.aplayer-withlist .aplayer-info {  border: none;}#nav-music .aplayer .aplayer-pic div {  display: none;}#nav-music .aplayer .aplayer-info .aplayer-music .aplayer-title {  cursor: pointer;  line-height: 1;  display: inline-block;  white-space: nowrap;  max-width: 120px;  overflow: hidden;  text-overflow: ellipsis;  transition: 0.3s;}#nav-music .aplayer .aplayer-info .aplayer-controller {  position: absolute;  width: 100%;  height: 100%;  top: 0;  left: 0;}#nav-music .aplayer .aplayer-info .aplayer-controller .aplayer-bar-wrap {  margin: 0;  padding: 0;}#nav-music  .aplayer  .aplayer-info  .aplayer-controller  .aplayer-bar-wrap  .aplayer-bar {  height: 100%;  background: 0 0;  opacity: 0;}#nav-music.playing  .aplayer  .aplayer-info  .aplayer-controller  .aplayer-bar-wrap  .aplayer-bar {  opacity: 1;}#nav-music  .aplayer  .aplayer-info  .aplayer-controller  .aplayer-bar-wrap  .aplayer-bar  .aplayer-loaded {  display: none;}#nav-music  .aplayer  .aplayer-info  .aplayer-controller  .aplayer-bar-wrap  .aplayer-bar  .aplayer-played {  height: 100%;  opacity: 0.1;  background-color: var(--heo-white) !important;  -webkit-animation: lightBar 5s ease infinite;  animation-play-state: paused;}#nav-music.playing  .aplayer  .aplayer-info  .aplayer-controller  .aplayer-bar-wrap  .aplayer-bar  .aplayer-played {  animation-play-state: running;}@-webkit-keyframes lightBar {  0% {    opacity: 0.1;  }  60% {    opacity: 0.3;  }  100% {    opacity: 0.1;  }}#nav-music .aplayer.aplayer-withlrc .aplayer-lrc {  width: 0;  opacity: 0;  transition: 0.3s;  margin-left: 8px;  margin-top: -2px;}#nav-music.playing .aplayer.aplayer-withlrc .aplayer-lrc {  width: 200px;  margin-bottom: 0;  opacity: 1;}#nav-music .aplayer .aplayer-lrc p {  color: #ffffffb3;  filter: blur(0.8px);}#nav-music .aplayer .aplayer-lrc p.aplayer-lrc-current {  color: var(--heo-white);  border: none;  filter: blur(0);}#nav-music .aplayer .aplayer-lrc:after,#nav-music .aplayer .aplayer-lrc:before {  display: none;}i.fab {  font-size: 20px;  vertical-align: middle;  margin-bottom: 4px;}#body-wrap .full_page:before {  background-color: var(--heo-none) !important;  transition: 0s !important;}.full_page #page-header:before {  display: none !important;}.snackbar-container {  background: var(--heo-lighttext) !important;  color: var(--heo-card-bg) !important;  border-radius: 0 !important;  display: flex;  justify-content: center !important;  max-width: none !important;  min-width: 100% !important;  margin: 0 !important;  left: 0 !important;  height: 60px !important;  transform: none !important;}.snackbar-container p {  color: var(--heo-card-bg) !important;  font-weight: 700 !important;  text-align: center !important;  font-size: 0.8rem !important;  display: flex !important;  justify-content: center !important;}.snackbar-container .action {  color: var(--heo-card-bg) !important;  background: var(--heo-lighttext) !important;  padding: 4px 6px !important;  font-weight: 700;  border-radius: 8px !important;  transition: 0.3s;  border: var(--style-border) !important;}.snackbar-container .action:hover {  color: var(--heo-lighttext) !important;  background: var(--heo-card-bg) !important;}.snackbar-container::after {  position: absolute;  width: 0;  height: 100%;  left: 0;  top: 0;  background: var(--heo-white);  opacity: 0.1;  content: "";  animation: snackbar-progress var(--heo-snackbar-time) linear forwards;  pointer-events: none;}@keyframes snackbar-progress {  from {    width: 0;  }  to {    width: 100%;  }}#nav a {  transition: 0.3s;}#nav a:hover {  color: var(--heo-white);  background: var(--heo-white-op);  transition: 0.3s;}.page #nav a:hover {  color: var(--heo-card-bg);  background: var(--heo-lighttext);  transition: 0.3s;  box-shadow: var(--heo-shadow-main);}.error #nav a:hover {  background: var(--heo-main);}.nav-fixed #nav a:hover {  background: var(--heo-lighttext);  color: var(--heo-card-bg);  transition: 0.3s;}@media screen and (min-width: 768px) {  .menus_item:hover > a.site-page {    color: var(--heo-card-bg);    background: var(--heo-white-op);    transition: 0.3s;    box-shadow: var(--heo-shadow-main);  }  .page .menus_item:hover > a.site-page {    color: var(--heo-card-bg);    background: var(--heo-main);    transition: 0.3s;    box-shadow: var(--heo-shadow-main);  }  .post .menus_item:hover > a.site-page {    color: var(--heo-white);  }  .nav-fixed .menus_item:hover > a.site-page {    background-color: var(--heo-lighttext);  }}@media screen and (max-width: 768px) {  #sidebar #sidebar-menus .menus_items li .site-page:hover {    background: var(--heo-main);    color: var(--heo-white);  }  #sidebar #sidebar-menus .menus_items li .site-page span:hover {    color: var(--heo-white);  }  #nav #site-name i {    color: var(--heo-white);    transition: 0.1s;  }  .error #nav #site-name i {    color: var(--heo-fontcolor);  }  .nav-fixed #nav #site-name i {    color: var(--heo-fontcolor);    transition: 0.3s;  }  .page #nav #site-name i {    color: var(--heo-fontcolor);  }  #nav a:hover {    background: var(--heo-none) !important;    box-shadow: none !important;    transition: 0.3s;    color: var(--heo-fontcolor);  }  #page-header.not-top-img #nav a:hover {    color: var(--heo-fontcolor);  }}.nav-fixed #nav #site-name i {  color: var(--heo-fontcolor);  transition: 0.3s;}#search-mask {  backdrop-filter: blur(12px);  -webkit-backdrop-filter: blur(12px);  transform: translateZ(0);  background: var(--heo-maskbgdeep);}#algolia-search .search-dialog .ais-search-box input {  border-radius: 8px !important;  border: var(--style-border);}#algolia-search .search-dialog .ais-search-box input:focus {  border: var(--style-border-hover);}#algolia-search .search-dialog .ais-search-box input::placeholder {  opacity: 0.6;}#algolia-input-panel {  margin-bottom: 8px;}.search-dialog {  border-radius: 12px !important;  box-shadow: var(--heo-shadow-lightblack);  background: var(--heo-card-bg);  border: var(--style-border);  transition: 0.3s;}.search-dialog:hover {  border: var(--style-border-hover);  box-shadow: var(--heo-shadow-theme);}.search-dialog__title {  font-weight: 700;  color: var(--heo-main);}#algolia-search .search-dialog .ais-hits--item.algolia-hit-item a:hover {  color: var(--heo-hovertext);}#algolia-search .search-dialog .algolia-logo {  display: none;}#algolia-tips {  padding-top: 12px;  color: var(--heo-secondtext);  right: 0;  margin: auto;}#algolia-tips i {  font-size: 22px;}.algolia-tips-text {  margin-left: 0.4rem;}#algolia-search-results {  padding-top: 8px;}#algolia-search .search-dialog .ais-hits--item.algolia-hit-item:before {  display: none;}#algolia-search .search-dialog .ais-hits--item.algolia-hit-item {  padding-left: 0;  font-weight: 700;}#algolia-search .search-dialog .ais-pagination.pagination {  margin: 0.2rem 0 0;}#algolia-search .search-dialog .ais-hits--item.algolia-hit-item em {  color: var(--heo-theme);  font-style: normal;}#algolia-search .search-dialog .ais-search-box {  padding-top: 8px;}#algolia-search  .search-dialog  .ais-pagination.pagination  .ais-pagination--item.current  a {  border-radius: 4px;  background: var(--heo-main);  color: var(--heo-white);}hr {  display: none;}#footer-wrap {  color: var(--heo-fontcolor);}#footer-wrap a {  color: var(--heo-fontcolor);  height: 44px;  line-height: 36px;}#footer-wrap a:hover {  color: var(--heo-hovertext);  background-color: var(--heo-none);}div#footer_deal {  justify-content: center;  display: flex;  padding-top: 2rem;  align-items: center;}#card-poem {  display: flex;  flex-direction: column;  padding: 0.5rem !important;  min-height: 130px;}div#poem_sentence {  text-align: center;  font-family: serif, cursive;  line-height: 1.4;  margin-bottom: 0.5rem;  padding: 1rem;  border-radius: 12px;  background: var(--heo-secondbg);  min-height: 62px;}div#poem_info {  display: flex;  color: var(--heo-secondtext);  font-size: 0.5rem;  justify-content: center;  flex-wrap: wrap;}div#poem_author {  order: 1;  padding: 2px;  margin-left: 8px;}div#poem_dynasty {  order: 0;  padding: 2px 4px 2px 6px;  background: var(--heo-card-btn-bg);  color: var(--heo-fontcolor);  border-radius: 8px;}@media screen and (max-width: 768px) {  .footer_mini_logo {    display: none;  }  div#footer_deal {    flex-wrap: wrap;    flex-direction: row;  }}a.deal_link {  display: flex;  margin: 1rem 27px;  color: var(--heo-card-bg);  border-radius: 3rem;  width: 32px;  height: 32px;  background: var(--heo-fontcolor);  justify-content: center;  align-items: center;  transition: 0.3s;}a.deal_link:hover {  color: var(--heo-card-bg);  background: var(--heo-lighttext);  transform: scale(1.1);}.footer_mini_logo {  width: 50px;  height: 50px;  margin: 0 1rem;  cursor: pointer;  transition: cubic-bezier(0, 0, 0, 1.29) 0.5s;  -webkit-user-select: none;  border-radius: 50px;  overflow: hidden;}.footer_mini_logo:hover {  -webkit-backface-visibility: hidden;  -webkit-transform-style: preserve-3d;  transform: scale(1.2);}#weblogo {  align-self: center;}#footer-wrap a#heoblog_footerlogo:hover {  background: var(--heo-none);}.heoblog_footerlogo_img {  filter: drop-shadow(0 12px 12px #ee7d7936);}#nav #menus {  display: flex;  justify-content: center;  width: 100%;  position: absolute;  height: 60px;  left: 0;  margin: 0;  transform: translateZ(0);}#nav .menus_items {  position: relative;  width: fit-content;  text-align: center;  left: 0;  right: 0;  top: 0;  display: flex;  flex-direction: row;  justify-content: center;}#menus > div.menus_items > div > a {  letter-spacing: 0.3rem;  padding-left: 0.7rem;  font-weight: 700;  padding-top: 0;  padding-bottom: 0;  height: 35px;  line-height: 35px;  border-radius: 40px;}.page #menus > div.menus_items > .menus_item:hover > a {  color: var(--heo-card-bg);}#nav .menus_items .menus_item .menus_item_child li a {  letter-spacing: 0;  display: flex;  align-items: center;  border-radius: 100px;  padding: 0.3rem 0.8rem;  width: 100%;  color: var(--heo-fontcolor);  text-shadow: none;}#nav .menus_items .menus_item .menus_item_child li a:hover {  background: var(--heo-lighttext);  color: var(--heo-card-bg);  box-shadow: var(--heo-shadow-main);  margin: 0 auto;  transform: scale(1);  padding: 0.3rem 1rem;}#page-header.nav-fixed  #nav  #menus[style *="padding-right: 300px;"]  .menus_items {  transform: translateX(-150px);}#travellings_button {  display: inline;  padding: 0 0.4rem;  transition: 0.3s;}@media screen and (max-width: 768px) {  #page-header.nav-fixed #travellings_button {    opacity: 0;  }}#rightMenu {  display: none;  position: fixed;  padding: 0 0.25rem;  width: 9rem;  height: fit-content;  top: 10%;  left: 10%;  background-color: var(--heo-maskbgdeep);  -webkit-backdrop-filter: blur(20px);  backdrop-filter: blur(20px);  transform: translateZ(0);  color: var(--heo-fontcolor);  border-radius: 12px;  z-index: 99994;  border: var(--style-border);  user-select: none;  box-shadow: var(--heo-shadow-black);  transition: border 0.3s;}#rightMenu:hover {  border: var(--style-border-hover);  box-shadow: var(--heo-shadow-theme);  border-color: var(--heo-main);}#rightMenu .rightMenu-group {  padding: 0.35rem 0.3rem;  transition: 0.3s;}#rightMenu .rightMenu-line {  border-top: 1px dashed var(--heo-theme-op);}#rightMenu .rightMenu-group.rightMenu-small {  display: flex;  justify-content: space-between;}#rightMenu .rightMenu-group .rightMenu-item {  border-radius: 8px;  transition: 0.3s;  cursor: pointer;}#rightMenu .rightMenu-line .rightMenu-item {  margin: 0.25rem 0;  padding: 0.25rem 0;}#rightMenu .rightMenu-group.rightMenu-line .rightMenu-item {  display: flex;}#rightMenu .rightMenu-group .rightMenu-item:hover {  background-color: var(--heo-lighttext);  color: var(--heo-card-bg);  box-shadow: var(--heo-shadow-main);}#rightMenu .rightMenu-group .rightMenu-item i {  display: inline-block;  text-align: center;  line-height: 1.5rem;  width: 1.5rem;  padding: 0 0.25rem;}#rightMenu .rightMenu-line .rightMenu-item i {  margin: 0 0.25rem;}#rightMenu .rightMenu-group .rightMenu-item span {  line-height: 1.5rem;}.rightMenu-small .rightMenu-item {  width: 30px;  height: 30px;  line-height: 30px;  display: flex;  align-items: center;  justify-content: center;}#rightmenu-mask {  position: fixed;  width: 100vw;  height: 100vh;  background: 0 0;  top: 0;  left: 0;  display: none;  z-index: 101;  margin: 0 !important;  z-index: 99993;}#darkmode_navswitch {  display: inline;  position: relative;}#darkmode_navswitch a i {  font-size: 0.9rem;}[data-theme="dark"] #page-header.not-top-img #nav .darkmode_switchbutton {  color: var(--heo-yellow);}a.darkmode_switchbutton {  padding: 4px 8px !important;  cursor: pointer;  margin: 0 !important;  font-size: 0.9rem;  color: var(--heo-fontcolor);}[data-theme="dark"] a.darkmode_switchbutton {  background: var(--heo-orange) !important;  color: var(--heo-white) !important;}a.console_switchbutton {  padding: 4px 8px !important;  cursor: pointer;}@media screen and (max-width: 768px) {  #nav-console {    display: none;  }}#nav .site-page {  text-shadow: 0.05rem 0.05rem 0.1rem transparent;  border-radius: 8px;}.nav-fixed #nav .site-page {  color: var(--heo-fontcolor);}.nav-fixed #nav .menus_item:hover .site-page {  color: var(--heo-card-bg);}.nav-fixed #nav .menus_item:hover li .site-page {  color: var(--heo-fontcolor);}#nav #site-name {  padding: 0;  transition: 0.3s;  display: flex;  height: 35px;  width: 70px;  justify-content: center;  align-items: center;  text-shadow: none;  border-radius: 40px;  cursor: pointer;  color: var(--heo-white);}.page #nav #site-name {  color: var(--heo-white);}.page #nav #site-name i {  color: var(--heo-fontcolor);}.page #nav #site-name:hover {  color: var(--heo-card-bg);}#search-button > a > span {  display: none;}#nav .menus_items .menus_item i.expand {  display: none;}#rightside {  display: none;  padding-right: 8px;  position: fixed;  right: -38px;  bottom: 40px;  z-index: 100;  opacity: 0;  transition: all 0.5s ease 0s;}#rightside > div > a,#rightside > div > button {  margin-bottom: 8px;  transition: 0.3s;}#rightside > div > a:hover,#rightside > div > button {  transition: 0.3s;}#rightside #rightside-config-hide {  transform: translate(42px, 0);}#footer {  background: linear-gradient(    180deg,    var(--heo-card-bg-none) 0,    var(--heo-card-bg) 25%  );  margin-top: 0.5rem;  display: flex;  flex-direction: column;}@media screen and (max-width: 768px) {  #footer {    background: linear-gradient(      180deg,      var(--heo-background) 0,      var(--heo-card-bg) 25%    );    margin-top: 0;    z-index: 999;  }}#algolia-search .ais-hits--item.algolia-hit-item a {  color: var(--heo-fontcolor);}.aplayer .aplayer-list ol {  backdrop-filter: blur(1px);  -webkit-backdrop-filter: blur(1px);  transform: translateZ(0);}.aplayer .aplayer-lrc:after {  display: none !important;}.aplayer.aplayer-withlrc.aplayer-withlist {  border-radius: 12px;}#article-container .aplayer {  border-radius: 12px;  min-height: 90px;  background: var(--heo-card-bg);  border: var(--style-border);  box-shadow: var(--heo-shadow-border);}#article-container.flink {  margin-top: 1rem;}#article-container.flink h2 {  margin-top: 0.5rem;  margin-bottom: 0;}#algolia-hits .tag-list {  padding: 4px 8px;  border-radius: 8px;  margin-right: 0.5rem;  margin-top: 0.5rem;  border: var(--style-border-always);  cursor: pointer;}#algolia-hits .tag-list:hover {  background: var(--heo-main);  color: var(--heo-white);}#mobile-sidebar #mobile-sidebar-menus.open {  background: var(--heo-maskbg);}#aside-content .card-info .card-info-data > .card-info-data-item {  transition: 0.3s;}#sidebar #sidebar-menus .site-data {  margin: 1rem 0;  padding: 0.6rem 0.5rem;}#sidebar-menus > hr {  display: none;}#card-info-btn {  border-radius: 25px;  overflow: hidden;}#card-info-btn:before {  border-radius: 25px;}#algolia-search .search-dialog .ais-hits--item.algolia-hit-item a {  color: var(--heo-fontcolor);  width: auto;  max-width: 100%;  white-space: nowrap;  text-overflow: ellipsis;  overflow: hidden;}.not-index-bg {  height: 2rem !important;  background-image: none !important;  background-color: var(--heo-none) !important;}.not-index-bg img {  display: none;}.not-index-bg #page-site-info {  display: none;}.pace {  -webkit-pointer-events: none;  pointer-events: none;  -webkit-user-select: none;  -moz-user-select: none;  user-select: none;  z-index: 2000;  position: fixed;  margin: auto;  top: 4px;  left: 0;  right: 0;  height: 8px;  border-radius: 8px;  width: 4rem;  background: var(--heo-secondbg);  border: var(--style-border);  overflow: hidden;}.pace-inactive .pace-progress {  opacity: 0;  transition: 0.3s ease-in;}.pace .pace-progress {  -webkit-box-sizing: border-box;  -moz-box-sizing: border-box;  -ms-box-sizing: border-box;  -o-box-sizing: border-box;  box-sizing: border-box;  -webkit-transform: translate3d(0, 0, 0);  -moz-transform: translate3d(0, 0, 0);  -ms-transform: translate3d(0, 0, 0);  -o-transform: translate3d(0, 0, 0);  transform: translate3d(0, 0, 0);  max-width: 200px;  position: fixed;  z-index: 2000;  display: block;  position: absolute;  top: 0;  right: 100%;  height: 100%;  width: 100%;  background: var(--heo-logo-color);  animation: gradient 2s ease infinite;  background-size: 200%;}.pace.pace-inactive {  opacity: 0;  transition: 0.3s;  top: -8px;}@media screen and (max-width: 1300px) {  #aside-content .sticky_layout {    top: 60px;  }}@media screen and (min-width: 768px) {  #aside-content .sticky_layout {    margin-top: 1rem;  }}@media screen and (min-width: 1300px) {  #aside-content .sticky_layout {    margin-top: 1rem;  }}#aside-content .sticky_layout {  top: 80px;  transition: top 0s;}#aside-content .sticky_layout .card-widget:first-child {  margin-top: 0;}#aside-content .card-widget:hover {  box-shadow: var(--heo-shadow-border);}#aside-content #card-funds {  margin-bottom: 1rem;  min-height: 260px;}#page-header.nav-visible + .layout > .aside-content > .sticky_layout {  top: 80px;}#aside-content {  width: 300px;}@media screen and (max-width: 1300px) {  #aside-content {    width: 300px;  }}@media screen and (max-width: 1200px) {  #aside-content {    display: none;  }}.card-widget.card-recent-post {  padding: 0.4rem 0.6rem !important;}#aside-content .aside-list > .aside-list-item .content > time {  display: none;}#aside-content .aside-list > .aside-list-item .content > .title {  font-weight: 700;  padding: 2px 0;  margin-bottom: 8px;}.article-recent_post_categories {  font-size: 12px;  font-weight: 700;  opacity: 0.6;  line-height: 1;}#aside-content .aside-list > .aside-list-item {  padding: 2px 6px 8px 6px;  border-radius: 12px;  transition: 0.3s;  margin: 4px 0;  cursor: pointer;  display: flex;  -webkit-box-align: center;  align-items: flex-start;}#aside-content .aside-list > .aside-list-item:hover .thumbnail > img {  transform: scale(1);}#aside-content .aside-list > .aside-list-item .thumbnail {  -webkit-mask-image: -webkit-radial-gradient(center, #fff, #000);  border-radius: 8px;  border: var(--style-border);  display: flex;  align-items: center;}#aside-content .aside-list > .aside-list-item:hover {  background: var(--heo-main);  color: var(--heo-white);  transition: 0.3s;  box-shadow: var(--heo-shadow-main);}#aside-content .aside-list > .aside-list-item:hover a {  color: var(--heo-white) !important;}.main-hero-waves-area {  width: 100%;  position: absolute;  left: 0;  bottom: -11px;  z-index: 5;}.waves-area .waves-svg {  width: 100%;  height: 60px;}.parallax > use {  animation: move-forever 30s cubic-bezier(0.55, 0.5, 0.45, 0.5) infinite;}.parallax > use:nth-child(1) {  animation-delay: -2s;  animation-duration: 7s;  fill: var(--heo-background);  opacity: 0.5;}.parallax > use:nth-child(2) {  animation-delay: -3s;  animation-duration: 10s;  fill: var(--heo-background);  opacity: 0.6;}.parallax > use:nth-child(3) {  animation-delay: -4s;  animation-duration: 13s;  fill: var(--heo-background);  opacity: 0.7;}.parallax > use:nth-child(4) {  animation-delay: -5s;  animation-duration: 20s;  fill: var(--heo-background);}@keyframes move-forever {  0% {    transform: translate3d(-90px, 0, 0);  }  100% {    transform: translate3d(85px, 0, 0);  }}@media (max-width: 768px) {  .main-hero-waves-area {    display: none;  }}a.card-archive-list-link-more {  color: var(--heo-white) !important;  background: var(--heo-card-btn-bg);  margin-top: 8px;}#aside-content .card-archives ul.card-archive-list > .card-archive-list-item a,#aside-content  .card-categories  ul.card-category-list  > .card-category-list-item  a {  border-radius: 8px;  margin: 4px 0;  display: flex;  flex-direction: column;  align-content: space-between;  border: var(--style-border);}#aside-content  .card-archives  ul.card-archive-list  > .card-archive-list-item  a  span:first-child,#aside-content  .card-categories  ul.card-category-list  > .card-category-list-item  a  span:first-child {  width: auto;}#aside-content .card-archives ul.card-archive-list,#aside-content .card-categories ul.card-category-list {  display: flex;  flex-direction: row;  justify-content: space-between;  flex-wrap: wrap;}.card-allinfo hr {  display: flex;  position: relative;  margin: 1rem 0;  border: 1px dashed var(--heo-theme-op);}.card-allinfo .item-headline {  display: none;}span.card-archive-list-count {  width: auto;  text-align: left;  font-size: 1.1rem;  line-height: 0.9;  font-weight: 700;}.card-archive-list-count-group {  display: flex;  flex-direction: row;  align-items: baseline;}#aside-content  .card-archives  ul.card-archive-list  > .card-archive-list-item  a  span:last-child,#aside-content  .card-categories  ul.card-category-list  > .card-category-list-item  a  span:last-child {  width: fit-content;  margin-left: 4px;}.card-archive-list-count-unit {  width: auto;  text-align: left;  font-size: 14px;  font-weight: 700;}.card-archive-list-date {  font-size: 14px;  opacity: 0.6;}li.card-archive-list-item {  width: 100%;  flex: 0 0 48%;}.card-category-list {  display: flex;  flex-direction: row;  flex-wrap: wrap;  justify-content: space-between;}.card-category-list-item {  width: 45%;}.card-category-list-count {  display: none !important;}.card-category-list-name {  width: 100% !important;  text-align: center;}.webinfo-item {  display: flex;  white-space: nowrap;}.webinfo-item-title {  display: flex;}.webinfo-item-title i {  line-height: 2;  margin-right: 6px;  width: 16px;  text-align: center;  font-size: 16px;}@media screen and (min-width: 1300px) {  #aside-content {    padding-left: 1rem;    animation: slide-in 0.6s 0.3s backwards;  }  #aside-content .sticky_layout {    top: calc(60px + 1rem);  }  #page-header.nav-visible + .layout > .aside-content > .sticky_layout {    top: calc(60px + 1rem);  }  [data-theme="dark"] #aside-content > .card-widget.card-info {    border: var(--style-border);  }  .coverdiv {    height: 130%;  }}.medium-zoom-overlay {  background: var(--heo-maskbg) !important;  z-index: 99998 !important;  backdrop-filter: saturate(180%) blur(20px);  -webkit-backdrop-filter: blur(20px);  transform: translateZ(0);}.medium-zoom-image--opened {  border-radius: 2px;}#toggle-sidebar {  bottom: 80px;}.button--animated {  border-radius: 8px !important;  transition: 0.3s;}#error-wrap .error-content .error-info a:hover {  background-color: var(--heo-blue);  transition: 0.3s;  box-shadow: var(--heo-shadow-blue);}.button--animated:before {  display: none;}a.tree-list-post-link {  font-size: 0.8rem;  line-height: 1.2 !important;}li.tree-list-item {  line-height: 1.9;  margin: 0.3rem 0;}.title-h2-a {  display: flex;  align-items: center;  justify-content: space-between;  margin-top: 0.5rem;}.title-h2-a a {  margin-left: 0.5rem;  color: var(--heo-secondtext);  font-weight: 700;}.title-h2-a a:hover {  color: var(--heo-lighttext);}.title-h2-a-left {  display: flex;  align-items: center;}.title-h2-a-left h2 {  margin-top: 0 !important;  margin-bottom: 0 !important;}.title-h2-a-right {  font-size: 14px;  color: var(--heo-secondtext);}.title-h2-a a.random-post-start {  opacity: 0.6;}#card-funds .funds-list::-webkit-scrollbar {  display: none !important;}.funds-tips {  font-size: 0.5rem;  width: 100%;  text-align: center;  color: var(--heo-secondtext);  margin: 0.5rem 0 0 0;  white-space: nowrap;  overflow: hidden;  text-overflow: ellipsis;  position: absolute;  bottom: 0.5rem;  left: 0;  padding: 0 1rem;}.funds-list {  height: 200px;  overflow: scroll;}span.fund_name {  white-space: nowrap;  overflow: hidden;  text-overflow: ellipsis;}.funds-info {  margin-left: 4px;  color: var(--heo-secondtext);}.funds-list-item .content {  display: flex;  flex-direction: row;  justify-content: space-between;  flex-wrap: nowrap;}.fund_dayGrowth {  display: inline;  float: right;}.fund-up {  color: var(--heo-red);}.fund-down {  color: var(--heo-green);}#aside-content .card-widget#card-music {  background: var(--heo-pink);  display: flex;  justify-content: center;  align-content: center;  padding: 0;  cursor: pointer;  border: none;}#aside-content .card-widget#card-music img {  max-height: 110px;  object-fit: cover;}#aside-content .card-widget#card-music:hover img {  transition: 0.5s;  -webkit-backface-visibility: hidden;  -webkit-transform-style: preserve-3d;}.music-link {  display: flex;  justify-content: center;  align-content: center;}#aside-content .card-widget#card-friendlinks {  background: var(--heo-main);  display: flex;  justify-content: center;  align-content: center;  padding: 0;  cursor: pointer;  border: none;}#aside-content .card-widget#card-friendlinks img {  max-height: 110px;  object-fit: cover;}#aside-content .card-widget#card-friendlinks:hover img {  transition: 0.5s;  -webkit-backface-visibility: hidden;  -webkit-transform-style: preserve-3d;}.friend-link {  display: flex;  justify-content: center;  align-content: center;}#aside-content .card-widget#card-wechat {  background: var(--heo-blue);  display: flex;  justify-content: center;  align-content: center;  padding: 0;  cursor: pointer;  border: none;  height: 110px;}#aside-content .card-widget#card-wechat.wechat {  background: var(--heo-green);}#aside-content .card-widget#card-wechat::before {  position: absolute;  width: 100%;  height: 100%;  left: 0;  top: 0;  background: url(https://p.zhheo.com/KrWQdG24890781690197108608.png!cover)    center center no-repeat;  content: "";  background-size: cover;}#aside-content .card-widget#card-wechat.wechat::before {  background: url(https://p.zhheo.com/i28Q2z23790881691546797700.png!cover)    center center no-repeat;  background-size: cover;}#aside-content .card-widget#card-wechat img {  max-height: 110px;  object-fit: cover;}.friend-link {  display: flex;  justify-content: center;  align-content: center;}#flip-wrapper {  position: relative;  width: 100%;  height: 100%;  z-index: 1;  display: flex;  justify-content: center;}#aside-content .card-widget.card-power {  padding: 0.4rem 0.6rem !important;}#aside-content .card-widget.card-power .power-charge {  margin-left: auto;  color: var(--heo-secondtext);  font-size: 14px;  line-height: 1;}#aside-content .card-widget.card-power .power-charge:hover {  color: var(--heo-lighttext);}.power-list {  display: flex;  flex-direction: row;  flex-wrap: wrap;  margin: 0 -4px;}.power-list .power-item .power-item-link a {  padding: 2px 4px;  border-radius: 4px;  margin-left: 8px;}.power-list .power-item .power-item-link a:hover {  background: var(--heo-lighttext);  color: var(--heo-card-bg);}#aside-content .power-item-body {  display: flex;  flex-direction: row;  flex-wrap: wrap;}#power-star-image {  width: 60px;  height: 60px;  border-radius: 8px;  background-size: cover;  margin-right: 12px;  border: var(--style-border-always);}a#power-star {  display: flex;  padding: 8px;  border: var(--style-border-always);  border-radius: 8px;  flex-direction: row;  flex-wrap: nowrap;  justify-content: flex-start;  position: relative;  margin: 12px 0;  background: var(--heo-secondbg);}a#power-star:hover {  background: var(--heo-lighttext);  color: var(--heo-card-bg);}div#power-star-title {  overflow: hidden;  text-overflow: ellipsis;  white-space: nowrap;  font-size: 16px;  font-weight: 700;  line-height: 1;  margin-bottom: 8px;}#power-star-desc {  display: -webkit-box;  -webkit-box-orient: vertical;  -webkit-line-clamp: 2;  overflow: hidden;  font-size: 12px;  max-width: 100%;  line-height: 1.2;}.power-star-body {  display: flex;  flex-direction: column;  align-items: flex-start;  flex-wrap: wrap;  position: relative;  width: calc(100% - 68px);  justify-content: center;}#flip-wrapper {  -webkit-perspective: 1000;  perspective: 1000;}#flip-content {  width: 235px;  height: 110px;  -webkit-transform-style: preserve-3d;  transform-style: preserve-3d;  transition: cubic-bezier(0, 0, 0, 1.29) 0.3s;}#flip-wrapper:hover #flip-content {  -webkit-transform: rotateY(180deg);  transform: rotateY(180deg);}.face {  position: absolute;  width: 100%;  height: 100%;  -webkit-backface-visibility: hidden;  backface-visibility: hidden;}.back.face {  display: block;  -webkit-transform: rotateY(180deg);  transform: rotateY(180deg);  box-sizing: border-box;}.pindao .face {  background: url(https://p.zhheo.com/sgDgtu21290781690197072717.png!cover)    center center no-repeat;  background-size: cover;}.pindao .back.face {  background: url(https://p.zhheo.com/fO9D9721990781690197079898.png!cover)    center center no-repeat;  background-size: cover;}.wechat .face {  background: url(https://p.zhheo.com/Y87vtG22690881691546426143.png!cover)    center center no-repeat;  background-size: cover;}.wechat .back.face {  background: url(https://p.zhheo.com/g7XCuB24190881691546441299.png!cover)    center center no-repeat;  background-size: cover;}#card-vip-designweekly.card-widget {  display: flex !important;  padding: 0;  cursor: pointer;}#card-vip-designweekly.card-widget .card-vip-designweekly-img {  width: 100%;  object-fit: cover;}.card-vip-tips {  display: flex;  position: absolute;  font-size: 12px;  bottom: 8px;  left: 8px;  padding: 1px 6px;  background: var(--heo-black-op);  border-radius: 8px;  color: var(--heo-white);}#widget-tree-button {  background-color: var(--heo-secondbg) !important;  box-shadow: var(--heo-shadow-light2black) !important;  color: var(--heo-fontcolor);}#widget-tree:hover #widget-tree-button {  opacity: 0;  left: -1.5rem;}#widget-tree {  background-color: var(--heo-maskbg) !important;}#widget-tree:hover {  left: 0 !important;  backdrop-filter: blur(20px);  -webkit-backdrop-filter: blur(20px);  transform: translateZ(0);}#widget-tree a {  -webkit-line-clamp: 2;  color: var(--heo-fontcolor) !important;}#widget-tree a:hover {  color: var(--heo-hovertext) !important;}.toggle-post-icon,.toggle-toc-icon {  color: var(--heo-fontcolor) !important;}@media screen and (max-width: 768px) {  #widget-tree {    display: none !important;  }}.guli_top {  position: fixed;  z-index: 99;  right: 30px;  display: flex;  transition: 0.3s;  opacity: 0;  bottom: -25px;  width: 88px;  height: 123px;  user-select: none;}.guli_top.guli-fixed {  opacity: 1;  bottom: 25px;}#guli_top .guli_body {  position: relative;  height: 123px;  z-index: 1003;}#guli_top .guli_body:hover {  cursor: pointer;}#guli_top .guli_wing {  position: relative;  height: 64px;  z-index: 1002;  bottom: -120px;  transform: scale(0.01);  box-shadow: var(--heo-shadow-yellow);}#guli_top.open_wing .guli_wing {  transform: scale(1.03);}#guli_top.open_wing .guli_body {  transform: scale(1);}@media screen and (max-width: 1300px) {  #guli_top {    display: none;  }}#cookies-window {  min-width: 300px;  background: var(--heo-maskbgdeep);  color: var(--heo-fontcolor);  padding: 8px 16px;  display: flex;  flex-direction: column;  bottom: 20px;  right: 20px;  position: fixed;  border-radius: 12px;  transition: 0.3s;  z-index: 1002;  user-select: none;  backdrop-filter: saturate(180%) blur(20px);  -webkit-backdrop-filter: saturate(180%) blur(20px);  transform: translateZ(0);  border: var(--style-border);  animation: barrageIn 0.6s cubic-bezier(0.42, 0, 0.3, 1.11);}#cookies-window.cw-hide {  opacity: 0;  animation: barrageOut 0.6s cubic-bezier(0.42, 0, 0.3, 1.11);  z-index: -1;}#cookies-window .cookies-window-title {  padding-bottom: 4px;  border-bottom: var(--style-border);  font-size: 12px;  font-weight: 700;}#cookies-window .cookies-window-content {  font-size: 14px;  display: flex;  justify-content: space-around;  align-items: center;}.cookie-to {  margin-right: 4px;  font-weight: 700;}.cookies-link {  margin-left: auto;  font-size: 16px;}.cookies-link i.heofont {  font-size: 16px;}@media screen and (max-width: 1300px) {  #cookies-window {    display: none;  }}.heo-tag {  padding: 1px 6px;  border-radius: 6px 6px 6px 0;  margin-left: 4px;  height: 20px;  line-height: 19px;}.heo-tag-new-view {  color: var(--heo-white);  background: var(--heo-green);}.heo-tag-hot-view {  color: var(--heo-white);  background: var(--heo-red);}#page-header.full_page {  height: 2rem;  background-image: none !important;  background-color: var(--heo-none);}#page-header.full_page #site-info {  display: none;}.layout > div:first-child {  width: calc(100% - 300px);}div#categoryList {  display: flex;  width: 100%;  justify-content: space-between;}.categoryItem {  overflow: hidden;  transform: scale(1);  transition: all 0.8s cubic-bezier(0.65, 0.15, 0.37, 1.19);  height: 48%;  border-radius: 12px;}a.categoryButton {  height: 100%;  width: 100%;  background: var(--heo-card-bg);  border-radius: 12px;  display: inline-block;  text-align: left;  line-height: 4em;  font-weight: 700;  font-size: 0.9rem;  color: var(--heo-white);  transition: all 0.8s cubic-bezier(0.39, 0.575, 0.565, 1);  transform: scale(1);  overflow: hidden;  font-family: PingFang SC, Hiragino Sans GB, Microsoft YaHei;}a.categoryButton i {  transform: scale(1) rotate(15deg);}@media screen and (max-width: 768px) {  a.categoryButton {    border-radius: 8px;  }  .categoryItem {    border-radius: 0;    height: 47%;    box-shadow: none !important;  }}a.categoryButton:after {  top: 50px;  width: 1rem;  left: 21px;  height: 2px;  background: var(--heo-white);  content: "";  border-radius: 1px;  position: absolute;}.categoryButtonText {  padding-left: 21px;}a.categoryButton i {  font-size: 5rem;  opacity: 0.2;  position: absolute;  right: 0;  top: 20%;  transition: 0.3s;  width: 100px;  text-align: center;  filter: blur(2px);}@media screen and (max-width: 768px) {  a.categoryButton i {    display: none;  }  .recent-post-top .categoryGroup {    min-width: 130px !important;    margin-bottom: 0.5rem;    margin-left: 1rem;    max-height: 164px;    overflow: hidden;    position: relative;  }}.topGroup {  display: flex;}#bannerGroup {  display: flex;}div#banners {  display: none;}.topGroup .todayCard {  display: none;}@media screen and (min-width: 1200px) {  .topGroup {    display: flex;    flex-direction: row;    flex-wrap: wrap;    justify-content: flex-end;    height: calc(328px + 0.5rem);    align-content: space-between;    width: calc(600px + 1.5rem);    position: relative;    animation: slide-in 0.6s 0.1s backwards;  }  div#bannerGroup {    width: calc(100% - 600px - 2rem);    margin-right: 0.5rem;    height: calc(328px + 0.5rem);    display: flex;    flex-direction: column;    justify-content: space-between;  }  div#banners {    display: flex;    width: 100%;    height: 76%;    background: var(--heo-card-bg);    margin-bottom: 0.5rem;    border: var(--style-border);    border-radius: 12px;    overflow: hidden;    position: relative;    box-shadow: var(--heo-shadow-border);    flex-direction: column;    overflow: hidden;    transition: 0.3s;    will-change: transform;    animation: slide-in 0.6s 0.1s backwards;  }  div#banners:hover {    box-shadow: var(--heo-shadow-main);  }  #banners.flink {    margin-bottom: 0.5rem;  }  #banners .banner-button-group {    position: absolute;    right: 2rem;    top: 2rem;    display: flex;  }  #banners .banner-button {    padding: 8px 12px;    background: var(--heo-fontcolor);    border-radius: 12px;    color: var(--heo-card-bg);    display: flex;    align-items: center;    z-index: 1;    transition: 0.3s;    cursor: pointer;    box-shadow: var(--heo-shadow-black);  }  #banners .banner-button.secondary {    background: var(--heo-secondbg);    border: var(--style-border-always);    color: var(--heo-lighttext);    margin-right: 1rem;    box-shadow: var(--heo-shadow-border);  }  #banners .banner-button:hover {    background: var(--heo-theme);    color: var(--heo-white);  }  #banners .banner-button i {    margin-right: 8px;    font-size: 1rem;  }  .banners-title {    top: 2rem;    left: 1.5rem;    position: absolute;    display: flex;    flex-direction: column;  }  .flink .banners-title {    top: 1.5rem;  }  .banners-title-big {    font-size: 36px;    line-height: 1;    font-weight: 700;    margin-bottom: 8px;  }  .banners-title-small {    font-size: 12px;    line-height: 1;    color: var(--heo-secondtext);    margin-top: 8px;    margin-bottom: 0.5rem;  }  #banner-hover {    position: absolute;    width: 100%;    height: 100%;    top: 0;    left: 0;    background: var(--heo-lighttext);    color: var(--heo-card-bg);    padding-left: 0.5rem;    display: flex;    flex-direction: column;    justify-content: center;    opacity: 0;    transition: cubic-bezier(0.71, 0.15, 0.16, 1.15) 0.6s;  }  .bannerText {    font-size: 4rem;    line-height: 4rem;    font-weight: 700;  }  .banner-righticon {    font-size: 4rem;    opacity: 0.6;  }  #banners:hover #banner-hover {    opacity: 1;    padding-left: 2rem;    background: var(--heo-theme-op-deep);    backdrop-filter: blur(15px);    -webkit-backdrop-filter: blur(15px);    transform: translateZ(0);    -webkit-backface-visibility: hidden;    -webkit-transform-style: preserve-3d;    transition: 0.3s;    background-size: 200%;    cursor: pointer;  }  #banners #banner-hover i {    font-size: 80px;    opacity: 0.4;  }  .topGroup .todayCard {    position: absolute;    width: calc(600px + 1rem);    height: 100%;    z-index: 1;    top: 0;    left: 0;    background: var(--heo-card-bg);    border-radius: 12px;    margin-left: 0.5rem;    overflow: hidden;    transition: 0.3s;    display: flex;    cursor: pointer;    pointer-events: all;  }  .topGroup .todayCard::after {    position: absolute;    content: "";    width: 100%;    height: 100%;    top: 0;    left: 0;  }  .topGroup .todayCard.hide {    opacity: 0;    pointer-events: none;  }  .topGroup .todayCard .todayCard-info {    position: absolute;    bottom: 2rem;    left: 2rem;    z-index: 2;    color: var(--heo-white);    max-width: 60%;    transition: 0.3s;  }  .topGroup .todayCard.hide .todayCard-info {    bottom: 1rem;    opacity: 0;  }  .topGroup .todayCard .todayCard-info .todayCard-tips {    opacity: 0.8;    font-size: 0.6rem;  }  .topGroup .todayCard .todayCard-info .todayCard-title {    font-size: 28px;    font-weight: 700;    line-height: 36px;  }  .topGroup .banner-button-group {    position: absolute;    right: 2rem;    bottom: 2rem;    display: flex;    transition: 0.3s;  }  .topGroup .todayCard.hide .banner-button-group {    bottom: 1rem;  }  .topGroup .banner-button {    background: var(--heo-white-op);    border-radius: 20px;    color: var(--heo-white);    display: flex;    align-items: center;    z-index: 1;    transition: 0.3s;    cursor: pointer;    backdrop-filter: saturate(180%) blur(20px);    -webkit-backdrop-filter: blur(20px);    transform: translateZ(0);    height: 40px;    width: 118px;    justify-content: center;  }  .topGroup .banner-button:hover {    background: var(--heo-lighttext);    color: var(--heo-card-bg);  }  .topGroup .banner-button i {    margin-right: 8px;    font-size: 22px;  }  .topGroup .todayCard .todayCard-cover {    position: absolute;    min-width: 100%;    min-height: 100%;    top: 0;    left: 0;    background-size: cover;    z-index: -1;    transition: 0.3s;  }  .topGroup .todayCard.hide .todayCard-cover {    transform: scale(1.2);  }}@keyframes rowup {  from {    transform: translateX(0);  }  to {    transform: translateX(-50%);  }}.tags-group-icon {  width: 120px;  height: 120px;  border-radius: 30px;}.tags-group-all {  display: flex;  transform: rotate(-30deg);}.tags-group-all.nowrapMove {  transform: rotate(0);  padding-bottom: 2rem;}.tags-group-wrapper {  margin-top: 5rem;  display: flex;  flex-wrap: nowrap;  animation: rowup 60s linear infinite;}.nowrapMove .tags-group-wrapper {  margin-top: 7rem;  animation: rowup 120s linear infinite;}.tags-group-icon-pair .tags-group-icon:nth-child(even) {  margin-top: 1rem;  transform: translate(-60px);}.tags-group-icon-pair {  margin-left: 1rem;  user-select: none;}.tags-group-icon-pair a img {  border-radius: 50% !important;}.tags-group-icon {  display: flex;  align-items: center;  justify-content: center;  color: #fff;  font-size: 66px;  font-weight: 700;  box-shadow: var(--heo-shadow-blackdeep);}.nowrapMove .tags-group-icon {  border-radius: 50%;}.tags-group-icon img {  width: 60%;}.nowrapMove .tags-group-icon img {  min-width: 100%;  min-height: 100%;  border-radius: 50%;  object-fit: cover;}#categoryList > div:nth-child(1) > a::before {  height: 24px;  width: 44px;  content: "";  background: url(https://p.zhheo.com/20235ba0ff2cde251cd0819f60a48cf9cc71082802.png!cover)    no-repeat;  background-size: 38px 24px;  position: absolute;  top: 0;  left: 0;}.categoryItem:hover i {  opacity: 0.8;  transition: 0.8s;  transition-delay: 0.15s;  transform: scale(1.03) rotate(0);  font-size: 2.5rem;  filter: blur(0);}@media screen and (min-width: 1300px) {  .categoryItem:hover i {    transform: scale(1.03) rotate(0);  }}#categoryList > a:nth-child() > i {  padding-right: 8px;}.cate-button-text {  box-shadow: var(--heo-shadow-black);}@media screen and (max-width: 768px) {  div#categoryList {    display: none;  }}.recent-post-top .categoryGroup {  display: flex;  flex-direction: column;  justify-content: space-between;  min-width: 200px;}.categoryGroup .categoryItem:nth-child(3) {  display: none;}@media screen and (min-width: 1200px) {  .recent-post-top .categoryGroup {    flex-direction: row;    height: 24%;    animation: slide-in 0.6s 0.2s backwards;  }  .categoryItem {    width: calc(100% / 3 - 0.33rem);    height: 100%;    margin-right: 0.5rem;  }  .categoryItem:last-child {    margin-right: 0;  }  .categoryItem:hover {    width: 50%;  }  .categoryGroup .categoryItem:nth-child(3) {    display: flex;  }}a.categoryButton.bikan {  background: linear-gradient(to right, #358bff, #15c6ff);  background-size: 200%;}a.categoryButton.remen {  background: linear-gradient(to right, #f65, #ffbf37);  background-size: 200%;}a.categoryButton.shiyong {  background: linear-gradient(to right, #18e7ae, #1eebeb);  background-size: 200%;}[data-theme="dark"] a.categoryButton.bikan {  background: linear-gradient(to right, #0653b8, #2fcbff);  background-size: 200%;}[data-theme="dark"] a.categoryButton.remen {  background: linear-gradient(to right, #e22a16, #da980c);  background-size: 200%;}[data-theme="dark"] a.categoryButton.shiyong {  background: linear-gradient(to right, #099e74, #0ea4a4);  background-size: 200%;}a.categoryButton:hover {  background-position: 100% 0;}#category-bar {  padding: 0.4rem 1rem 0.4rem 0.7rem;  background: var(--heo-card-bg);  border-radius: 12px;  display: flex;  white-space: nowrap;  overflow: hidden;  margin-bottom: 1rem;  border: var(--style-border);  transition: 0.3s;  width: 100%;  justify-content: space-between;  -webkit-user-select: none;  display: flex;  align-items: center;}@media screen and (min-width: 1300px) {  #category-bar:hover {    border: var(--style-border-hover);    box-shadow: var(--heo-shadow-main);  }  .category-in-bar-tips {    margin-bottom: 0.25rem;  }}@media screen and (max-width: 768px) {  #category-bar {    border-radius: 0;    background: var(--heo-background);    margin-bottom: 0;    position: -webkit-sticky;    position: sticky;    z-index: 1;    padding: 0;    height: 50px;    margin-top: 0;    align-items: center;  }}#category #category-bar {  padding: 0;  border: none;  box-shadow: none;}#category a.category-bar-item.select a {  display: none;}.category-in-bar {  display: flex;  white-space: nowrap;  align-items: center;  margin-bottom: 4px;}.category-in-bar-tips {  margin-right: 1rem;}.category-bar-items {  white-space: nowrap;  overflow-x: scroll;  overflow-y: hidden;  display: flex;  border-radius: 8px;  align-items: center;  height: 30px;}.category-in-bar .category-in-bar-tips {  margin-bottom: 0;}.category-in-bar #category-bar {  margin-bottom: 0;}.category-bar-items::-webkit-scrollbar {  display: none;}.category-bar-item a {  padding: 0.1rem 0.5rem;  margin-right: 6px;  font-weight: 700;  border-radius: 8px;  display: flex;  align-items: center;  height: 30px;}.category-bar-item:hover a {  background: var(--heo-theme);  color: var(--heo-card-bg);}.category-bar-item.select a {  background: var(--heo-theme);  color: var(--heo-card-bg);  border-radius: 8px;}@media screen and (max-width: 768px) {  .category-bar-item.select a {    border-radius: 8px;  }  .category-bar-item a {    border-radius: 8px;  }  .category-in-bar {    position: -webkit-sticky;    position: sticky;    top: 60px;    background: var(--heo-background);    z-index: 1002;  }}.category-bar-next {  margin-left: 16px;  cursor: pointer;  height: 22px;  display: flex;}.category-bar-next:hover {  color: var(--heo-lighttext);}.category-bar-more {  margin-left: 14px;  font-weight: 700;}.category-bar-more:hover {  color: var(--heo-lighttext);}#bber-talk {  width: 100%;  height: 25px;  line-height: 25px;  display: flex;  flex-direction: column;}#bbtalk {  overflow: hidden;  width: 100%;  overflow: hidden;  text-overflow: ellipsis;  white-space: nowrap;}#bber-talk .li-style {  width: auto;  max-width: 100%;  height: 25px;  text-align: center;  overflow: hidden;  text-overflow: ellipsis;  transition: 0.3s;  font-weight: 700;  margin: auto;  cursor: pointer;  white-space: nowrap;}#bbTimeList .li-style:hover {  color: var(--heo-theme);  transition: 0.3s;}li,ul {  list-style: none;  display: block;  margin: 0;  padding: 0;}#bbTimeList {  background: var(--heo-card-bg);  color: var(--heo-fontcolor);  padding: 0.5rem 1rem;  border-radius: 12px;  box-shadow: var(--heo-shadow-lightblack);  display: flex;  transition: 0.3s;  margin-bottom: 1rem;  border: var(--style-border);  align-items: center;  height: 50px;  -webkit-user-select: none;}#bbTimeList.more-page {  margin-bottom: 0;}@media screen and (min-width: 768px) {  #bbTimeList:hover {    border: var(--style-border-hover);    box-shadow: var(--heo-shadow-main);    background: var(--heo-card-bg);  }}@media screen and (min-width: 1300px) {  #bbTimeList {    margin-bottom: 1rem;    animation: slide-in 0.6s 0s backwards;  }}.bber-gotobb {  line-height: 25px;  margin-left: 1rem;  transition: 0.3s;  cursor: pointer;}.bber-gotobb:hover {  opacity: 0.8;  color: var(--heo-theme);}i.bber-gotobb {  font-size: 16px;}.icon-bblogo {  font-size: 2rem;  font-size: 2rem;  line-height: 22px;  margin-right: 1rem;  transition: 0.3s;  cursor: pointer;}.icon-bblogo:hover {  opacity: 0.8;  color: var(--heo-theme);}.recent-post-item .recent-post-info .recent-post-info-top {  position: relative;  transition: 0.3s;  padding: 0 32px;  width: 100%;}.recent-post-item .recent-post-info .recent-post-info-top .article-title {  line-height: 30px;  margin-top: 0;  font-weight: 700;  color: var(--heo-fontcolor);  margin-bottom: 0;  width: 100%;  transition: 0.3s;  font-size: 1rem;  -webkit-line-clamp: 2;  display: -webkit-box;  overflow: hidden;  -webkit-box-orient: vertical;}.recent-post-item .recent-post-info .recent-post-info-top .original {  display: flex;  color: var(--heo-secondtext);  font-size: 0.5rem;  position: relative;  margin-right: 8px;}.recent-post-item .recent-post-info .recent-post-info-top .lastestpost {  display: none;  margin-right: 8px;}.recent-post-info-top-tips {  display: flex;  margin-top: 20px;  user-select: none;}.recent-post-item .recent-post-info .recent-post-info-top a.unvisited-post {  display: flex;  color: var(--heo-secondtext);  font-size: 0.5rem;  position: relative;}.recent-post-item  .recent-post-info  .recent-post-info-top  a.unvisited-post:visited {  color: var(--heo-card-bg);}@media screen and (max-width: 768px) {  .recent-post-info-top-tips {    display: none;  }}@media screen and (min-width: 1300px) {  #recent-posts > .recent-post-item:nth-child(2) .lastestpost {    display: flex;    color: var(--heo-secondtext);    font-size: 0.5rem;    position: relative;  }  .recent-post-item .recent-post-info .recent-post-info-top .article-title {    font-size: 20px;    -webkit-line-clamp: 2;  }  .recent-post-item:hover    .recent-post-info    .recent-post-info-top    .article-title {    -webkit-line-clamp: 2;  }  #recent-posts > .recent-post-item .post_cover {    transition: 1s !important;    height: 225px;    width: 100%;  }  .recent-post-item.post-card-large    .recent-post-info    .recent-post-info-top    .content {    opacity: 0 !important;    -webkit-line-clamp: 2 !important;  }  .recent-post-item.post-card-large:hover    .recent-post-info    .recent-post-info-top    .content {    opacity: 1 !important;  }}.recent-post-item .recent-post-info .recent-post-info-top .content {  opacity: 0;  transition: 0.3s;  display: -webkit-box;  overflow: hidden;  -webkit-box-orient: vertical;  -webkit-line-clamp: 2;  line-height: 1.4;  color: var(--heo-secondtext);  margin-top: 0.5rem;}@media screen and (max-width: 1300px) {  .recent-post-item:hover .recent-post-info .recent-post-info-top .content {    display: none;  }}@media screen and (min-width: 1300px) {  .recent-post-item:hover .recent-post-info .recent-post-info-top .content {    display: none;  }}@media screen and (min-width: 768px) {  .recent-post-item.post-card-large    .recent-post-info    .recent-post-info-top    .content {    opacity: 1;    -webkit-line-clamp: 4;  }  .recent-post-item.post-card-large:hover    .recent-post-info    .recent-post-info-top    .content {    -webkit-line-clamp: 6;  }}@media screen and (max-width: 768px) {  .recent-post-item .recent-post-info .recent-post-info-top {    padding: 0 20px;    top: 20px;  }  .recent-post-item .recent-post-info .recent-post-info-top .content {    opacity: 1;    -webkit-line-clamp: 3;    display: none;  }  #recent-posts .recent-post-item .recent-post-info .article-title {    font-size: 19px;  }}.post-ai {  background: var(--heo-secondbg);  border-radius: 12px;  padding: 12px;  line-height: 1.3;  border: var(--style-border-always);  margin-top: 16px;  min-height: 101.22px;}@media screen and (max-width: 768px) {  .post-ai {    margin-top: 22px;  }}.ai-title {  display: flex;  color: var(--heo-lighttext);  border-radius: 8px;  align-items: center;  padding: 0 12px;  cursor: default;  user-select: none;}.ai-title-text {  font-weight: 700;  margin-left: 8px;  line-height: 1;}.ai-title-left {  display: flex;  align-items: center;  color: var(--heo-lighttext);}.ai-link {  margin-left: 2px;  height: 20px;  display: flex;}.ai-link i {  color: var(--heo-lighttext);  font-size: 20px;  line-height: 1;  opacity: 0.4;  transition: 0.3s;}.ai-link:hover i {  opacity: 1;}.ai-explanation {  margin-top: 12px;  padding: 8px 12px;  background: var(--heo-card-bg);  border-radius: 8px;  border: var(--style-border-always);  font-size: 15px;  line-height: 1.4;  display: none;}.ai-suggestions {  display: flex;  flex-wrap: wrap;}.ai-suggestions .ai-suggestions-item {  margin-top: 12px;  padding: 8px 12px;  background: var(--heo-card-bg);  border-radius: 8px 8px 8px 0;  border: var(--style-border-always);  font-size: 14px;  line-height: 1.4;  display: flex;  width: fit-content;  margin-right: 12px;  cursor: pointer;  transition: 0.3s;}.ai-suggestions .ai-suggestions-item:hover {  background: var(--heo-main);  color: var(--heo-white);}.blinking-cursor {  background-color: var(--heo-lighttext);  width: 10px;  height: 16px;  display: inline-block;  vertical-align: middle;  animation: blinking-cursor 0.5s infinite;  -webkit-animation: blinking-cursor 0.5s infinite;  margin-left: 4px;  margin-bottom: 3px;}@keyframes blinking-cursor {  0% {    opacity: 1;  }  40% {    opacity: 1;  }  50% {    opacity: 0;  }  90% {    opacity: 0;  }  100% {    opacity: 1;  }}.ai-tag {  font-size: 12px;  background-color: var(--heo-lighttext);  color: var(--heo-card-bg);  font-weight: 700;  border-radius: 4px;  margin-left: auto;  line-height: 12px;  padding: 4px 6px;  display: flex;  align-items: center;  justify-content: center;  cursor: pointer;  transition: 0.3s;}.ai-tag:hover {  background: var(--heo-fontcolor);  color: var(--heo-card-bg);}ins.adsbygoogle {  margin: 16px 0;  background: var(--heo-card-bg);  border-radius: 12px;  overflow: hidden;  border: var(--style-border-always);}#ai-Toggle {  font-size: 12px;  background: var(--heo-lighttext);  color: var(--heo-card-bg);  padding: 4px;  border-radius: 4px;  margin-left: 2px;  transform: scale(0.8);  cursor: pointer;  transition: 0.3s;  font-weight: 700;  line-height: 17.2px;}#ai-Toggle:hover {  background: var(--heo-fontcolor);  color: var(--heo-card-bg);}#recent-post-top .recent-post-item .post_cover {  width: 100%;}#recent-posts > .recent-post-item > .recent-post-info > .article-meta-wrap i {  margin: 0 0.4rem 0 0;}#recent-posts  > .recent-post-item  > .recent-post-info  > .article-meta-wrap  .sticky {  color: var(--heo-fontcolor);}#recent-posts .recent-post-item {  height: fit-content;  background: var(--heo-card-bg);  border-radius: 12px;  cursor: pointer;  border: var(--style-border);}#recent-posts .recent-post-item:hover {  border: var(--style-border-hover);  box-shadow: var(--heo-shadow-main);}@media screen and (max-width: 1300px) {  #recent-posts > .recent-post-item .left_radius,  #recent-posts > .recent-post-item .right_radius {    width: 75%;    display: flex;    height: 200px;  }  #recent-posts > .recent-post-item:hover .post_cover img.post_bg {    transform: scale(1.03);    transition: 0.3s ease-in-out;    filter: brightness(0.85);  }  #recent-posts    > .recent-post-item.post-card-large:hover    .post_cover    img.post_bg {    transform: scale(1.03);  }  #recent-posts > .recent-post-item .post_cover img.post_bg {    min-width: 100%;    -webkit-backface-visibility: hidden;    -webkit-transform-style: preserve-3d;    transition: 0.3s ease-in-out;    min-height: 100%;    user-select: none;  }  #recent-posts > .recent-post-item:hover > .recent-post-info {    transition: all 0.3s;    position: relative;  }  #recent-posts > .recent-post-item > .recent-post-info {    transition: all 0.3s;  }}#recent-posts > .recent-post-item:hover .post_cover img.post_bg {  transform: scale(1.03);  transition: 0.3s ease-in-out;  filter: brightness(0.85);}@media screen and (min-width: 1300px) {  #recent-posts > .recent-post-item .left_radius,  #recent-posts > .recent-post-item .right_radius {    width: 100%;    display: flex;  }}#recent-posts > .recent-post-item .left_radius a,#recent-posts > .recent-post-item .right_radius a {  min-height: 100%;  min-width: 100%;}.recent-top-post-group {  border-radius: 12px;  overflow: hidden;  overflow-x: auto;  width: 100%;  margin-bottom: 0;  -webkit-user-select: none;}.recent-top-post-group.more-page {  display: none;}.recent-post-top {  display: flex;  flex-direction: row;  flex-wrap: nowrap;  width: 100%;  overflow-x: scroll;}.recent-post-top::-webkit-scrollbar {  display: none;}.recent-post-top .recent-post-item {  display: flex;  width: 200px;  flex-direction: column;  align-items: flex-start;  margin-left: 0.5rem;  background: var(--heo-card-bg);  border-radius: 12px;  overflow: hidden;  min-width: 200px;  height: 164px;  max-height: 164px;  border: var(--style-border-always);  transition: 0.3s;  position: relative;  box-shadow: var(--heo-shadow-border);}@media screen and (max-width: 768px) {  .recent-post-top .recent-post-item {    border-radius: 8px;    box-shadow: none;    clip-path: inset(0 0 0 0 round 8px);  }  .recent-post-top .recent-post-item:last-child {    margin-right: 1rem;  }}@media screen and (min-width: 1300px) {  .recent-post-top .recent-post-item {    margin-right: 0;    margin-bottom: 0.5rem;  }  .recent-post-top {    overflow-x: visible;  }  .recent-top-post-group {    overflow: visible;    overflow-x: visible;  }}span.recent-post-top-text {  position: absolute;  top: 0;  left: -40px;  display: flex;  z-index: 1;  background: var(--heo-theme);  color: var(--heo-white);  padding: 2px 8px;  font-size: 0.6rem;  border-radius: 12px 0 12px 0;  transition: 0.3s;  cursor: pointer;}.recent-post-item:hover .recent-post-top-text {  left: 0;}@media screen and (max-width: 768px) {  .recent-top-post-group {    border-radius: 0;    background: var(--heo-background);  }  .recent-post-top-text {    display: none !important;  }  .recent-post-top .recent-post-item .post_cover img {    border-radius: 8px 8px 0 0 !important;  }}.recent-post-top .recent-post-item .post_cover a {  height: 100px;  overflow: hidden;  display: flex;}.recent-post-top .recent-post-item .post_cover img {  object-fit: cover;  width: 100%;  background: var(--heo-secondbg);  border-radius: 12px 12px 0 0;}.recent-post-top .recent-post-item:hover .post_cover img {  transform: scale(1);}.recent-post-item .post_cover {  -webkit-mask-image: -webkit-radial-gradient(center, #fff, #000);}.recent-post-top .recent-post-item .recent-post-info {  padding: 0.3rem 0.5rem 0.3rem 0.5rem !important;  transition: 0.3s;}.recent-post-top .recent-post-item:hover .recent-post-info a {  color: var(--heo-fontcolor);}@media screen and (max-width: 1300px) {  .recent-post-top .recent-post-item:hover .recent-post-info a {    color: var(--heo-theme);    transition: 0.3s;  }}.recent-post-top .recent-post-item .recent-post-info .article-title {  -webkit-line-clamp: 2;  overflow: hidden;  display: -webkit-box;  -webkit-box-orient: vertical;  line-height: 1.5;  justify-content: center;  align-items: flex-end;  align-content: center;  padding-top: 0.5rem;  font-weight: 700;  font-size: 0.8rem !important;  padding: 0 !important;}.title-and-tips {  display: flex;  margin-top: 1rem;  align-items: center;}.title-and-tips .page-title {  line-height: 1;  margin: 0;}.title-and-tips .page-tips {  background: var(--heo-yellow-op);  color: var(--heo-yellow);  margin-bottom: auto;  border-radius: 8px;  padding: 2px 6px;  font-size: 0.5rem;  margin-left: 8px;}#aside-content .card-widget {  box-shadow: var(--heo-shadow-border);  background: var(--heo-card-bg);  border: var(--style-border);  transition: 0.3s;  border-radius: 12px;  transition: 0.3s;  position: relative;  overflow: hidden;  margin-top: 1rem;  padding: 1rem 1.2rem;}#recent-posts > .recent-post-item {  box-shadow: var(--heo-shadow-light2black);  display: flex;  -webkit-box-orient: horizontal;  -webkit-box-align: center;  align-items: center;  transition: all 0.3s ease 0s;}#recent-posts > .recent-post-item {  margin-top: 0.5rem;  margin-bottom: 1rem;  position: relative;  overflow: hidden;  margin-top: 1rem;  animation: slide-in 0.6s 0.4s backwards;  will-change: transform;}@media screen and (min-width: 1300px) {  #recent-posts > .recent-post-item {    flex-direction: column;  }  #recent-posts > .recent-post-item {    width: calc(100% / 2 - 0.5rem);    margin-top: 0.25rem;    margin-bottom: 0.75rem;    box-shadow: var(--heo-shadow-border);  }  #category #recent-posts .recent-post-item,  #tag #recent-posts .recent-post-item {    margin-top: 0.5rem;    margin-bottom: 1rem;    position: relative;    overflow: hidden;    margin-top: 1rem;    animation: slide-in 0.6s 0.4s backwards;    will-change: transform;    width: calc(100% / 2 - 0.5rem);    margin-top: 0.25rem;    margin-bottom: 0.75rem;    box-shadow: var(--heo-shadow-border);  }  #category-bar {    margin-bottom: 0.75rem;    box-shadow: var(--heo-shadow-border);    animation: slide-in 0.6s 0.3s backwards;  }  #category #category-bar {    animation: none;  }  #recent-posts {    display: flex;    flex-wrap: wrap;    justify-content: space-between;    align-items: flex-start;    align-content: flex-start;    -webkit-user-select: none;  }}#recent-posts {  position: relative;}@media screen and (max-width: 768px) {  #recent-posts > .recent-post-item {    border-radius: 0;  }  #recent-posts > .recent-post-item {    margin: 1.5rem 0;    border-radius: 12px;    margin-top: 0.5rem;    border: var(--style-border-always);    box-shadow: var(--heo-shadow-border);    display: block;    position: relative;    clip-path: inset(0 0 0 0 round 12px);  }  #recent-posts {    padding: 0 1rem;  }  #category #recent-posts,  #tag #recent-posts {    padding: 0;  }  #recent-posts .recent-post-item .post_cover {    border-radius: 0 !important;    width: 100%;  }  #bbTimeList {    margin-top: 0;    border-radius: 0;    background: var(--heo-background);    padding: 0.5rem 20px;  }  a.article-meta__categories {    left: 12px !important;    top: 12px !important;    border-radius: 4px !important;    padding: 2px 9px !important;    font-size: 12px;  }  #bbTimeList {    margin-bottom: 0;  }}@media screen and (min-width: 1300px) {  .topGroup .recent-post-item:nth-child(7) {    display: none;  }}@media screen and (max-width: 768px) {  #sidebar-menus > div.author-avatar {    display: none;  }  #recent-posts > .recent-post-item > .recent-post-info > .article-meta-wrap {    bottom: 0.5rem !important;  }  #recent-posts    > .recent-post-item    > .recent-post-info    > .article-meta-wrap    time {    display: absolute;    right: 0;  }  #rightside {    display: none;  }  #web_bg {    background: 0 0 !important;  }  #recent-posts > .recent-post-item .post_cover img.post_bg {    border-radius: 12px 12px 0 0 !important;  }  #recent-posts > .recent-post-item .post_cover img.post_bg:hover {    transform: scale(1);  }  #recent-posts > .recent-post-item:hover img.post_bg {    transform: scale(1);  }  .recent-post-top .recent-post-item:hover .post_cover img {    transform: scale(1);  }  #recent-posts > .recent-post-item > .recent-post-info > .article-meta-wrap,  #recent-posts > .recent-post-item > .recent-post-info > .article-title,  #recent-posts > .recent-post-item > .recent-post-info > .content {    padding: 0 20px !important;  }}a.article-meta__categories {  position: absolute;  padding: 1px 6px;  background: var(--heo-black-op);  border-radius: 8px;  margin-left: 0;  font-size: 12px;  font-weight: 700;  color: var(--heo-white);  top: 8px;  left: 8px;  backdrop-filter: saturate(180%) blur(20px);  -webkit-backdrop-filter: blur(20px);  transform: translateZ(0);}a.article-meta__categories:hover {  background: var(--heo-theme) !important;  color: var(--heo-white) !important;  box-shadow: var(--heo-shadow-theme);}#recent-posts > .recent-post-item > .recent-post-info > .article-title {  line-height: 1.4;  margin-top: 0;  font-weight: 700;  color: var(--heo-fontcolor);  margin-bottom: 0;  position: absolute;  width: 100%;  left: 0;  padding: 0 40px;  transition: 0.3s;}#recent-posts > .recent-post-item > .recent-post-info > .article-title:hover {  color: var(--heo-fontcolor);}@media screen and (min-width: 768px) {  #recent-posts > .recent-post-item > .recent-post-info > .article-title {    top: 40px;  }  #recent-posts > .recent-post-item:hover > .recent-post-info > .article-title {    top: 20px;  }  #recent-posts    > .recent-post-item.post-card-large:hover    > .recent-post-info    > .article-title {    top: 30px;  }  #recent-posts .recent-post-item:hover .recent-post-info .article-title {    color: var(--heo-theme);  }}#recent-posts  > .recent-post-item  > .recent-post-info  > .article-meta-wrap  > .post-meta-date {  right: 0;  text-align: right;}#recent-posts  > .recent-post-item  > .recent-post-info  > .article-meta-wrap  > .post-meta-date  i {  display: none;}.post-meta-date .far {  opacity: 0.6;}.post-meta-date .article-meta-label {  display: none;}#post-meta .post-meta-date {  opacity: 0.6;  margin-right: 0.8rem;}#post-info #post-meta a.post-meta-pv {  color: var(--heo-white);  display: flex;  align-items: center;}#post-info #post-meta a.post-meta-pv:hover {  opacity: 1;}#aside-content #card-toc .toc-content .toc-link.active {  line-height: 24px;  border-radius: 12px;  border-left-color: var(--heo-hovertext);  background-color: var(--heo-card-bg);  color: var(--heo-lighttext);  font-weight: 700;  font-size: 20px;}[data-theme="dark"].toc .toc-item.active .toc-link .toc-text {  color: var(--heo-white);}#aside-content #card-toc .toc-content .toc-item.active .toc-link {  opacity: 1;  border-radius: 8px;}#aside-content #card-toc .toc-content .toc-link {  line-height: 24px;  padding: 8px;  border-left: 0 solid transparent;  border-radius: 12px;  color: var(--heo-secondtext);  cursor: default;  min-height: 40px;  display: flex;  align-items: center;}#aside-content #card-toc .toc-content .toc-link:not(.active) span {  opacity: 0.6;  cursor: pointer;  filter: blur(1px);  transition: 0.3s;}#aside-content #card-toc:hover .toc-content .toc-link:not(.active) span {  filter: blur(0);  opacity: 1;}#aside-content #card-toc .toc-content .toc-link:not(.active) span:hover {  color: var(--heo-lighttext);}#card-toc {  padding: 0.5rem 0.5rem !important;}#recent-posts  > .recent-post-item  > .recent-post-info  > .article-meta-wrap  .article-meta__separator {  display: none;}.article-meta {  margin: 0 8px 0 0;  white-space: nowrap;  overflow: hidden;  display: inline-block;  text-overflow: ellipsis;}.article-meta__link {  display: none;}.article-meta__tags {  margin-right: 8px;  padding: 0 0.2rem;  padding-left: 0;  color: var(--heo-fontcolor);}#recent-posts > div > i .post_cover {  display: none;}#recent-posts > .recent-post-item > .recent-post-info {  height: 174px;  width: 100%;  cursor: pointer;  position: relative;  padding: 0;  display: inline-block;  overflow: hidden;}@media screen and (max-width: 768px) {  #recent-posts .recent-post-item .recent-post-info {    height: 7rem;  }}#recent-posts > .recent-post-item > .recent-post-info > .article-meta-wrap {  position: absolute;  bottom: 16px;  transition: 0.3s;  display: flex;  flex-direction: row;  flex-wrap: nowrap;  justify-content: space-between;  width: 100%;  left: 0;  padding: 0 32px;  white-space: nowrap;}@media screen and (min-width: 1300px) {  #recent-posts    > .recent-post-item:hover    > .recent-post-info    > .article-meta-wrap {    bottom: 20px;  }  #recent-posts    > .recent-post-item.post-card-large:hover    > .recent-post-info    > .article-meta-wrap {    bottom: 20px;  }  #recent-posts > .recent-post-item > .recent-post-info > .article-meta-wrap {    bottom: 20px;  }}#recent-posts  > .recent-post-item  > .recent-post-info  > .article-meta-wrap  a:hover {  background-color: var(--heo-none);  color: var(--heo-lighttext);  cursor: pointer;  border-radius: 4px;}#home_top {  max-width: 1400px;  margin: auto;  margin-top: 0.5rem;  padding: 0 1.5rem;}@media screen and (max-width: 768px) {  #home_top {    padding: 0;    margin-top: 0;  }}#aside-content .card-tag-cloud a[href *="/tags/Sketch/"] {  color: var(--heo-lighttext) !important;  font-weight: 500;}#aside-content .card-tag-cloud a[href *="/tags/%E8%AE%BE%E8%AE%A1/"] {  color: var(--heo-lighttext) !important;  font-weight: 500;}#aside-content .card-tag-cloud a[href *="/tags/%E5%B9%B2%E8%B4%A7/"] {  color: var(--heo-lighttext) !important;  font-weight: 500;}#aside-content .card-tag-cloud a[href *="/tags/%E6%95%99%E7%A8%8B/"] {  color: var(--heo-lighttext) !important;  font-weight: 500;}#aside-content .card-tag-cloud a sup {  opacity: 0.6;  margin-left: 2px;}@media screen and (min-width: 768px) {  .card-allinfo .card-tag-cloud {    max-height: 500px;    overflow: hidden;    position: relative;  }}.card-tag-cloud.all-tags {  max-height: none;}.card-allinfo .card-tag-cloud::after {  content: "";  position: absolute;  bottom: 0;  left: 0;  right: 0;  height: 150px;  background-image: linear-gradient(to top, var(--heo-card-bg), transparent);  pointer-events: none;}@media screen and (max-width: 768px) {  .card-allinfo .card-tag-cloud::after {    display: none;  }}.card-allinfo .card-tag-cloud.all-tags::after {  display: none;}a#more-tags-btn {  width: 100%;  text-align: center;  background: var(--heo-secondbg);  color: var(--heo-fontcolor);  border-radius: 8px;  display: flex;  justify-content: center;  font-size: 14px;  user-select: none;}a#more-tags-btn:hover {  background: var(--heo-main);  color: var(--heo-card-bg);}#recent-posts > .recent-post-item > .recent-post-info > .content {  line-height: 1.4;  color: var(--heo-secondtext);  margin-top: 0;  cursor: pointer;  transition: 0.3s;  opacity: 1;  position: absolute;  width: 100%;  left: 0;  padding: 0 40px;}@media screen and (min-width: 768px) {  #recent-posts > .recent-post-item > .recent-post-info > .content {    opacity: 0;    top: 120px;  }  #recent-posts > .recent-post-item:hover > .recent-post-info > .content {    opacity: 1;    top: 90px;  }  @media screen and (max-width: 1300px) {    #recent-posts > .post-card-large > .recent-post-info > .content {      opacity: 1 !important;    }    #recent-posts > .post-card-large:hover > .recent-post-info > .content {      top: 110px;    }    #recent-posts > .post-card-large > .recent-post-info > .content {      -webkit-line-clamp: 3 !important;    }    #recent-posts > .post-card-large:hover > .recent-post-info > .content {      -webkit-line-clamp: 5 !important;    }    #recent-posts > .post-card-large {      height: 20em !important;    }  }}@media screen and (max-width: 768px) {  #recent-posts > .recent-post-item > .recent-post-info > .content {    top: 5rem;  }}#recent-posts > .recent-post-item > .recent-post-info > .content {  -webkit-line-clamp: 2;}div#author-info__sayhi {  text-align: center;  width: fit-content;  color: var(--heo-white);  background: var(--heo-white-op);  font-size: 12px;  margin-right: auto;  padding: 2px 8px;  border-radius: 12px;  cursor: pointer;  -webkit-user-select: none;  transition: 0.3s;  margin: auto;  min-width: 100px;}div#author-info__sayhi:hover {  background: var(--heo-white-op);  color: var(--heo-white);  transform: scale(1.1);}[data-theme="dark"] .page div#author-info__sayhi {  background: var(--heo-black-op);  color: var(--heo-black);}#aside-content .card-info .author-info__name {  text-align: left;  font-weight: 700;  color: var(--heo-white);  font-size: 20px;  line-height: 1;  margin-bottom: 5px;}.page #aside-content .card-info .author-info__name,.page .author-info__desc {  color: var(--heo-card-bg);}.author-info__desc {  font-size: 12px;  color: var(--heo-white);  opacity: 0.6;  line-height: 1;}.avatar-img-group {  width: 118px;  height: 118px;  min-width: 118px;  min-height: 118px;  right: calc(50% - 59px);  top: 90px;  border-radius: 500px;  position: absolute;  transition: cubic-bezier(0.69, 0.39, 0, 1.21) 0.3s;  transform-origin: bottom;}#aside-content .card-info:hover .avatar-img-group {  opacity: 0;  transform: scale(0);}.avatar-sticker {  position: absolute;  bottom: 2px;  right: 2px;  width: 33px;  height: 33px;  line-height: 34px;  z-index: 0;  display: flex;  align-items: center;  justify-content: center;  transition: 0.3s 0.2s;  transform: scale(1);  background: var(--heo-white);  border-radius: 50%;}.page .avatar-sticker {  background: var(--heo-card-bg);}.avatar-sticker img {  width: 26px;  height: 26px;}.card-widget:hover .avatar-sticker {  opacity: 0;  transform: scale(0);}#aside-content > .card-widget:first-child {  transition: 0.3s;  border: none;  box-shadow: none;  background: var(--heo-main);  margin-top: 0;}#aside-content > .card-widget.card-info {  background: var(--heo-card-bg);  box-shadow: var(--heo-shadow-black);  position: relative;}#aside-content > .card-widget.card-info::before {  background: linear-gradient(    -25deg,    var(--heo-main),    var(--heo-main-op-deep),    var(--heo-main),    var(--heo-main-op-deep)  );  background-size: 400%;  position: absolute;  width: 100%;  height: 100%;  left: 0;  top: 0;  content: "";  animation: gradient 15s ease infinite;}@keyframes gradient {  0% {    background-position: 0 50%;  }  50% {    background-position: 100% 50%;  }  100% {    background-position: 0 50%;  }}.author-info__description {  line-height: 1.38;  margin: 0.3rem 0;  text-align: justify;  color: var(--heo-white);  opacity: 1;}.page .author-info__description {  color: var(--heo-card-bg);}.author-info__description b {  color: var(--heo-white);  opacity: 1;}.page .author-info__description b {  color: var(--heo-card-bg);  opacity: 1;}.author-info__description_group {  position: absolute;  top: 50px;  width: 100%;  left: 0;  padding: 1.2rem;  opacity: 0;  transition: 0.3s;}.card-widget:hover .author-info__description_group {  opacity: 1;}.author-info__description2 {  line-height: 1.38;  margin: 0.3rem 0;  text-align: justify;  width: 100%;  z-index: 2;  color: rgba(255, 255, 255, 0.8);}.author-info__description2 b {  color: var(--heo-white);}.card-widget.card-info .banner-button-group {  position: absolute;  right: 1rem;  bottom: 1rem;  display: flex;  -webkit-user-select: none;}.card-widget.card-info .banner-button-group .banner-button {  padding: 8px 12px;  background: var(--heo-white-op);  border-radius: 12px;  color: var(--heo-white);  display: flex;  align-items: center;  z-index: 1;  transition: 0.3s;  cursor: pointer;}.card-widget.card-info .banner-button-group .banner-button:hover {  background: var(--heo-white);  color: var(--heo-black);}.card-widget.card-info .banner-button-group .banner-button i {  margin-right: 8px;  font-size: 22px;}#aside-content .card-info .card-info-data {  display: none;}#aside-content .card-info a img {  border-radius: 0;  height: 200px;  display: inherit;  filter: drop-shadow(-5px 14px 8px #00000008);  position: absolute;  right: -24px;  bottom: -82px;  width: auto;  z-index: 0;  transition: cubic-bezier(0.48, -0.21, 0, 1.5) 0.3s;}#aside-content .card-info a img:hover {  bottom: -42px;}[data-theme="light"] #aside-content .card-info a img {  filter: drop-shadow(-5px 14px 8px #ffffff08);}.card-widget.card-info {  padding: 0 !important;}#aside-content > div.card-widget.card-info > div.card-content {  padding: 1rem 1.2rem;  min-height: 320px;  height: 320px;  position: relative;  user-select: none;}#aside-content > div.card-widget.card-info > div.card-info-avatarimg {  overflow: hidden;  background: var(--heo-yellow);  transition: 1.5s;  min-height: 160px;  position: relative;  box-shadow: var(--heo-shadow-yellow);}#aside-content > div.card-widget.card-info > div.card-info-avatarimg:hover img {  transform: scale(1.03);}#aside-content  > div.card-widget.card-info  > div  > div.card-info-data  > div:nth-child()  > a  > div.headline {  font-weight: 700;}@media screen and (max-width: 900px) {  #aside-content .card-announcement {    display: none;  }  #aside-content #card-funds {    display: none;  }}#aside-content .card-info #card-info-btn {  display: none;}.author-info__bottom-group {  display: flex;  justify-content: space-between;  position: absolute;  padding: 1.2rem;  width: 100%;  left: 0;  bottom: 0;  align-items: center;}#aside-content .card-info .card-info-social-icons {  margin: 0;  display: flex;  justify-content: flex-start;  flex-direction: row;  flex-wrap: wrap;  cursor: pointer;}#aside-content .card-info .card-info-social-icons .social-icon {  margin: 0;  margin-left: 8px;}#aside-content .card-info .card-info-social-icons i {  background: var(--heo-white-op);  color: var(--heo-white);  font-size: 1rem;  width: 40px;  height: 40px;  display: flex;  align-items: center;  justify-content: center;}#aside-content .card-info .card-info-social-icons i:hover {  background: var(--heo-white-op);  transform: scale(1.1);  color: var(--heo-white);  box-shadow: none;}[data-theme="dark"] .page #aside-content .card-info .card-info-social-icons i {  background: var(--heo-black-op);  color: var(--heo-card-bg);}#aside-content .card-info .banner-button {  height: 40px;  width: 118px;  border-radius: 20px;  justify-content: center;}@media screen and (min-width: 1300px) {  #aside-content .card-info .card-info-social-icons i {    color: var(--heo-white);  }  [data-theme="dark"] #aside-content .card-info .card-info-social-icons i {    color: var(--heo-white);  }  [data-theme="dark"]    .page    #aside-content    .card-info    .card-info-social-icons    i {    color: var(--heo-card-bg);  }}#aside-content .card-info .card-info-data > .card-info-data-item:hover {  background: var(--heo-post-blockquote-bg);  transform: scale(0.97);}#aside-content  > div.card-widget.card-info  > div.card-content  > div.card-info-data  > .card-info-data-item:hover  > a  > div.headline,#aside-content  > div.card-widget.card-info  > div.card-content  > div.card-info-data  > .card-info-data-item:hover  > a  > div.length-num {  color: var(--heo-blue);}.announcement_content p {  margin: 0.5rem 0 0 0;  line-height: 1.38;}#aside-content .item-headline {  padding-bottom: 0;  margin-left: 8px;  font-size: 1em;  font-weight: 700;  display: flex;  align-items: center;}#aside-content .item-headline span {  margin-left: 4px;}#aside-content .card-allinfo .item-headline {  display: none;}#aside-content .item-headline i {  min-width: 19.5px;  font-size: 18px;}#aside-content .item-headline + div,#aside-content .item-headline + ul {  padding: 0;  -webkit-user-select: none;}@media screen and (min-width: 1300px) {  #aside-content .card-widget {    margin-top: 1rem;  }}@media screen and (max-width: 768px) {  #aside-content .card-widget {    border-radius: 12px;  }}#aside-content  > div.sticky_layout  > div.card-widget.card-archives  > div  > ul  > li.card-archive-list-item.more.is-center {  margin-top: 8px;  background: var(--heo-card-btn-bg);  border-radius: 8px;  transition: 0.3s !important;}#aside-content  > div.sticky_layout  > div.card-widget.card-archives  > div  > ul  > li.card-archive-list-item.more.is-center  :hover {  color: var(--heo-white);  background: var(--heo-blue);  border-radius: 8px;  transition: 0.3s !important;}#aside-content  .card-archives  ul.card-archive-list  > .card-archive-list-item.more  span,#aside-content  .card-categories  ul.card-category-list  > .card-category-list-item.more  span {  transition: 0.3s !important;}#aside-content  .card-archives  ul.card-archive-list  > .card-archive-list-item:hover.more  span,#aside-content  .card-categories  ul.card-category-list  > .card-category-list-item.more  span {  transition: 0.3s !important;}#aside-content  > div.sticky_layout  > div.card-widget.card-archives  > div  > ul  > li.card-archive-list-item.more.is-center  :hover  span {  background: 0 0;}#web_bg {  width: 100%;  height: 100%;  top: 0;  left: 0;  opacity: 1;  position: fixed;  z-index: -999;  background: var(--heo-background);}#aside-content .card-tag-cloud a {  color: var(--heo-fontcolor) !important;  font-size: 0.8rem;  border-radius: 8px;}#aside-content .card-tag-cloud a:hover {  background: var(--heo-lighttext);  color: var(--heo-card-bg) !important;  box-shadow: var(--heo-shadow-theme);}#aside-content .card-tag-cloud a.tags-cloud-more {  width: 100%;  text-align: center;  border-radius: 8px !important;  border: var(--style-border);  margin-top: 8px;  font-size: 16px !important;}#aside-content  .card-archives  ul.card-archive-list  > .card-archive-list-item  a:hover,#aside-content  .card-categories  ul.card-category-list  > .card-category-list-item  a:hover {  color: var(--heo-white);  background-color: var(--heo-theme);  box-shadow: var(--heo-shadow-theme);  border-radius: 8px;  padding: 0.15rem 0.5rem;  border: var(--style-border-hover);}a.extend.next {  right: 0;}a.extend.prev {  left: 0;}#pagination {  width: 100%;}@media screen and (max-width: 768px) {  #pagination {    margin-bottom: 0;    margin-top: 0;  }}@media screen and (min-width: 1300px) {  #pagination {    margin-top: 0.25rem;  }}.lg-container {  display: none;}#page-header.post-bg::before {  transition: 0.3s;  opacity: 0.93;  height: 20rem;  background-color: var(--heo-main);  opacity: 1;  position: absolute;  top: 0;  left: 0;  display: block;  width: 100%;  content: "";}@media screen and (max-width: 768px) {  #page-header.post-bg {    height: 30rem !important;    margin-bottom: -12px;  }  #page-header.post-bg:before {    height: 15rem;  }  .post-bg #post-cover {    min-height: 15rem !important;    height: 70% !important;    opacity: 1 !important;  }}@media screen and (min-width: 1300px) {  #page-header.post-bg {    height: 25rem;  }  #page-header {    height: 25rem;  }  #page-header.post-bg:before {    height: 25rem;    opacity: 0;    background-color: var(--heo-main);    animation: slide-in-op 0.6s 0s forwards;  }  #post-info .post-title {    width: 1100px;    font-size: 2.6rem !important;  }}#page-header.post-bg {  background-color: var(--heo-background);  transition: 0.6s;  overflow: hidden;}.post-bg #post-cover {  width: 100%;  height: 100%;  object-fit: cover;  min-width: 50vw;  min-height: 20rem;  opacity: 0.8;}.coverdiv {  width: 70%;  height: 100%;  position: relative;  margin: 0 -20% 0 auto;  overflow: hidden;  margin-bottom: 0;  transform: rotate(10deg) translateY(-10%) scale(2);  filter: blur(10px);}.coverdiv.loaded {  display: block;}.coverdiv:after {  position: absolute;  content: "";  width: 100%;  height: 100%;  top: 0;  left: 0;  box-shadow: 110px -130px 300px 60px var(--heo-main) inset;}@media screen and (max-width: 768px) {  .coverdiv {    margin: 0 0 0 auto;    transform: rotate(0) translateY(0) scale(1);    filter: blur(0);    width: 100%;    position: fixed;    height: 30rem;    z-index: 1;  }  .coverdiv:after {    box-shadow: 0 0 205px 59px var(--heo-main) inset;  }}@media screen and (min-width: 1300px) {  .coverdiv {    width: 70%;    height: 100%;    position: relative;    margin: 0 -20% 0 auto;    overflow: hidden;    margin-bottom: 0;    transform: rotate(10deg) translateY(-8%) scale(1.8);    filter: blur(10px);    opacity: 0;  }  .coverdiv.loaded {    display: block;    opacity: 0.5;    animation: showCover 1s 0.3s backwards;    transform: rotate(10deg) translateY(-10%) scale(2);  }}@media screen and (min-width: 768px) {  .coverdiv {    width: 70%;    height: 100%;    position: relative;    margin: 0 -20% 0 auto;    overflow: hidden;    margin-bottom: 0;    transform: rotate(10deg) translateY(-8%) scale(1.8);    filter: blur(10px);    opacity: 0;  }  .coverdiv.loaded {    display: block;    opacity: 0.5;    animation: showCover 1s 0.3s backwards;    transform: rotate(10deg) translateY(-10%) scale(2);  }  @keyframes showCover {    from {      opacity: 0;      transform: rotate(10deg) translateY(-8%) scale(1.8);    }    to {      opacity: 0.5;      transform: rotate(10deg) translateY(-10%) scale(2);    }  }}#page-header {  background-image: none !important;  display: flex;  justify-content: center;}#post-cover-rgb {  position: absolute;  width: 100% !important;  height: 100% !important;  background: var(--heo-lighttext);}.layout > div:first-child:not(.recent-posts) {  box-shadow: var(--heo-shadow-border);  padding: 1rem 2rem;  border-radius: 12px;  background: var(--heo-card-bg);  border: var(--style-border);  width: calc(100% - 300px);  align-self: flex-start;  animation: slide-in 0.6s 0.1s backwards;  position: relative;  overflow: hidden;}#tag {  padding: 3rem 2rem 1rem 2rem;}@media screen and (min-width: 1300px) {  #tag {    padding: 4rem 2rem 1rem 2rem;  }}#page {  box-shadow: none;}.post-comment {  background: var(--heo-card-bg);}.layout > div:first-child:not(.recent-posts):hover {  box-shadow: var(--heo-shadow-border);}@media screen and (max-width: 768px) {  .layout > div:first-child:not(.recent-posts) {    border-radius: 0;    padding: 0 1rem !important;    box-shadow: none !important;    background: var(--heo-background);  }  .layout {    padding: 0 1.5rem;  }}@media screen and (max-width: 768px) {  .layout {    padding: 0;  }  .layout > div:first-child:not(.recent-posts) {    z-index: 10;  }  .post .layout > div:first-child:not(.recent-posts) {    border-radius: 12px 12px 0 0;  }  .post .layout#content-inner {    background: var(--heo-main);  }  .page .layout#content-inner {    background: var(--heo-background);  }  #aside-content {    z-index: 2;    background: var(--heo-background);    padding: 0 1rem;    display: flex;    flex-direction: column;    width: 100%;  }}.layout#content-inner {  max-width: 1400px;}.layout#content-inner p img {  margin: auto;}.full_page #post-cover {  display: none;}#page-header #post-info {  top: 0;  position: absolute;  padding: 0 3rem;  margin: 0 auto;  z-index: 10;  color: var(--heo-white);  max-width: 1400px;  display: flex;  flex-direction: column;  align-items: flex-start;  height: calc(100% + 0px);  justify-content: center;  animation: slide-in 0.6s 0s backwards;}@media screen and (max-width: 768px) {  #page-header #post-info {    padding: 0 6%;    justify-content: normal;    padding-top: 18rem;  }}@media screen and (min-width: 1300px) {  #page-header #post-info {    height: calc(100% + 0px);    top: 0;    display: flex;    justify-content: center;  }}#post-info #post-meta > .meta-secondline > span:first-child {  margin-right: 0.8rem;}.meta-secondline span {  display: flex;  align-items: center;  line-height: 1;}@media screen and (max-width: 768px) {  .meta-secondline span {    line-height: 1.5;  }}#post-firstinfo {  text-align: left;  display: flex;  white-space: nowrap;  -webkit-user-select: none;}#post-firstinfo .post-meta__tags {  color: var(--heo-white);  opacity: 0.8;  margin-right: 8px;}#post-firstinfo .post-meta__tags:hover {  color: var(--heo-white);  opacity: 1;}span.post-meta-categories {  background-color: var(--heo-white-op);  padding: 0 0.5rem;  border-radius: 8px;  line-height: 32px;  height: 32px;  transition: 0.3s;}span.post-meta-categories:not(:first-child) {  margin-left: 8px;}span.post-meta-categories:hover {  background-color: var(--heo-white);}a.post-meta-categories {  color: var(--heo-white);  font-size: 0.7rem;  width: 100%;  height: 100%;  display: flex;}span.post-meta-categories:hover a.post-meta-categories {  color: var(--heo-main);}.meta-firstline .tag_share {  margin-left: 1rem;}#post-firstinfo .meta-firstline {  display: flex;  align-items: center;  height: 32px;}@media screen and (max-width: 768px) {  #post-firstinfo .meta-firstline {    margin-bottom: 0.4rem;  }}.meta-avatar img {  width: 30px;  border-radius: 30px;  height: 30px;}a.post-meta-original {  background: var(--heo-white-op) !important;  color: var(--heo-white) !important;  padding: 0 0.5rem;  font-size: 0.7rem;  margin: auto;  border-radius: 8px;  font-weight: 700;  height: 32px;  line-height: 32px;  width: 100%;  height: 100%;  display: flex;}a.post-meta-original:hover {  color: var(--heo-main) !important;  background: var(--heo-white) !important;  border-radius: 8px !important;}.meta-avatar img:hover {  transform: rotate(360deg);}@media screen and (max-width: 768px) {  .meta-share-time {    display: none !important;  }  #post-info #post-meta {    z-index: 1;  }  #post-info:after {    position: absolute;    content: "";    width: 100%;    height: 100%;    bottom: 0;    left: 0;    box-shadow: 0 -214px 287px 45px var(--heo-main) inset;    z-index: 0;  }  .meta-secondline {    justify-content: center !important;  }  .post-meta__tag-list {    display: none;  }  .typed-cursor {    display: none;  }  .meta-avatar {    display: none !important;  }  #post-firstinfo {    white-space: nowrap;    margin: 0 auto;    z-index: 1;  }  .meta-firstline .tag_share {    display: none;  }}.post-meta__tag-list::-webkit-scrollbar {  display: none;}.meta-share-time a:hover {  background: 0 0 !important;}.meta-share-time .meta-avatar-name {  opacity: 1;  color: var(--heo-white) !important;  font-weight: 700;}.meta-share-time {  display: flex;}.meta-share-time .meta-info {  margin: 0 0.5rem;}.meta-secondline {  display: flex;  flex-direction: row;  flex-wrap: wrap;  justify-content: flex-start;  align-items: center;}.meta-avatar {  display: flex;}.meta-avatar .meta-avatar-name {  margin: 0 0.5rem;}#post-info #post-meta i {  font-size: 16px;  margin-right: 4px;}span.post-meta-pv-cv {  margin-left: 0.8rem;}span.post-meta-wechat {  margin-right: 0.8rem;  opacity: 0.6;  transition: 0.3s;  cursor: pointer;}.post-meta-wechat:hover {  opacity: 1;}span.post-meta-position {  margin-right: 0.8rem;  opacity: 0.6;}#post-info #post-meta .post-meta-label {  display: none;}#post-info #post-meta .post-meta-icon {  margin-right: 0.4rem;}#post-info #post-meta .post-meta-separator {  margin: 0 0.4rem;}.post-meta-pv-cv #busuanzi_value_page_pv {  font-weight: 800;}#post-meta > div > span.post-meta-wordcount > span.word-count {  font-weight: 800;}#post-meta > div > span.post-meta-wordcount > span:nth-child(7) {  font-weight: 800;}#post-firstinfo > div > span.post-meta-categories > a {  font-weight: 800;}.post-meta-wordcount {  opacity: 0.6;  margin-right: 0.8rem;}@media screen and (max-width: 768px) {  .post-meta-wordcount {    margin-left: 0;  }}.post-meta-pv-cv {  opacity: 0.6;}.post-meta-pv {  opacity: 0.6;  margin-right: 0.8rem;}.post-meta-commentcount {  opacity: 0.6;  cursor: pointer;  transition: 0.3s;}.post-meta-commentcount:hover {  opacity: 1;}#twikoo-count {  font-weight: 800;  color: var(--heo-white);}.el-textarea .el-input__count {  color: var(--heo-secondtext) !important;  -webkit-user-select: none;  bottom: 8px !important;  right: 12px !important;}.post-meta-commentcount i {  margin-right: 0.5rem;}.inline-image {  display: flex;  margin: 8px auto;  width: fit-content;  justify-content: center;}.inline-image a:hover {  background: 0 0 !important;  box-shadow: none !important;}.inline-image img {  margin: 0;  display: inline-flex;  margin-bottom: 0 !important;}#post-info .post-title {  color: var(--heo-white);  font-weight: 700;  font-size: 2.3rem;  line-height: 1.2;  text-align: left;  margin: 1rem 0 1rem 0 !important;  -webkit-line-clamp: 2;  padding: 0;  overflow: hidden;}@media screen and (max-width: 768px) {  #post-info .post-title {    font-size: 1.2rem;    -webkit-line-clamp: 3;    margin: 0.2rem auto !important;    text-align: center;    z-index: 1;  }}#post-meta > div {  text-align: left;}#post-info #post-meta {  color: var(--heo-white);  margin-top: 0.4rem;  transition: 0.3s;  display: flex;  -webkit-user-select: none;}#post-info #post-meta a {  text-decoration: none;  color: var(--heo-fontcolor);  line-height: 1;}#post-info #post-meta a:hover {  text-decoration: none;  color: var(--heo-white);  border-radius: 12px;}#post-info #post-meta i {  line-height: 1;}#article-container h1:before,#article-container h2:before,#article-container h3:before,#article-container h4:before,#article-container h5:before,#article-container h6:before {  top: calc(50% - 0.45rem);  content: "";}#article-container h1:hover:before,#article-container h2:hover:before,#article-container h3:hover:before,#article-container h4:hover:before,#article-container h5:hover:before,#article-container h6:hover:before {  color: var(--heo-lighttext);}#article-container h1:hover,#article-container h2:hover,#article-container h3:hover,#article-container h4:hover,#article-container h5:hover,#article-container h6:hover {  padding-left: 1.3rem;}#article-container ul > li:not(.tab):before {  border: 0.21em solid var(--heo-lighttext);  background: var(--heo-lighttext);}#article-container ol,#article-container ul {  padding: 0;}#article-container .tabs {  margin: 1rem 0 !important;  border-radius: 12px;  overflow: hidden;  box-shadow: var(--heo-shadow-border);  padding: 8px;  background: var(--heo-card-bg);  border: var(--style-border);}#article-container .tabs .nav-tabs {  background: var(--heo-card-bg);  padding: 16px;  display: flex;  justify-content: center;  flex-wrap: wrap;  flex-direction: row;}@media screen and (max-width: 768px) {  #article-container .tabs .nav-tabs {    padding: 0;    margin-bottom: 8px;  }}#article-container .tabs > .nav-tabs > .tab.active button {  border: var(--style-border-hover-always);  background: var(--heo-background);  border-radius: 8px;}#article-container .tabs > .nav-tabs > .tab button {  transition: all 0s;  -webkit-transition: all 0s;  background: var(--heo-secondbg);  transition: 0.3s;  border: var(--style-border-always);  border-radius: 8px;  font-size: 14px;  padding: 8px 16px;  display: block;  line-height: 1;  width: 100%;  color: var(--heo-fontcolor);}#article-container .tabs > .nav-tabs > .tab:not(.active) button:hover {  background: var(--heo-main);  color: var(--heo-white);  transition: 0.3s;  border: var(--style-border-hover-always);}.tab-item-content {  background: var(--heo-card-bg);}#article-container .tabs {  border: 3px solid var(--heo-secondbg) !important;}#article-container .tabs > .tab-contents .tab-item-content.active {  animation: tabshow 0s;  -webkit-animation: tabshow 0s;  padding: 1.2rem 1.2rem;  border-radius: 8px;}@media screen and (max-width: 768px) {  #article-container .tabs > .tab-contents .tab-item-content.active {    padding: 0.5rem 0.5rem;  }}.tab-contents {  border-radius: 8px;  overflow: hidden;}details:not(.tk-admin-config-group) {  display: block;  position: relative;  margin-bottom: 1rem;  min-height: 54px;  overflow: hidden;  border-radius: 12px;  border: var(--style-border);  transition: border 0.3s;}details:not(.tk-admin-config-group):hover {  border: var(--style-border-hover-always);}details:not(.tk-admin-config-group) summary {  position: absolute;  padding: 0.5rem 1rem;  background: var(--heo-card-bg);  margin: 0;  transition: 0.3s;  box-shadow: var(--heo-shadow-border);  position: absolute;  left: 0;  width: 100%;  font-weight: 700;  white-space: nowrap;  overflow: hidden;  text-overflow: ellipsis;}details:not(.tk-admin-config-group) > :nth-child(2) {  margin-top: calc(54px + 1rem) !important;}details[open]:not(.tk-admin-config-group) summary {  background: var(--heo-main);  color: var(--heo-white);}details:not(.tk-admin-config-group) summary::before {  content: "";  padding: 4px;}details:not(.tk-admin-config-group) summary:hover {  cursor: pointer;  background: var(--heo-main);  color: var(--heo-white);  transition: 0.3s;  box-shadow: var(--heo-shadow-main);}details:not(.tk-admin-config-group) summary:focus {  outline: 0;}details:not(.tk-admin-config-group) summary::marker {  color: var(--heo-main);  transition: 0.3s;}details[open]:not(.tk-admin-config-group) summary::marker {  color: var(--heo-white);}details:not(.tk-admin-config-group) summary:hover::marker {  color: var(--heo-white);}details[open]:not(.tk-admin-config-group) {  border-radius: 12px;  border: var(--style-border-hover-always);  padding: 0 1.5rem;  background: var(--heo-card-bg);}details:not(.tk-admin-config-group) summary:hover:after {  position: absolute;  content: "+";  text-align: center;  top: calc(50% - 2px);  transform: translateY(-50%);  right: 16px;  line-height: 1;}details[open]:not(.tk-admin-config-group) > summary:hover:after {  content: "-";}@media screen and (max-width: 768px) {  details[open]:not(.tk-admin-config-group) {    padding: 0 16px;  }}#article-container ul > li:not(.tab):hover:before {  border-color: var(--heo-none);}#article-container a {  text-decoration: none;  border-bottom: 2px solid var(--heo-lighttext);  color: var(--heo-fontcolor);  font-weight: 700;  padding: 0 4px;  border-radius: 4px 4px 0 0;}#article-container .site-card:hover a:not(.fancybox) {  text-decoration: none;  border-bottom: 2px solid var(--heo-none);  color: var(--heo-white);  background: var(--heo-main);  box-shadow: var(--heo-shadow-main);}#article-container a.fancybox {  border-bottom: 0;  padding: 0;  margin: auto;  display: contents;  width: fit-content;  -webkit-user-select: none;}#article-container a.fancybox img {  cursor: zoom-in;}.site-card-avatar a.fancybox {  padding: 0 !important;}#article-container p {  margin: 1rem 0;  text-align: left;  letter-spacing: 0.6px;}#article-container blockquote p {  line-height: 1.4;  font-size: 15px;}#article-container code {  color: var(--heo-white);  padding: 0.2rem 0.4rem;  border-radius: 4px;  margin: 0 4px;  background: var(--heo-pink);  line-height: 2;  box-shadow: var(--heo-shadow-border);}#article-container code::selection {  background: var(--heo-main) !important;}.table-wrap {  margin: 1rem 0;  border-radius: 8px;}table td,table th {  border: var(--style-border-always);}table thead {  background: var(--heo-secondbg);}b,strong {  color: var(--heo-lighttext);}#article-container p {  font-size: 0.9rem;  line-height: 1.7;  font-weight: 400;}#article-container.post-content h1,#article-container.post-content h2,#article-container.post-content h3,#article-container.post-content h4 {  display: flex;  align-items: center;  justify-content: space-between;  flex-direction: row-reverse;}#article-container.post-content h1 {  font-size: 1.5rem;  line-height: 1.3;}#article-container.post-content h2 {  font-size: 1.3rem;  line-height: 1.3;  border-top: 1px dashed var(--heo-theme-op);  padding-top: 1.5rem;}#article-container.post-content h3 {  font-size: 1.1rem;  line-height: 1.3;}#article-container.post-content h4 {  font-size: 1rem;  line-height: 1.3;}@media screen and (max-width: 768px) {  #article-container p {    line-height: 1.5;  }}.note.warning:not(.no-icon):not(.modern)::before {  display: flex;  align-items: center;  height: 30px;  color: var(--heo-yellow);}.note.warning:not(.modern) {  border-radius: 8px;  border-width: 1px;  border-color: var(--heo-yellow);  box-shadow: var(--heo-shadow-border);  background: var(--heo-card-bg);}#article-container .tag-Link {  background: var(--heo-secondbg);  border-radius: 8px !important;  display: flex;  border: var(--style-border);  flex-direction: column;  padding: 0.3rem 1rem 0.6rem;  border-width: 1px !important;  margin-top: 1rem;}#article-container .tag-Link:hover {  border: var(--style-border-hover);}#article-container .tag-Link .tag-link-tips {  border-bottom: var(--style-border-always);  padding-bottom: 4px;  font-size: 0.6rem;  color: var(--heo-gray);  font-weight: 400;  pointer-events: none;}#article-container .tag-Link:hover .tag-link-tips {  color: var(--heo-white);  opacity: 0.6;}#article-container .tag-Link .tag-link-bottom {  display: flex;  margin-top: 0.5rem;  align-items: center;  justify-content: space-around;  pointer-events: none;}#article-container .tag-Link .tag-link-bottom .tag-link-left {  width: 60px;  min-width: 60px;  height: 60px;  background-size: cover !important;  border-radius: 8px;  background: var(--heo-card-bg);  pointer-events: none;  display: flex;}#article-container .tag-Link .tag-link-bottom .tag-link-left i {  padding: 0;  margin: auto;  font-size: 24px;  color: var(--heo-fontcolor);}#article-container .tag-Link .tag-link-bottom .tag-link-right {  margin-left: 1rem;  pointer-events: none;}#article-container .tag-Link .tag-link-bottom .tag-link-right .tag-link-title {  font-size: 16px;  line-height: 1.2;  pointer-events: none;  word-break: break-all;  text-overflow: ellipsis;  display: -webkit-box;  -webkit-box-orient: vertical;  -webkit-line-clamp: 2;  overflow: hidden;}#article-container  .tag-Link  .tag-link-bottom  .tag-link-right  .tag-link-sitename {  font-size: 0.7rem;  color: var(--heo-gray);  font-weight: 400;  margin-top: 8px;  pointer-events: none;  line-height: 1;  overflow: hidden;  text-overflow: ellipsis;  white-space: nowrap;}#article-container  .tag-Link:hover  .tag-link-bottom  .tag-link-right  .tag-link-sitename {  color: var(--heo-white);  opacity: 0.6;}#article-container .tag-Link .tag-link-bottom i {  margin-left: auto;  padding-left: 0.5rem;  pointer-events: none;}h1,h2,h3,h4,h5,h6 {  margin-top: 1rem;  padding-top: 0;  padding-left: 0 !important;  font-weight: 700;}#post h2 {  margin-top: 1.5rem;}#article-container > h1:nth-child(1),#article-container > h2:nth-child(1) {  margin: 0;}#aside-content #card-toc .toc-content:before {  display: none;}blockquote {  border: var(--style-border-always);  background-color: var(--heo-secondbg);  color: var(--heo-secondtext);  border-radius: 8px;  margin: 1rem 0;  padding: 0.5rem 0.8rem;}blockquote p {  padding: 0;}#article-container .headerlink::before {  content: "\e038";  font-family: heofont !important;}#article-container .headerlink {  float: right;  opacity: 0.08;  border-bottom-style: none;  border-bottom: none;  position: relative;  padding: 0;  border: none;  border-radius: 8px !important;  line-height: 1;  font-size: 1rem;}#article-container .headerlink:hover {  background: 0 0 !important;  opacity: 1;  border-bottom: none !important;  box-shadow: none !important;  background: var(--heo-none);  color: var(--heo-lighttext) !important;  text-decoration: none;}#sidebar {  background: var(--heo-maskbg);}#article-container img {  border-radius: 12px;  margin-bottom: 0.5rem;  object-fit: cover;}#article-container img.error {  content: url(https://bu.dusays.com/2023/03/03/6401a79030db5.png);}.doge-inner-player {  border-radius: 12px !important;}#article-container ol li:before,#article-container ul li:before {  background: var(--heo-main);  cursor: default;}#article-container ol li:hover:before,#article-container ul li:hover:before {  transform: rotate(0);}figure {  margin-top: 0.5rem !important;}#article-container figure.highlight .highlight-tools {  background: var(--heo-secondbg);  border-bottom: var(--style-border-always);  color: var(--heo-fontcolor);}#article-container .gutter {  opacity: 0.6;  user-select: none;}#article-container .code-lang {  margin-left: 6px;}#article-container .highlight-tools .code-lang {  text-transform: capitalize;  left: 1.9rem;}#article-container figure.highlight table::-webkit-scrollbar {  color: var(--heo-blue);  background: var(--heo-card-bg);  height: 8px;}#article-container figure.highlight table::-webkit-scrollbar-thumb {  background: var(--heo-main-op);}#article-container figure.highlight table::-webkit-scrollbar-thumb:hover {  background: var(--heo-main);}#article-container .code-expand-btn i {  color: var(--heo-fontcolor);  font-size: 14px;  line-height: 1;  animation: 1.2s ease 0s infinite normal none running code-expand-key;}#article-container .code-expand-btn {  background: var(--heo-secondbg);  transition: 0.3s;  backdrop-filter: saturate(180%) blur(20px);  -webkit-backdrop-filter: blur(20px);  transform: translateZ(0);  border-top: var(--style-border-always);  position: absolute;  bottom: 0;  z-index: 10;  width: 100%;  text-align: center;  font-size: 16px;  cursor: pointer;  display: flex;  align-items: center;  justify-content: center;  height: 32px;}#article-container .code-expand-btn:hover {  background: var(--heo-main);}#article-container .code-expand-btn:hover i {  color: var(--heo-white);}#readmore-talk {  text-align: center;  color: var(--heo-lighttext);  padding: 8px;  border-radius: 12px;  background: #f2b94b0c;}#article-container iframe {  border-radius: 12px !important;}.relatedPosts > .relatedPosts-list .cover::after {  content: " ";  display: block;  position: absolute;  z-index: 0;  top: 0;  left: 0;  width: 100%;  height: 100%;  background: url(https://bu.dusays.com/2023/03/03/6401a79030db5.png) 50%;  background-size: cover;}.relatedPosts > .relatedPosts-list a {  display: flex;  width: 100%;  height: 100%;}@media screen and (min-width: 768px) {  #post > div.relatedPosts > div.relatedPosts-list > div {    -webkit-mask-image: -webkit-radial-gradient(center, #fff, #000);  }  #post > div.relatedPosts > div.relatedPosts-list > div {    border-radius: 12px;  }  .relatedPosts > .headline {    font-size: 0.8em;  }  @media screen and (max-width: 1300px) {    #post > div.relatedPosts > div.relatedPosts-list > div:nth-child(7) {      display: none;    }    #post > div.relatedPosts > div.relatedPosts-list > div:nth-child(8) {      display: none;    }  }}.relatedPosts > .headline {  margin-bottom: 0.8rem;  font-weight: 700;  font-size: 20px;  display: flex;  align-items: center;}.relatedPosts > .headline span {  margin-right: auto;  margin-left: 8px;}.relatedPosts > .headline a {  font-weight: 400;}#post .tag_share .post-meta__tags {  background: var(--heo-card-bg);  border: var(--style-border-always);  color: var(--heo-fontcolor);  border-radius: 8px;  margin: 0;  display: flex;  align-items: center;  white-space: nowrap;  height: 40px;  padding: 0 0.6rem;  width: fit-content;  font-size: 0.85em;  transition: all 0.2s ease-in-out 0s;}#post .tag_share .post-meta__tags:hover {  background: var(--heo-lighttext);  box-shadow: var(--heo-shadow-main);  color: var(--heo-white);}@media screen and (min-width: 1300px) {  #post .tag_share .post-meta__tags {    background: var(--heo-card-bg);    border: var(--style-border);  }  #post .tag_share .post-meta__tags:hover {    border: var(--style-border-hover);  }}#post .post-copyright {  background: var(--heo-secondbg);  border-width: 1px;  transition: 0.3s;  position: relative;  margin: 80px 0 30px;  border-radius: 12px;  padding: 34px 0 20px 0;  border: var(--style-border-always);}@media screen and (max-width: 768px) {  #post .post-copyright {    padding: 1rem 1.3rem;  }}.post-copyright__author_img {  width: 66px;  height: 66px;  margin: auto;  border-radius: 66px;  overflow: hidden;  position: absolute;  left: calc(50% - 33px);  top: -33px;  border: var(--style-border-always);  box-shadow: var(--heo-shadow-main);}.post-copyright__author_img img {  position: absolute;  bottom: 0;  left: 0;}img.post-copyright__author_img_back {  border-radius: 66px;  z-index: 10;}img.post-copyright__author_img_front {  z-index: 20;  transform: scale(1.2) translateY(6px);}.post-copyright__author_img:hover img.post-copyright__author_img_front {  transform: scale(1) translateY(3px);}.post-copyright__author_img:hover img.post-copyright__author_img_back {  transform: scale(0.8);}.post-copyright__author_name {  text-align: center;  font-size: 20px;  font-weight: 700;  margin-top: 16px;  color: var(--heo-fontcolor);  line-height: 1;}.post-copyright__author_desc {  text-align: center;  font-size: 14px;  color: var(--heo-secondtext);  margin-top: 4px;}.post-copyright__author {  display: flex;  align-items: center;}.post-copyright__original {  background: var(--heo-fontcolor);  color: var(--heo-card-bg);  padding: 0.2rem 0.5rem;  font-size: 0.7rem;  border-radius: 8px;  margin-right: 0.5rem;  font-weight: 700;  line-height: 1.5;  white-space: nowrap;  -webkit-user-select: none;}.post-copyright__original:hover {  background: var(--heo-main);  color: var(--heo-white);}@media screen and (max-width: 768px) {  #post .post-copyright {    background: var(--heo-card-bg);    box-shadow: var(--heo-shadow-border);  }  .post-copyright .post-meta-original {    display: none;  }  .post-copyright__original {    display: none;  }}.post-copyright-copybtn {  margin-left: 0.5rem;  color: var(--heo-fontcolor);  opacity: 0.4;  transition: 0.3s;}.post-copyright-copybtn:hover {  opacity: 1;  transition: 0.3s;}.post-copyright-copybtn i {  font-size: 16px;}#post .post-copyright .post-copyright-info a {  padding: 0;  color: var(--heo-fontcolor);  font-weight: 700;}#post .post-copyright .post-copyright__notice .post-copyright-info a {  padding: 0 4px;}#post .post-copyright .post-copyright-info {  padding-left: 0;  color: var(--heo-secondtext);  overflow: hidden;  display: -webkit-box;  -webkit-line-clamp: 1;  -webkit-box-orient: vertical;  text-align: center;}#post .post-copyright .post-copyright-title {  padding-left: 0;  color: var(--heo-fontcolor);  overflow: hidden;  display: -webkit-box;  -webkit-line-clamp: 1;  -webkit-box-orient: vertical;  font-size: 1rem;  font-weight: 700;}#post .post-copyright .post-copyright-title:hover {  color: var(--heo-lighttext);}#post > div.post-copyright > div.post-copyright__author > span > span {  padding: 0;  color: var(--heo-fontcolor);  font-weight: 700;  font-size: 1rem;  line-height: 1.38;  overflow: hidden;  display: -webkit-box;  -webkit-line-clamp: 1;  -webkit-box-orient: vertical;}@media screen and (max-width: 768px) {  #post > div.post-copyright > div.post-copyright__author > span > span {    -webkit-line-clamp: 3;  }  #post .post-copyright .post-copyright-info {    -webkit-line-clamp: 2;  }  #post .post-copyright .post-copyright-title {    -webkit-line-clamp: 3;    line-height: 1.2;  }}#post > div.post-copyright > div.post-copyright__type {  line-height: 16px;  display: flex;  align-items: center;  margin-top: 4px;}#post > div.post-copyright > div.post-copyright__type > span > a {  font-size: 14px;  opacity: 0.6;  line-height: 16px;}#post > div.post-copyright > div.post-copyright__type > span > a:hover {  opacity: 1;  background: 0 0;}#post-copyright-url a {  overflow: hidden;  display: -webkit-box;  -webkit-line-clamp: 1;  -webkit-box-orient: vertical;}#post > div.post-copyright > div.post-copyright__notice {  font-size: 12px;  margin: 0.5rem 0;}#post .post-copyright:before {  display: none;}.post-reward .reward-button {  background: var(--heo-red);  color: var(--heo-white);  padding: 0 16px;  height: 40px;  line-height: 39px;  box-shadow: var(--heo-shadow-red);  display: inline-block;  cursor: pointer;  transition: all 0.4s ease 0s;}.post-reward:hover .reward-button {  color: var(--heo-white);  background: var(--heo-theme);  box-shadow: none;}.share-button .fa-qrcode:before {  font-size: 1rem;}.post-qr-code-img {  box-shadow: var(--heo-shadow-lightblack);  border-radius: 12px;  border: var(--style-border-always);}.post-reward .reward-main .reward-all .reward-item .post-qr-code-desc {  padding-top: 0;  margin-top: -8px;  margin-bottom: 8px;}.post-reward .reward-main .reward-all {  border-radius: 12px;  background: var(--heo-card-bg);  border: var(--style-border-always);  padding: 0.8rem;  display: flex;  box-shadow: var(--heo-shadow-border);  flex-direction: column;  align-items: center;}.reward-dec {  font-size: 0.6rem;}.reward-text {  margin-bottom: 0;  font-weight: 700;}a.reward-main-btn {  background: var(--heo-secondbg);  color: var(--heo-fontcolor);  display: flex;  flex-direction: column;  border-radius: 12px;  padding: 4px 0;  border: var(--style-border-always);  margin: 8px;  width: 100%;}a.reward-main-btn:hover {  color: var(--heo-white);  background: var(--heo-red);  background-image: url(https://p.zhheo.com/JgNrST23690481619450556342.gif!cover);  box-shadow: var(--heo-shadow-red);}.reward-title {  font-weight: 700;  color: var(--heo-red);}.reward-link.mode {  background: var(--heo-green);  color: var(--heo-white);  padding: 0 16px;  height: 40px;  line-height: 39px;  box-shadow: var(--heo-shadow-green);  border-radius: 8px;  margin-left: 0.5rem;  text-align: center;  transition: 0.3s;}.reward-link.mode a {  color: var(--heo-white);}.reward-link.mode i {  margin-right: 4px;}.reward-link.mode:hover {  background: var(--heo-theme);  box-shadow: none;}#quit-box {  position: fixed;  width: 100vw;  height: 100vh;  background: rgba(0, 0, 0, 0.2);  top: 0;  left: 0;  display: none;  z-index: 101;  margin: 0 !important;}.post-tools-left #quit-box {  display: none;}@media screen and (max-width: 768px) {  #quit-box {    display: none !important;  }}#pagination .next-post,#pagination .prev-post,.next-post.pull-right,.prev-post.pull-left {  background: var(--heo-secondbg);}@media screen and (min-width: 768px) {  #pagination .next-post a {    border-left: var(--heo-main-op);    border-left-width: 0.5px;    border-left-style: solid;    display: flex;    align-items: flex-start;    height: 150px;  }  #pagination .next-post.pull-full a {    border-left-width: 0;  }  #pagination .prev-post a {    border-right: var(--heo-main-op);    border-right-width: 0.5px;    border-right-style: solid;  }  #pagination .pagination-info {    padding: 1rem 1.5rem 1rem 1.5rem;    position: relative;    display: flex;    top: 0;    transform: none;    flex-direction: column;    justify-content: center;    margin: auto;    height: 100%;  }  #pagination .next-post a:hover,  #pagination .prev-post a:hover {    background: var(--heo-main);  }  #pagination .next-post a:hover div,  #pagination .prev-post a:hover div {    color: var(--heo-white) !important;  }}@media screen and (max-width: 768px) {  #pagination .next-post a:hover,  #pagination .prev-post a:hover {    background: var(--heo-none);  }}#pagination img.next-cover,#pagination img.prev-cover {  opacity: 0.15;  transform: scale(1.03);  transition: 0.3s;  filter: blur(0);  -webkit-backface-visibility: hidden;  -webkit-transform-style: preserve-3d;}#pagination .next-post:hover img.next-cover,#pagination .next-post:hover img.prev-cover,#pagination .prev-post:hover img.next-cover,#pagination .prev-post:hover img.prev-cover {  opacity: 0.25;  transform: scale(1.03);  filter: blur(5px);}#pagination .next-post .label,#post #pagination .prev-post .label {  color: var(--heo-fontcolor);}#pagination .next_info,#post #pagination .prev_info {  color: var(--heo-fontcolor);  font-weight: 700;  -webkit-line-clamp: 2;  white-space: normal;  line-height: 1.3;  font-size: 0.9rem;  display: -webkit-box;  -webkit-box-orient: vertical;  overflow: hidden;  margin-bottom: 10px;}#post #pagination {  overflow: hidden;  position: inherit;  border: var(--style-border-always);}#pagination.pagination-post {  background: var(--heo-card-bg);}@media screen and (min-width: 1300px) {  #post #pagination {    position: fixed;    width: 300px;    bottom: -100px;    right: 20px;    z-index: 1000;    height: fit-content;    transition: cubic-bezier(0.42, 0, 0.3, 1.11) 0.3s;    border: var(--style-border);    border-radius: 12px;    overflow: hidden;    cursor: pointer;    opacity: 0;    z-index: 1002;  }  #post #pagination.show-window {    bottom: 20px;    opacity: 1;  }  #post #pagination:hover {    border: var(--style-border-hover);  }  #pagination .next-post a {    border: none;    height: fit-content;    padding: 0.5rem 0;  }  #pagination.pagination-post {    border-radius: 0;  }  #pagination .next_info,  #post #pagination .prev_info {    font-size: 14px;    font-weight: 400;    margin-bottom: 0;  }  #pagination .pagination-info {    padding: 0.5rem 1rem;    transform: none;  }  #post #pagination {    background: 0 0;  }  #pagination .next-post,  #pagination .prev-post,  .next-post.pull-right,  .prev-post.pull-left {    background: var(--heo-maskbgdeep);    -webkit-backdrop-filter: blur(5px);    backdrop-filter: blur(5px);    transform: translateZ(0);  }  .prev-post.pull-left {    display: none;  }  .next-post.pull-right {    width: 100% !important;  }  #pagination .next-post .pagination-info {    text-align: left;    position: relative;  }  #pagination .next-post .label,  #post #pagination .prev-post .label {    color: var(--heo-fontcolor);    font-weight: 700;    font-size: 12px;    margin-bottom: 0.5rem;    border-bottom: var(--style-border);    line-height: 1;    padding-bottom: 0.5rem;  }}@media screen and (max-width: 768px) {  .prev-post.pull-left {    border-bottom: var(--style-border-always);  }  #post #pagination {    border-radius: 12px;    border: var(--style-border-always);    box-shadow: var(--heo-shadow-border);  }  #pagination .next-post .label,  #post #pagination .prev-post .label {    text-align: left;  }  #pagination .next_info,  #post #pagination .prev_info {    text-align: left;  }  #pagination .next-post,  #pagination .prev-post,  .next-post.pull-right,  .prev-post.pull-left {    background: var(--heo-card-bg);  }}@media screen and (max-width: 768px) {  #pagination .page-number {    display: none;  }  #pagination .pagination .space {    display: none;  }  #pagination .pagination .extend {    width: 100%;    height: 2.5rem;    margin: 0.2rem 0 1rem 0;    border-radius: 12px;    line-height: 2.5rem;    background: var(--heo-card-bg);    border: var(--style-border-always);    box-shadow: var(--heo-shadow-border);  }  #pagination .pagination .extend i {    display: none;  }  #pagination .pagination .extend:hover {    background: var(--heo-theme);    color: var(--heo-white);  }  #pagination .pagination {    background: var(--heo-background);    transition: 0.3s;    display: flex;  }}@media screen and (min-width: 768px) {  #pagination .page-number {    width: 2rem;    background: var(--heo-card-bg);    height: 2rem;    line-height: calc(2rem - 2px);    border-radius: 8px !important;    margin: 0 0.3rem;    box-shadow: var(--heo-shadow-border);    border: var(--style-border);    transition: 0.3s;  }  #pagination .page-number.current {    background: var(--heo-theme);    border: var(--style-border-hover);    box-shadow: var(--heo-shadow-theme);  }  #pagination .page-number.current:hover {    background: var(--heo-theme);    box-shadow: var(--heo-shadow-theme);    color: var(--heo-white);  }  #pagination .page-number:hover {    color: var(--heo-theme);    border: var(--style-border-hover);    box-shadow: var(--heo-shadow-main);  }  #pagination a.extend.next:hover,  #pagination a.extend.prev:hover {    color: var(--heo-theme);    border: var(--style-border-hover);    box-shadow: var(--heo-shadow-main);  }  #pagination span.space {    margin: 0 0.3rem;  }  #pagination a.extend.next,  #pagination a.extend.prev {    width: 4rem;    height: 2rem;    line-height: 1.9rem;    border-radius: 8px !important;    background: var(--heo-card-bg);    box-shadow: var(--heo-shadow-border);    position: absolute;    border: var(--style-border);    display: flex;    align-items: center;    justify-content: center;    overflow: hidden;    transition: 0.3s;  }  #pagination a.extend.next i,  #pagination a.extend.prev i {    transition: 0.3s;  }  #pagination a.extend.next {    overflow: hidden;  }  #pagination a.extend.next .pagination_tips_next {    margin-left: -32px;    transition: 0.3s;    opacity: 0;  }  #pagination a.extend.next:hover .pagination_tips_next {    margin-left: 2px;    opacity: 1;    white-space: nowrap;  }  #pagination a.extend.prev .pagination_tips_prev {    margin-right: -32px;    transition: 0.3s;    opacity: 0;  }  #pagination a.extend.prev:hover .pagination_tips_prev {    margin-right: 2px;    opacity: 1;    white-space: nowrap;  }  #pagination {    overflow: visible;  }  #pagination .pagination {    position: relative;    display: flex;    justify-content: center;  }}.relatedPosts-list {  display: flex;  flex-wrap: wrap;  justify-content: space-between;  flex-direction: column;}.relatedPosts > .relatedPosts-list > div {  background: var(--heo-secondbg);  border: var(--style-border);  transition: 0.3s;  cursor: pointer;  overflow: hidden;  width: 100%;  margin-bottom: 8px;}.relatedPosts > .relatedPosts-list > div:hover {  background: var(--heo-main);}@media screen and (max-width: 768px) {  .relatedPosts {    display: none;  }  .relatedPosts > .relatedPosts-list > div {    border-radius: 4px;  }}.relatedPosts > .relatedPosts-list > div:hover a .title {  color: var(--heo-white);}.relatedPosts > .relatedPosts-list .content .title {  color: var(--heo-fontcolor);  font-weight: 700;  line-height: 1.5;  -webkit-line-clamp: 4;  font-size: 0.9rem;  text-align: left;  overflow: hidden;}.relatedPosts > .relatedPosts-list .content .date {  color: var(--heo-fontcolor);  display: none;}#post > hr {  display: none;}.post-tips {  color: var(--heo-gray);  font-size: 14px;  position: absolute;  bottom: 1rem;  left: 2rem;}.post-tips a {  color: var(--heo-gray) !important;  border: none !important;}.post-tips a:hover {  color: var(--heo-main) !important;}@media screen and (max-width: 768px) {  .post-tips {    left: 1rem;  }}div#post-comment {  margin-top: 2rem;}#post-comment > div.comment-head > div.comment-privacy {  display: block;  justify-content: space-between;  margin-left: 8px;  font-size: 13px;}#post-comment > div.comment-head > div.comment-privacy a:hover {  color: var(--heo-main);}#post-comment .comment-tips {  background-color: rgba(103, 194, 58, 0.9);  border: var(--style-border-always);  border-color: var(--heo-green);  color: var(--heo-white);  border-radius: 8px 8px 0 0;  padding: 8px 12px;  margin-top: 0.5rem;  display: none;  width: 100%;  position: absolute;  top: 50px;  z-index: 1000;  opacity: 1;  transition: 0.3s;}#post-comment .comment-tips:hover {  opacity: 0;}.tk-content img {  max-height: 1100px !important;  max-width: 100% !important;  border-radius: 12px;}#post-comment .comment-tips.show {  display: flex;  font-weight: 700;}.el-input--small .el-input__inner {  padding: 8px;  padding-left: 16px;}.tk-avatar {  width: 32px !important;  height: 32px !important;  box-shadow: var(--heo-shadow-border);  margin-right: 16px !important;}.tk-avatar.tk-has-avatar {  width: 32px !important;  height: 32px !important;  border-radius: 32px !important;}.tk-avatar.tk-has-avatar img {  border-radius: 32px !important;}.tk-row .tk-avatar {  display: none;}.tk-avatar .tk-avatar-img:hover {  transform: rotate(360deg);}img.tk-avatar-img {  height: 32px !important;  border-radius: 32px;  border: var(--style-border-always);}.el-input.el-input--small.el-input-group.el-input-group--prepend:nth-child(    1  ):before {  content: "输入QQ号会自动获取昵称和头像";}.el-input.el-input--small.el-input-group.el-input-group--prepend:nth-child(    2  ):before {  content: "收到回复将会发送到你的邮箱";}.el-input.el-input--small.el-input-group.el-input-group--prepend:nth-child(    3  ):before {  content: "可以通过昵称访问你的网站，可不填";}.el-input.el-input--small.el-input-group.el-input-group--prepend:focus-within::before {  display: block;  animation: commonTipsIn 0.3s;}.el-input.el-input--small.el-input-group.el-input-group--prepend:focus-within::after {  display: block;  animation: commonTriangleIn 0.3s;}@keyframes commonTipsIn {  0% {    top: -50px;    opacity: 0;  }  100% {    top: -60px;    opacity: 1;  }}@keyframes commonTriangleIn {  0% {    transform: translate(-50%, -36px);    opacity: 0;  }  100% {    transform: translate(-50%, -46px);    opacity: 1;  }}.el-input.el-input--small.el-input-group.el-input-group--prepend::before {  display: none;  position: absolute;  top: -60px;  white-space: nowrap;  border-radius: 10px;  left: 50%;  transform: translate(-50%);  padding: 14px 18px;  background: #444;  color: #fff;  z-index: 100;}.el-input.el-input--small.el-input-group.el-input-group--prepend::after {  display: none;  content: "";  position: absolute;  border: 12px solid transparent;  border-top-color: #444;  left: 50%;  transform: translate(-50%, -46px);}.tk-nick {  font-size: 1rem !important;  line-height: 32px;}.el-input-group__append,.el-input-group__prepend {  background-color: var(--heo-card-bg) !important;  color: var(--heo-fontcolor) !important;  border-color: var(--heo-card-border) !important;  border: none !important;  font-weight: 700;}.el-input__inner {  background: var(--heo-secondbg) !important;  border: none !important;  color: var(--heo-fontcolor) !important;  padding-left: 8px;}.el-input.el-input--small.el-input-group.el-input-group--prepend {  border-radius: 12px;  background: var(--heo-secondbg);  border: var(--style-border-always);}.el-input-group--prepend .el-input__inner,.el-input-group__append {  border-radius: 12px !important;}.page .el-input.el-input--small.el-input-group.el-input-group--prepend {  background: var(--heo-card-bg);}@media screen and (max-width: 769px) {  .el-input__inner {    background: var(--heo-card-bg) !important;  }  .el-input.el-input--small.el-input-group.el-input-group--prepend {    background: var(--heo-card-bg);    margin-bottom: 0;  }}.page .el-input__inner {  background: var(--heo-card-bg) !important;}.el-input__inner:focus {  border: none !important;}.el-textarea__inner {  background: var(--heo-secondbg) !important;  color: var(--heo-fontcolor) !important;  border-radius: 12px !important;  min-height: 100px !important;  padding: 16px 16px 40px 16px !important;  border: var(--style-border-always) !important;  box-shadow: none !important;}@media screen and (max-width: 768px) {  .el-textarea__inner {    background: var(--heo-card-bg) !important;    overflow: hidden;    resize: none !important;  }}#page .el-textarea__inner {  background: var(--heo-card-bg) !important;  box-shadow: var(--heo-shadow-border);}.el-textarea__inner:focus {  border: var(--style-border-hover-always) !important;  box-shadow: var(--heo-shadow-main);}#page .tk-meta-input .el-input {  box-shadow: var(--heo-shadow-border);}#twikoo .tk-row .tk-col {  flex-direction: column-reverse !important;}#twikoo  > div.tk-comments  > div.tk-comments-container  > div.tk-comments-title  > span:nth-child(1) {  display: none !important;}.el-loading-mask {  background-color: none !important;}.tk-tag {  margin-left: 4px;}.tk-tag-green {  border-radius: 4px !important;  border: 0 solid #e1f3d8 !important;  font-size: 0.5rem !important;}[data-theme="dark"] .tk-tag-green {  background-color: #67c23a21 !important;}.tk-tag-yellow {  border-radius: 4px !important;  border: 0 solid #e1f3d8 !important;  font-size: 0.5rem !important;}[data-theme="dark"] .tk-tag-green {  background-color: #c0c23a21 !important;}.tk-tag-red {  border-radius: 4px !important;  border: 0 solid #f3d8d8 !important;  font-size: 0.5rem !important;}[data-theme="dark"] .tk-tag-red {  background-color: #c23a3a21 !important;}.el-button {  background-color: var(--heo-fontcolor) !important;  border: 0 solid var(--heo-main) !important;  color: var(--heo-background) !important;  border-radius: 8px !important;}.el-button:hover {  background: var(--heo-main) !important;  color: var(--heo-white) !important;}.el-button.tk-preview {  display: none !important;}#twikoo > div.tk-comments > div.tk-submit > div.tk-row.actions > a {  display: none !important;}#twikoo {  z-index: 102;}.tk-meta {  display: flex;  align-items: center;}.twikoo-info {  color: var(--heo-secondtext);}.tk-action .tk-action-link:first-child {  display: none;}.tk-action-link {  color: var(--heo-lighttext) !important;  cursor: pointer;  -webkit-user-select: none;}.tk-action-icon svg {  fill: var(--heo-lighttext) !important;}button.el-button.tk-cancel.el-button--default.el-button--small {  background: var(--heo-secondbg) !important;  border-radius: 8px !important;  color: var(--heo-fontcolor) !important;}button.el-button.tk-cancel.el-button--default.el-button--small:hover {  background: var(--heo-lighttext) !important;  color: var(--heo-white) !important;}.tk-submit-action-icon.__markdown {  display: none;}.tk-comments .el-button--primary {  border-color: var(--heo-fontcolor) !important;  color: var(--heo-card-bg);  border-radius: 12px !important;  box-shadow: var(--heo-shadow-black);  transition: 0.3s;  width: 5rem;  position: absolute;  top: -43px;  right: 0;  margin-left: 0.5rem !important;  height: 32px;}.tk-comments .el-button--primary.is-disabled,.tk-comments .el-button--primary.is-disabled:active,.tk-comments .el-button--primary.is-disabled:focus,.tk-comments .el-button--primary.is-disabled:hover {  opacity: 0.2;}.tk-row-actions-start {  position: absolute;  top: -84px;  left: 17px;}.tk-submit {  margin-top: 0.8rem !important;}@media screen and (max-width: 768px) {  .tk-submit .el-button--primary {    width: 5rem;    height: 122px;    top: -132px;  }  .tk-row-actions-start {    top: -176px;  }}.tk-comments-title {  position: absolute;  bottom: 0;  left: 0;}.tk-extras {  margin-top: 0.5rem;  padding-bottom: 0.5rem;}.tk-icon.__comments:first-child {  display: none;}.tk-icon.__comments {  margin-left: 0 !important;  color: var(--heo-main) !important;}.tk-row.actions {  margin-bottom: 0 !important;  margin-left: 0 !important;  margin-top: 0 !important;  justify-content: space-around !important;}.tk-meta-input {  position: relative !important;  margin-top: 8px;  width: calc(100% - 5.5rem);}#post-comment blockquote {  background: var(--heo-secondbg);  border: var(--style-border);  box-shadow: none;  margin: 0;  margin-bottom: 0.5rem;  font-size: 0.6rem;  color: var(--heo-secondtext);  border-radius: 8px;}.tk-content .tk-owo-emotion {  width: 3em;  margin: 0 2px 0 2px;}.OwO .OwO-body .OwO-bar .OwO-packages li {  line-height: 45px !important;  font-size: 28px !important;}.OwO .OwO-body {  z-index: 102;  width: 500px;}#owo-big {  position: fixed;  align-items: center;  background-color: var(--heo-card-bg);  border: var(--style-border-always);  border-radius: 10px;  z-index: 9999;  display: none;  transform: translate(0, -105%);  overflow: hidden;  animation: owoIn 0.3s cubic-bezier(0.42, 0, 0.3, 1.11);  padding: 1rem;}#owo-big img {  width: 100%;}.tk-owo-emotion,.twikoo .OwO-item img {  pointer-events: none;}.OwO.OwO-open .OwO-body {  animation: 0.3s ease 0.1s 1 normal both running donate_effcet;}@keyframes owoIn {  0% {    transform: translate(0, -95%);    opacity: 0;  }  100% {    transform: translate(0, -105%);    opacity: 1;  }}@media screen and (max-width: 768px) {  .OwO .OwO-body {    width: 300px;  }}.tk-extra {  background: var(--heo-secondbg);  border: var(--style-border-always);  padding: 1px 5px 1px 2px;  border-radius: 8px;  margin-right: 4px !important;  color: var(--heo-secondtext) !important;  display: inline !important;  margin-top: 6px !important;  font-size: 0.5rem;}.tk-extra .tk-icon {  display: none;}.tk-expand {  background: var(--heo-card-bg) !important;  color: var(--heo-fontcolor) !important;  border: var(--style-border-always);  box-shadow: var(--heo-shadow-border);  border-radius: 12px;  -webkit-user-select: none;}.tk-expand:hover {  background: var(--heo-theme) !important;  color: var(--heo-white) !important;}.tk-time {  color: var(--heo-secondtext) !important;  font-size: 0.6rem;  margin-left: 0.5rem;}.tk-comments-container > .tk-comment {  margin-top: 0 !important;  margin-bottom: 0.5rem !important;  background: var(--heo-card-bg);  transition: 0.3s;  border-radius: 12px;  padding: 0;  padding-top: 0.5rem;  border: none;  border-top: var(--style-border-dashed);}#page .tk-comments-container > .tk-comment {  padding: 1rem;  padding-bottom: 1.5rem;  border: var(--style-border);  border-top: var(--style-border);  box-shadow: var(--heo-shadow-border);}@media screen and (max-width: 768px) {  .tk-comments-container > .tk-comment {    padding: 1rem;    border: var(--style-border-always);    box-shadow: var(--heo-shadow-border);  }  .tk-icon.__comments {    left: 0.5rem;  }}.tk-icon {  position: absolute;}#post-comment .comment-head {  font-size: 0.8em !important;  margin-bottom: 0.5rem;  display: flex;  align-items: center;  flex-wrap: wrap;  position: relative;}.comment-randomInfo {  margin-left: auto;  font-size: 13px;}.comment-randomInfo:hover a {  color: var(--heo-theme);}.tk-comments-no {  display: none !important;}.tk-comments-container {  min-height: 0 !important;  margin-top: 0.5rem;}.tk-replies > .tk-comment {  background: var(--heo-card-bg);  border-top: var(--style-border-dashed);  border-radius: 12px;  padding: 0;  transition: 0.3s;  padding-top: 1rem;  margin-top: 0;}.tk-content p {  margin: 0 !important;}.tk-replies .tk-content span:first-child {  font-size: 0.5rem;  color: var(--heo-secondtext);}.img-alt {  font-size: 12px;  margin: 0;  margin-top: 8px;  color: var(--heo-secondtext);}.long-img .img-alt {  display: none;}.long-img img {  border-radius: 0 !important;  margin: 0 !important;}@media screen and (min-width: 768px) {  #pagination.pagination-post {    border-radius: 12px;    margin-top: 1rem;  }  .relatedPosts {    margin-top: 1rem;  }}@media screen and (min-width: 1300px) {  #pagination.pagination-post {    border-radius: 0;    margin-top: 0;  }}.post-tools {  display: flex;  width: 100%;  justify-content: center;  margin-top: 8px;  flex-wrap: wrap;  -webkit-user-select: none;}.post-reward {  margin-top: 0;  display: flex;  justify-content: center;}.post-reward:hover > .reward-main {  display: none;}.post-reward .reward-main {  z-index: 1003;}.tk-meta-input .el-input .el-input-group__prepend {  -webkit-user-select: none;  border-radius: 10px 0 0 10px;  border-right: var(--style-border-always);}@media screen and (min-width: 768px) {  .post-reward:hover > .reward-main {    display: flex !important;    justify-content: left;  }}@media screen and (max-width: 768px) {  .post-reward .reward-main {    justify-content: center !important;    position: fixed;    bottom: 0;    left: 0;    right: 0;    z-index: 102;    width: 100%;    margin: auto;    padding: 0;  }  .post-reward .reward-main .reward-all {    width: 100%;    display: flex;    flex-wrap: wrap;    justify-content: space-around;    padding: 30px 0 60px 0;    border-radius: 12px 12px 0 0;  }  #post .tag_share .post-meta__tags {    margin: 0 0.5rem 0 0;  }  a.reward-main-btn {    margin: 4px auto;  }  .tk-meta-input .el-input .el-input-group__prepend {    padding: 0 8px !important;  }  .tk-meta-input {    display: flex;    flex-direction: column;    top: 0;    position: inherit !important;    margin-top: 8px;  }  .tk-meta-input .el-input {    margin-left: 0 !important;    width: 100% !important;    margin-bottom: 4px;    margin-top: 0;  }  .tk-icon {    position: absolute;    right: 0;  }  .tk-meta-input .el-input + .el-input {    margin-top: 8px;    margin-bottom: 0;  }}.post-tools-left {  white-space: nowrap;  display: flex;  text-overflow: ellipsis;  flex-wrap: wrap;}.post-tools-right {  padding-right: 0;  display: flex;  align-items: center;  flex-direction: row;  flex-wrap: wrap;}@media screen and (max-width: 768px) {  .post-tools-left > div {    margin: 8px;  }  .post-tools-left {    white-space: nowrap;    display: flex;    text-overflow: ellipsis;    justify-content: center;    width: 100%;  }  .post-tools-right {    margin-top: 1rem;    width: 100%;    justify-content: center;  }}.post-reward .reward-main .reward-all:after {  display: none;}.reward-group {  display: flex;  margin-top: 0.5rem;}.post-reward .reward-main .reward-all .reward-item:first-child img {  border-color: var(--heo-green);}.post-reward .reward-main .reward-all .reward-item:last-child img {  border-color: var(--heo-blue);}.share-link {  margin-left: 0.5rem;  display: flex;  justify-content: center;  position: relative;  text-align: center;}.share-button {  background: var(--heo-card-btn-bg);  color: var(--heo-fontcolor);  border-radius: 8px;  cursor: pointer;  transition: 0.3s;  width: 56px;  height: 40px;}.share-button i {  line-height: 40px;}.share-button i.fab {  line-height: 42px;}@media screen and (min-width: 768px) {  .share-button {    background: var(--heo-card-bg);    border: var(--style-border);  }  .share-button i {    line-height: 38px;  }  .share-button i.fab {    line-height: 40px;  }}.share-button:hover {  background: var(--heo-theme);  border-color: var(--heo-theme);  color: var(--heo-white);  transition: 0.3s;  box-shadow: var(--heo-shadow-blue);}.share-link.weibo:hover .share-button {  background: var(--heo-red);  border-color: var(--heo-red);  box-shadow: var(--heo-shadow-red);}.share-link.mobile:hover .share-button {  background: var(--heo-green);  border-color: var(--heo-green);  box-shadow: var(--heo-shadow-green);  color: var(--heo-white);}.share-main {  position: absolute;  bottom: 40px;  z-index: 100;  padding-bottom: 15px;  opacity: 0;  pointer-events: none;  transition: 0.3s;  transform: translateY(8px);}.share-main-all {  padding: 12px;  border-radius: 12px;  background: var(--heo-background);  animation: donate_effcet 0.3s 0.1s ease both;  flex-direction: column;  border: var(--style-border-always);}#qrcode {  width: 150px;  height: 150px;  min-width: 150px;  min-height: 150px;  background: var(--heo-white);  padding: 8px;  border-radius: 8px;  margin-bottom: 8px;  border: var(--style-border-always);}.share-link:hover .share-main {  opacity: 1;  transform: translateY(0);}.share-qrcode {  display: flex;  justify-content: center;}@media screen and (max-width: 768px) {  .share-link.mobile {    display: none;  }  .share-button {    background: var(--heo-card-bg);    border: var(--style-border-always);    box-shadow: var(--heo-shadow-border);  }}#article-container figure.highlight {  border-radius: 8px 8px 4px 4px;}#article-container figure.highlight .gutter pre {  color: var(--heo-secondtext);  background: var(--heo-secondbg);  border-right: var(--style-border-always);  padding-right: 0.5rem;  padding-left: 0.5rem;  text-align: right;}#article-container figure.highlight figcaption a {  color: #a9a9a9 !important;}#article-container .highlight:not(.js-file-line-container) {  background-color: var(--heo-card-bg) !important;  color: var(--heo-fontcolor);  border: var(--style-border-always);  overflow: hidden;}#article-container figure.highlight pre span::selection {  background: var(--heo-main) !important;  color: var(--heo-white) !important;}.OwO .OwO-body {  border: var(--style-border-always) !important;  border-radius: 8px !important;  overflow: hidden;  background-color: var(--heo-maskbg) !important;  backdrop-filter: saturate(180%) blur(10px);  -webkit-backdrop-filter: blur(10px);  transform: translateZ(0);}.OwO .OwO-body .OwO-bar {  border-top: none !important;}.OwO .OwO-body .OwO-items .OwO-item:hover {  box-shadow: var(--heo-shadow-lightblack) !important;  border-radius: 8px;}#twikoo  > div.tk-comments  > div.tk-submit  > div.tk-row.actions  > div  > div.tk-action-icon.OwO.OwO-open  > div.OwO-body  > div  > ul  > li  > span {  line-height: 48px;  font-size: 28px;}.OwO .OwO-body .OwO-bar .OwO-packages li {  margin-right: 0 !important;  width: 50px;  height: 48px;  transition: 0.3s;}.OwO .OwO-body .OwO-bar .OwO-packages li:hover {  transition: 0.3s;}.OwO-packages {  background: var(--heo-background);  padding-left: 8px !important;}.OwO .OwO-body .OwO-bar .OwO-packages .OwO-package-active {  background: var(--heo-secondbg) !important;}.OwO .OwO-body .OwO-items-show {  margin: 12px 8px !important;  min-height: 197px;}#page .category-lists .category-title {  display: none;}.article-sort-item-title {  line-height: 1.3;  -webkit-line-clamp: 1;}@media screen and (max-width: 768px) {  .article-sort-item-title {    -webkit-line-clamp: 2;  }}#page {  background: 0 0;  border: none;  padding: 0;}@media screen and (min-width: 1300px) {  #page > div:not(.author-content-item) {    animation: slide-in 0.6s 0.2s backwards;  }}.article-sort .article-sort-item .article-sort-item-img {  border-radius: 12px;  min-width: 151px;  min-height: 80px;  background: var(--heo-secondbg);  -webkit-mask-image: -webkit-radial-gradient(center, #fff, #000);}@media screen and (max-width: 768px) {  .article-sort .article-sort-item .article-sort-item-img {    min-width: 80px;  }}#post .tag_share .post-meta__tag-list {  display: flex;  padding: 0;  width: 100%;  flex-wrap: wrap;  flex-direction: row;}#post .tag_share .post-meta__tag-list a {  margin-bottom: 8px;  margin-right: 8px;}#page .tag-cloud-list a {  display: flex;  width: fit-content;  color: var(--heo-fontcolor) !important;  font-size: 1.4em !important;  padding: 0.2em 0.5em;  background: var(--heo-card-bg);  margin: 0.5em 0.5em;  border-radius: 12px;  -webkit-backface-visibility: hidden;  -webkit-transform-style: preserve-3d;  border: var(--style-border-always);  box-shadow: var(--heo-shadow-border);  align-items: center;}#page .tag-cloud-list a:hover {  background: var(--heo-main) !important;  box-shadow: var(--heo-shadow-blue);  color: var(--heo-white) !important;  border: var(--style-border-hover);}span.tagsPageCount {  background: var(--heo-secondbg);  padding: 4px 4px;  border-radius: 8px;  color: var(--heo-secondtext);  line-height: 1;  text-align: center;  min-width: 35px;  display: inline-block;  font-size: 1rem;  margin-left: 4px;}.category-lists span.tagsPageCount {  margin-left: 4px;}#page .tag-cloud-list a:hover span.tagsPageCount {  color: var(--heo-lighttext);}#post .tag_share .post-meta__tags span.tagsPageCount,#tag-page-tags .tagsPageCount {  padding: 2px;  background: var(--heo-card-bg);  border: var(--style-border-always);  min-width: 22.5px;  display: inline-block;  border-radius: 4px;  text-align: center;  font-size: 0.6rem;  color: var(--heo-fontcolor);  margin-left: 4px;}#tag #tag-page-tags a.select .tagsPageCount {  background: var(--heo-card-bg);  color: var(--heo-lighttext);}span.tags-punctuation {  margin-right: 2px;}span.tags-punctuation::before {  content: "\e045";  font-family: heofont !important;  font-size: 16px;  opacity: 0.4;}.hide-aside #page span.tags-punctuation::before {  font-size: 22px;}.recent-post-item span.tags-punctuation {  margin-right: 0;  font-size: 13px;}.category-lists span.tags-punctuation {  font-size: 18px;}.tags-name {  margin-left: 2px;}#article-container h1 {  padding-left: 0;}#article-container h1:before {  display: none;}#article-container h1:hover {  padding-left: 0;}#article-container > div > figure > figcaption > p {  margin: 0;}#page .category-lists ul li::before {  display: none;}#page .category-lists ul li {  margin: 0;  margin-right: 8px;  margin-bottom: 8px;}#page .category-lists ul {  display: flex;  padding: 0;  flex-wrap: wrap;  flex-direction: row;}#page .category-lists ul li {  padding: 4px 16px;  width: 200px;  border-radius: 12px;  background: var(--heo-card-bg);  border: var(--style-border-always);}figure.gallery-group {  border-radius: 12px;}figure.gallery-group:hover .gallery-group-name::after {  display: none;}.tag-cloud-title {  display: none;}.tk-replies .tk-content {  margin-top: 0 !important;}#tag #tag-page-tags {  display: flex;  flex-direction: row;  flex-wrap: wrap;  margin: 0 -0.25rem;  margin-bottom: 0.5rem;  position: absolute;  z-index: 1;  width: 100%;  padding: 1rem 2rem;  left: 0;  top: 0;  max-height: 64px;  overflow: hidden;  background: var(--heo-card-bg);  backdrop-filter: saturate(180%) blur(20px);  transition: 0.1s ease-out;}@media screen and (max-width: 768px) {  #tag #tag-page-tags {    display: none;  }}#tag #tag-page-tags:hover {  max-height: 1000px;  transition: 0.3s ease-out;  background: var(--heo-maskbgdeep);}#tag #tag-page-tags a {  padding: 0.1rem 0.5rem;  margin: 0.25rem 0.25rem;  line-height: 1.6;  border-radius: 8px;  color: var(--heo-fontcolor) !important;  border: var(--style-border-always);  display: flex;  align-items: center;  background: var(--heo-card-bg);}#tag #tag-page-tags a.select {  color: var(--heo-card-bg) !important;  background: var(--heo-theme);  box-shadow: var(--heo-shadow-theme);}#tag #tag-page-tags a:hover {  color: var(--heo-card-bg) !important;  background: var(--heo-theme);  box-shadow: var(--heo-shadow-theme);}.article-sort-item:before {  display: none;}.article-sort-title:before {  display: none;}.article-sort-title:after {  display: none;}.article-sort {  border: none;}.article-sort {  margin-left: 0;  padding-left: 0;}.article-sort-title {  margin-left: 0;  padding-bottom: 0;  padding-left: 0;  font-weight: 700;  font-size: 2em;}.article-sort-title sup {  margin-left: 4px;  font-size: 16px;  font-weight: 700;  opacity: 0.4;  top: -1em;}.article-sort-item {  margin: 0 0 1rem 0;  overflow: hidden;  border-radius: 12px;}@media screen and (max-width: 768px) {  .article-sort-item-info a {    white-space: inherit !important;  }}.article-sort-item.year {  font-size: 0.8rem;  color: var(--heo-secondtext);  margin-bottom: 0.2rem;}.article-sort-item-img img:hover {  transform: scale(1);}.article-sort-item-info {  padding: 0 0.8rem;  display: flex;  flex-direction: column;}.article-sort-item-time {  order: 1;  margin-top: 4px;  color: var(--heo-secondtext);}.article-sort-item-title {  order: 0;  font-weight: 700;}.article-sort-item-title:hover {  transform: translateX(0);  color: var(--heo-lighttext);}#random-post {  min-height: 32px;  background: var(--heo-card-bg);  border: var(--style-border-always);  box-shadow: var(--heo-shadow-border);  padding: 20px 30px;  border-radius: 12px;  margin-top: 8px;}.random-friends-post {  text-decoration: none;  border-bottom: 2px solid var(--heo-lighttext);  color: var(--heo-fontcolor);  font-weight: 700;  padding: 0 4px;}.random-friends-post:hover {  text-decoration: none;  border-bottom: 2px solid var(--heo-none);  color: var(--heo-card-bg);  background: var(--heo-lighttext);  border-radius: 4px;  box-shadow: var(--heo-shadow-main);}.random-post-start {  transition-duration: 0.3s;}.random-post-start:hover {  color: var(--heo-hovertext);}.cf-article-author:hover {  color: var(--heo-card-bg) !important;}.flink#article-container .flink-list {  padding: 0;  margin: 0.5rem -6px 1rem -6px;  overflow-x: hidden;}.flink#article-container .flink-desc {  margin: 0;  color: var(--heo-secondtext);}.flink#article-container .flink-list > .flink-list-item a .flink-item-desc {  white-space: normal;  padding: 5px 10px 16px 0;  color: var(--heo-fontcolor);  text-align: left;  height: 40px;  text-overflow: ellipsis;  opacity: 0.7;  display: -webkit-box;  overflow: hidden;  -webkit-box-orient: vertical;  -webkit-line-clamp: 2;}.flink#article-container  .flink-list  > .flink-list-item:hover  a  .flink-item-desc {  color: var(--heo-card-bg);}.flink-list-item .flink-item-info {  display: flex;  flex-direction: column;  justify-content: center;  width: calc(100% - 90px);  height: fit-content;}.flink-list-item:hover .flink-item-info {  min-width: calc(100% - 20px);}.flink#article-container .flink-list > .flink-list-item a .flink-item-name {  text-align: left;  font-size: 19px;  line-height: 20px;  color: var(--heo-fontcolor);}.flink#article-container  .flink-list  > .flink-list-item:hover  a  .flink-item-name {  color: var(--heo-card-bg) !important;}.flink#article-container .flink-list > .flink-list-item a {  display: flex;  border: none;  width: 100%;  height: 100%;  align-items: center;}.flink#article-container .flink-list > .flink-list-item a:hover {  background: 0 0;}.flink#article-container .flink-list > .flink-list-item a img {  border-radius: 32px;  margin: 15px 20px 15px 15px;  transition: 0.3s;  background: var(--heo-background);  min-width: 60px;  min-height: 60px;}.flink#article-container .flink-list > .flink-list-item:hover a img {  transition: 0.6s;  width: 0;  height: 0;  opacity: 0;  margin: 5px;  min-width: 0;  min-height: 0;}.flink#article-container .flink-list > .flink-list-item a span {  transition: 0.3s;}.flink#article-container  .flink-list  > .flink-list-item:hover  a  .flink-item-desc {  overflow: hidden;  width: 100%;}.flink#article-container .flink-list > .flink-list-item {  margin: 6px 6px;  transition: 0.3s;  border-radius: 12px;  transition-timing-function: ease-in-out;  position: relative;  width: calc(20% - 12px);  border: var(--style-border);  box-shadow: var(--heo-shadow-border);  background: var(--heo-card-bg);  display: flex;}.flink#article-container .flink-list > .flink-list-item:hover {  transform: scale(1);  background: var(--heo-lighttext);  border: var(--style-border-hover);  box-shadow: var(--heo-shadow-main);}.gallery-group figcaption p {  line-height: 1.5 !important;}.flink#article-container .site-card .info .title {  color: var(--heo-fontcolor);  text-align: left;}.flink#article-container .site-card:hover .info .title {  color: var(--heo-white);}.flink#article-container .site-card:hover .info {  height: 120px;}.flink#article-container .site-card .site-card-text {  display: flex;  flex-direction: column;  align-items: flex-start;}.flink#article-container .site-card .info .desc {  font-size: 0.7rem;  color: var(--heo-fontcolor);  opacity: 0.7;  transition: 0.3s;  text-align: left;}.flink#article-container .site-card:hover .info .desc {  color: var(--heo-white);}@media screen and (min-width: 768px) {  .flink#article-container .site-card:hover .info .desc {    -webkit-line-clamp: 4;  }  .flink#article-container .site-card:hover .info .desc {    transition: 0.3s;    color: var(--heo-white);    width: 100%;  }  .flink#article-container .site-card:hover .info {    background: var(--heo-theme);  }}.flink#article-container .site-card {  border: var(--style-border);  border-radius: 12px;  transition: 0.3s;  transition-timing-function: ease-in-out;  overflow: hidden;  height: 200px;  position: relative;  width: calc(100% / 7 - 16px);  background: var(--heo-card-bg);  box-shadow: var(--heo-shadow-border);}.site-card-tag {  position: absolute;  top: 0;  left: 0;  padding: 4px 8px;  background-color: var(--heo-blue);  box-shadow: var(--heo-shadow-blue);  color: var(--heo-white);  z-index: 1;  border-radius: 12px 0 12px 0;  transition: 0.3s;  font-size: 0.6rem;}.site-card-tag.vip {  overflow: hidden;}.发电 .site-card-tag {  display: none;}.flink-list-item.发电 a img {  border: var(--style-border-always);  border-color: var(--heo-purple);  border-width: 2px;}.flink#article-container  .flink-list  > .flink-list-item.发电  a  .flink-item-name {  color: var(--heo-purple);}.light {  cursor: pointer;  position: absolute;  top: 0;  width: 100px;  height: 50px;  background-image: -moz-linear-gradient(    0deg,    rgba(255, 255, 255, 0),    rgba(255, 255, 255, 0.5),    rgba(255, 255, 255, 0)  );  background-image: -webkit-linear-gradient(    0deg,    rgba(255, 255, 255, 0),    rgba(255, 255, 255, 0.5),    rgba(255, 255, 255, 0)  );  -webkit-animation: light_tag 4s both infinite;  -moz-animation: light_tag 4s both infinite;  -ms-animation: light_tag 4s both infinite;  animation: light_tag 4s both infinite;}@keyframes light_tag {  0% {    transform: skewx(0);    -o-transform: skewx(0);    -moz-transform: skewx(0);    -webkit-transform: skewx(0);    left: -150px;  }  99% {    transform: skewx(-25deg);    -o-transform: skewx(-25deg);    -moz-transform: skewx(-25deg);    -webkit-transform: skewx(-25deg);    left: 50px;  }}.生活 .site-card-tag {  background: var(--heo-green);  box-shadow: var(--heo-shadow-green);}.flink#article-container .site-card:hover .site-card-tag {  left: -50px;}.flink-list-item:hover .site-card-tag {  left: -70px;}.flink#article-container .site-card .info {  display: flex;  border: none;  padding: 0.5rem;  width: 100%;  height: 90px;  margin: 0;  border-radius: 0 0 12px 12px;}.flink#article-container .site-card .img img {  border-radius: 0;  transform: scale(1.03);  transition: 0.3s;  margin: 0;  max-width: 100%;}@media screen and (min-width: 769px) {  .flink#article-container .site-card:hover .img img {    transform: scale(1.1);    filter: brightness(0.3);  }  .flink#article-container .site-card:hover .img {    height: 80px;  }}#cf-more i {  font-style: normal;}#cf-more:hover {  background: var(--heo-lighttext) !important;  color: var(--heo-card-bg) !important;}.flink#article-container .site-card .img {  -webkit-mask-image: -webkit-radial-gradient(center, #fff, #000);  border-radius: 0;  height: 120px;  width: 100%;  display: flex;  border: none;  padding: 0 !important;}.flink#article-container .site-card .info img {  border-radius: 32px;  transition: 0.3s !important;  margin: 2px 8px 0 0;  width: 20px;  height: 20px;  min-width: 20px;  min-height: 20px;  background: var(--heo-secondbg);}.flink#article-container .site-card-group {  padding: 20px 0;}.flink#article-container .site-card:hover .info img {  width: 0;  height: 0;  opacity: 0;  min-width: 0;  min-height: 0;}.flink#article-container .site-card:hover {  border: var(--style-border-hover);  box-shadow: var(--heo-shadow-main);}.article-sort-item-info a {  margin-right: auto;  overflow: hidden;  text-overflow: ellipsis;}@media screen and (max-width: 768px) {  #letlink {    flex-direction: column !important;    text-align: center !important;  }  #letlogo {    display: none !important;  }  #footer-wrap {    margin-top: 1rem !important;  }}.footer-bar-right {  display: flex;  flex-direction: row;  flex-wrap: wrap;  align-items: center;}#footer-wrap {  display: flex;  flex-wrap: wrap;  justify-content: space-around;  padding: 20px 50px 0 50px;  text-align: left !important;  max-width: 1200px;  margin: 0 auto;}#footer-wrap h1 {  font-size: 1.5rem;  margin: 0;}#footer-wrap h3 {  padding: 0 12px;}#footer-wrap p {  margin: 0 0 0 0.2rem;  font-size: 0.8rem;  opacity: 0.8;}#footer-wrap i {  margin-right: 0.5rem;  width: 22px;  font-size: 18px;  display: inline-block;}#footer-wrap #letlogo {  display: flex;  flex-direction: column;  margin-right: 60px;  align-self: center;  margin: auto 0;  max-width: 200px;}#footer-wrap #letlink .link_group {  display: flex;  flex-direction: column;  margin-right: 20px;  min-width: 180px;}#footer-wrap #letlink {  display: flex;  flex-direction: row;  justify-content: space-around;  margin: 0 0 1rem 0;}#weblogo i {  font-size: 2rem;  line-height: 2rem;  letter-spacing: -10px;}#footer:before {  position: absolute !important;  width: 100% !important;  height: 100% !important;  content: "" !important;  z-index: -1;}div#heo-footer-bar {  display: none;}.post div#heo-footer-bar {  display: flex;  flex-direction: column;  align-items: center;  margin-top: 16px;}div#heo-footer-bar a.footer-bar-link {  padding: 4px 16px;  background: var(--heo-secondbg);  border-radius: 20px;  margin-top: 8px;  font-size: 14px;  cursor: pointer;  border: var(--style-border-always);}div#heo-footer-bar a.footer-bar-link:hover {  background: var(--heo-main);  color: var(--heo-white);  transform: scale(1.1);  border-color: var(--heo-main);}div#heo-footer-bar .footer-logo {  font-size: 24px;}div#heo-footer-bar .footer-bar-description {  color: var(--heo-secondtext);  font-weight: 700;}.weixin:hover::after {  transform: scale(1);  opacity: 1;}#error-wrap .error-content {  box-shadow: none !important;  border-radius: 12px;  background: var(--heo-card-bg) !important;}#body-wrap.error {  display: flex;  flex-direction: column;  justify-content: center;  align-items: center;  padding: 1rem;  padding-top: 50px;  position: relative;}#body-wrap.error .aside-list {  display: flex;  flex-direction: row;  flex-wrap: nowrap;  margin: 1rem;  max-width: 100%;}#body-wrap.error .aside-list .aside-list-group {  display: flex;  flex-direction: row;  flex-wrap: wrap;  max-width: 800px;  margin: 0 auto;  justify-content: space-between;}#body-wrap.error .aside-list .aside-list-item {  padding: 0.5rem 0;  width: 49%;}#body-wrap.error .aside-list .aside-list-item img {  width: 100%;  object-fit: cover;  border-radius: 12px;}#body-wrap.error .aside-list .aside-list-item .thumbnail {  overflow: hidden;  width: 100%;  height: 200px;  background: var(--heo-card-bg);  display: flex;}#body-wrap.error .aside-list .aside-list-item .content .title {  -webkit-line-clamp: 2;  overflow: hidden;  display: -webkit-box;  -webkit-box-orient: vertical;  line-height: 1.5;  justify-content: center;  align-items: flex-end;  align-content: center;  padding-top: 0.5rem;  font-size: 16px;  font-weight: 700;}#body-wrap.error .aside-list .aside-list-item .content time {  display: none;}@media screen and (max-width: 768px) {  #body-wrap.error {    padding-top: 0;  }  #body-wrap.error .aside-list {    margin: 0;  }  #body-wrap.error .aside-list .aside-list-item .thumbnail {    height: 100px;  }}#bber .timeline #waterfall {  opacity: 0;  transition: 0.3s;}#bber .timeline #waterfall.show {  opacity: 1;}#bber .timeline ul li.item {  position: relative;  width: 32%;  border: var(--style-border-always);  border-radius: 12px;  padding: 1rem;  padding-bottom: 0.5rem;  transition: 0.3s;  display: flex;  flex-direction: column;  flex-wrap: nowrap;  justify-content: space-between;  align-items: flex-start;  background: var(--heo-card-bg);  box-shadow: var(--heo-shadow-border);  margin-right: 2%;}#bber .timeline ul li.item hr {  display: flex;  position: relative;  margin: 8px 0;  border: 1px dashed var(--heo-theme-op);  width: 100%;}@media screen and (max-width: 768px) {  #bber .timeline ul li.item {    padding: 0;  }}#bber .timeline ul li.item:hover {  border: var(--style-border-hover);}#bber ul.list {  display: flex;  flex-direction: row;  flex-wrap: wrap;  justify-content: space-between;}#bber li.item {  display: flex;  flex-direction: column;  flex-wrap: nowrap;  align-items: flex-start;}@media screen and (max-width: 1300px) {  #bber .timeline ul li.item {    width: 49%;    margin-right: 1%;  }}@media screen and (max-width: 768px) {  #bber .timeline ul li.item {    width: 100%;    margin-right: 0;  }  #bber .timeline ul li.item {    padding: 16px 20px;  }}.timeline ul .list {  display: flex;  flex-direction: row;  flex-wrap: wrap;  justify-content: space-between;}.bb-info {  display: inline;  float: right;  line-height: 1;  color: var(--heo-secondtext);  margin-left: auto;  margin-bottom: 1rem;  margin-right: 0.5rem;}.bb-info:hover {  color: var(--heo-hovertext);}#bber {  margin-top: 1rem;  width: 100%;}#bber div.bber-content {  display: flex;  flex-direction: initial;  flex-wrap: wrap;  border-radius: 12px;  width: 100%;  height: 100%;}#bber > section > ul > li.item {  margin-bottom: 1rem;}#bber .bber-info {  display: flex;  align-items: center;}#bber .bber-info .fa-rectangles-mixed {  margin-right: 8px;}#bber .bber-content-link {  display: flex;  margin-left: 0.5rem;  color: var(--heo-secondtext);  font-size: 0.7rem;  align-items: center;  background-color: rgba(245, 108, 108, 0.13);  color: #f56c6c;  padding: 0 8px;  border-radius: 20px;}#bber .bber-content-link:hover {  background-color: var(--heo-lighttext);  color: var(--heo-card-bg);}#bber .bber-content-link i {  margin-right: 3px;  font-size: 16px;}#bber .bber-reply {  cursor: pointer;  margin: 0 4px;}#bber .bber-bottom {  display: flex;  justify-content: space-between;  width: 100%;  -webkit-user-select: none;}#bber .count {  color: var(--heo-secondtext);  font-size: 0.8rem;}#bber p {  margin: 0;}#bber .datafrom i {  margin-right: 4px;}#bber .bber-music {  width: 100%;  height: 90px;  margin: 0.5rem 0;  border-radius: 8px;  overflow: hidden;  border: var(--style-border-always);  background: var(--heo-secondbg);}#bber .aplayer {  margin: 0;}#bber .aplayer .aplayer-info .aplayer-music .aplayer-title {  font-size: 0.8rem;  font-weight: 700;  margin: 0;  color: var(--heo-black);}#bber .aplayer.aplayer-withlrc .aplayer-pic {  height: 82px;  width: 82px;  margin: 4px;  border-radius: 4px;}#bber .aplayer .aplayer-info .aplayer-music {  height: 23px;}#bber .aplayer .aplayer-info .aplayer-controller .aplayer-bar-wrap {  padding: 0;}#bber  .aplayer  .aplayer-info  .aplayer-controller  .aplayer-bar-wrap  .aplayer-bar {  background: var(--heo-gray);  height: 8px;  border-radius: 12px;  transition: 0.3s;  overflow: hidden;}#bber  .aplayer  .aplayer-info  .aplayer-controller  .aplayer-bar-wrap:hover  .aplayer-bar {  height: 12px;}#bber  .aplayer  .aplayer-info  .aplayer-controller  .aplayer-bar-wrap  .aplayer-bar  .aplayer-played {  height: 100%;  border-radius: 12px;}#bber  .aplayer  .aplayer-info  .aplayer-controller  .aplayer-bar-wrap  .aplayer-bar  .aplayer-loaded {  height: 100%;  border-radius: 12px;}#bber  .aplayer  .aplayer-info  .aplayer-controller  .aplayer-bar-wrap  .aplayer-bar  .aplayer-played  .aplayer-thumb {  display: none;}#bber .aplayer .aplayer-info .aplayer-controller {  align-items: center;}#bber .aplayer .aplayer-info .aplayer-controller .aplayer-time {  position: initial;}#bber .bber-music .aplayer-lrc {  display: none;}#bber-tips {  font-size: 14px;  display: flex;  justify-content: center;  margin-top: 1rem;}#bber .bber-content-img img {  object-fit: cover;  max-height: 100%;  border-radius: 12px;  min-height: 100px;  height: 100px;}#bber .bber-content-img {  height: 100px;  margin: auto;  margin-top: 0.2rem;  margin-bottom: 0.3rem;  margin-left: 0;  border-radius: 12px;  overflow: hidden;  display: flex;  position: relative;}#bber > section > ul > li > div .bber-info-time {  color: var(--heo-fontcolor);  font-size: 0.7rem;  background-color: var(--heo-gray-op);  padding: 0 8px;  border-radius: 20px;  cursor: default;  display: flex;  align-items: center;}#bber > section > ul > li > div .bber-info-time i {  margin-right: 8px;  font-size: 16px;}#bber .bber-content .datacont {  order: 0;  font-size: 0.8rem;  font-weight: 700;  color: var(--heo-fontcolor);  width: 100%;  line-height: 1.38;  border-radius: 12px;  margin-bottom: 0.5rem;  display: flex;  flex-direction: column;  text-align: left;}#bber > section > ul > li > div .datafrom {  order: 2;  color: var(--heo-secondtext);  font-size: 0.7rem;  margin-left: 8px;}#bber > section > ul > li > div .datafrom small {  font-size: 0.7rem;}.load-btn.button-load {  background: var(--heo-card-btn-bg);  color: var(--heo-fontcolor);  padding: 12px 12px;  margin: 1.5rem 0 0 0;  width: 100%;  text-align: center;  border-radius: 12px;  transition: 0.3s;  font-weight: 700;}.load-btn.button-load:hover {  background: var(--heo-blue);  color: var(--heo-white);  transition: 0.3s;  box-shadow: var(--heo-shadow-blue);}#cf-container a {  width: fit-content;}#hexo-circle-of-friends-root {  margin: 0 -8px;}.moments-list {  display: flex;  flex-direction: column;}.moments-list .article-sort-item-info {  display: flex;  flex-direction: column;}.article-sort-item-info-more {  display: flex;  font-size: 0.7rem;  margin-right: auto;}.friend_post_time {  margin-left: 8px;  color: var(--heo-secondtext);}.friendlink-avatar {  width: 3rem;  height: 3rem;  min-width: 3rem;  min-height: 3rem;  border-radius: 32px;  overflow: hidden;  background: var(--heo-secondbg);  padding: 0 !important;}.friendlink-avatar:hover {  border-radius: 32px !important;  background: var(--heo-secondbg);}.moments-list .article-sort-item-info .article-sort-item-title {  color: var(--heo-lighttext);}.moments-list .article-sort-item-info .article-sort-item-title:hover {  color: var(--heo-hovertext);}a.bb-link {  margin-left: 8px;  color: var(--heo-secondtext) !important;  display: inline;  border: none !important;}a.bb-link-info {  display: inline;  float: right;  border: none !important;  color: var(--heo-secondtext) !important;  line-height: 2.7rem;}a.bb-link-info:hover {  color: var(--heo-fontcolor) !important;  background: 0 0 !important;}#friend_link_moments {  border: none !important;}.moments-article-img {  height: 100%;  margin: 0 !important;}.tab-item-content #moments_container .moments-item a {  border-bottom: none;  padding: 0;  margin-right: auto;  width: auto;}.tab-item-content #moments_container .moments-item a:hover {  background: 0 0;  color: var(--heo-lighttext);  box-shadow: none;}.tab-item-content #moments_container h2 {  display: none;}#friend_moments_list .moments-sort-item {  margin: 1rem 0;}.moments-sort-item-img {  border-radius: 12px;}.moments-item-time {  order: 1;}.moments-sort-item-title {  color: var(--heo-lighttext);  border-bottom: none !important;  padding: 0 !important;}.moments-sort-item-title:hover {  color: var(--heo-hovertext) !important;  background: 0 0 !important;  box-shadow: none !important;}.friendlink-avatar {  border-bottom: none !important;}.moments_load_button {  color: var(--heo-fontcolor) !important;  background: var(--heo-card-btn-bg) !important;  padding: 12px 16px !important;  border-radius: 12px !important;  transition: 0.3s;  width: 100%;  margin-top: 1rem;  margin-bottom: 1rem;  border: 0 !important;}.moments_load_button:hover {  color: var(--heo-white) !important;  background: var(--heo-main) !important;  transition: 0.3s;}.moments-item-title {  color: var(--heo-lighttext);  font-size: 1rem;  order: 0;  width: 100%;  font-weight: 700;  -webkit-line-clamp: 1 !important;  overflow: hidden;  -webkit-box-orient: vertical;}.moments-item-info {  display: flex;  flex-direction: column;}.moments_post_time {  display: none;}.moments_post_time i {  margin-right: 8px;}.chart {  align-items: flex-start;  flex: 1;  width: 100px;  height: 60px;  margin: 20px;}.moments-item-title {  font-weight: 700;}.moments_post_info_number {  float: right;}@media screen and (max-width: 500px) {  #info_user_pool {    padding: 10px;    flex-direction: column;    max-height: 200px;  }  .chart {    flex: 0;    width: 100%;    height: 160px;    margin: 0;  }}.moments-item-img {  width: 60px !important;  height: 60px !important;}.moments-item-img img {  border-radius: 99px;  width: 80px;  height: 80px;  overflow: hidden;}#info_user_pool {  background: var(--heo-secondbg);  border-radius: 12px !important;  margin-top: 1rem;  box-shadow: none !important;}.moments-item {  margin-left: 0 !important;  box-shadow: none !important;}.hexo-douban-item {  border-bottom: none !important;  background: var(--heo-card-bg);  border: var(--style-border);  box-shadow: var(--heo-shadow-border);  border-radius: 12px;  margin: 8px 0;  height: 160px;  min-height: 160px !important;  width: 49%;  overflow: hidden;}@media screen and (min-width: 1300px) {  .hexo-douban-item {    width: 32%;  }}#hexo-douban-item3 {  display: flex;  flex-direction: row;  flex-wrap: wrap;  justify-content: space-between;}.hexo-douban-item .hexo-douban-picture a {  padding: 0 !important;}.hexo-douban-item .hexo-douban-picture img {  margin: 0 !important;  height: 100% !important;}.hexo-douban-tabs {  display: none;}.hexo-douban-title a {  border-bottom: 0 !important;}.hexo-douban-title {  overflow: hidden;  text-overflow: ellipsis;  white-space: nowrap;}.hexo-douban-title a:hover {  color: var(--heo-lighttext) !important;  background: var(--heo-none) !important;}.hexo-douban-pagination {  margin: auto;  width: 100%;  display: flex;  justify-content: center;  align-items: center;}span.hexo-douban-pagenum {  margin: 0 0.5rem;}.hexo-douban-title {  font-size: 1rem;  line-height: 1;}.hexo-douban-title a {  padding: 0 !important;}.hexo-douban-info {  padding-left: 130px !important;  margin-right: 0.5rem;}.hexo-douban-meta {  font-size: 0.7rem !important;  color: var(--heo-secondtext);  margin-top: 0.3rem;  line-height: 1.05;}.hexo-douban-comments {  line-height: 1.2;  margin-top: 0.5rem;  font-size: 0.8rem !important;  -webkit-line-clamp: 3;  overflow: hidden;  text-overflow: ellipsis;  display: -webkit-box;  -webkit-box-orient: vertical;}.hexo-douban-picture {  height: 100%;  top: 0 !important;  padding: 10px 0 10px 10px;}.hexo-douban-picture a img {  border-radius: 8px !important;}.hexo-douban-button {  width: 4rem;  height: 2rem;  line-height: 1.9rem;  border-radius: 8px !important;  background: var(--heo-card-bg);  box-shadow: var(--heo-shadow-lightblack);  border: var(--style-border);  margin: 0 0.2rem;  border-bottom: var(--style-border) !important;}.article-sort-item-time {  display: none;}.article-sort-item-tags {  margin-top: 8px;  white-space: nowrap;  overflow: hidden;  display: inline-block;  text-overflow: ellipsis;  width: 100%;  font-size: 0.7rem;}.article-sort-item-tags a {  color: var(--heo-fontcolor);  transition: 0.3s;}.article-sort-item-tags a:hover {  color: var(--heo-theme);  transition: 0.3s;}.article-sort-item-tags a .tags-punctuation {  font-size: 12px;  margin-right: 1px;}#heo-footer .footer-links {  display: flex;  flex-direction: column;}#heo-footer {  display: flex;  flex-direction: row;  width: 100%;  max-width: 1200px;  margin: 1rem auto;  justify-content: space-between;  flex-wrap: wrap;  margin-bottom: 3rem;  padding: 0 1rem;}#heo-footer .footer-item {  font-size: 0.8rem;  line-height: 0.8rem;  margin: 8px 0;  color: var(--heo-fontcolor);  margin-right: auto;  overflow: hidden;  white-space: nowrap;  text-overflow: ellipsis;  max-width: 120px;  cursor: pointer;  padding: 2px 0;}#heo-footer .footer-item:hover {  color: var(--heo-main);}#heo-footer .footer-group {  min-width: 120px;}#heo-footer .footer-title-group {  display: flex;  align-items: center;  margin: 1rem 0 0.7rem 0;}#heo-footer .footer-title-group a {  margin-left: 8px;}#heo-footer .footer-title-group i {  line-height: 1;  color: var(--heo-secondtext);  transition: 0.3s;  font-size: 16px;  opacity: 0.6;}#heo-footer .footer-title-group a:hover i {  color: var(--heo-main);  opacity: 1;}#heo-footer .footer-title-group .footer-title {  margin: 0;}#heo-footer .random-friends-btn {  display: flex;}#heo-footer .footer-title {  color: var(--heo-secondtext);  font-size: 0.8rem;}#footer-bar {  padding: 1rem;  color: var(--heo-fontcolor);  margin-top: 1rem;  background: var(--heo-secondbg);  display: flex;  overflow: hidden;  z-index: 1002;  transition: 0.3s;  border-top: var(--style-border-always);}#footer-bar .footer-bar-links {  display: flex;  justify-content: space-between;  max-width: 1400px;  width: 100%;  margin: 0 auto;  flex-wrap: wrap;  align-items: center;  line-height: 1;}#footer-bar .footer-bar-left {  display: flex;  flex-wrap: wrap;  min-height: 32px;  align-items: center;}#footer-bar .footer-bar-link {  margin-top: 8px;  margin-bottom: 8px;  margin-right: 1rem;  color: var(--heo-fontcolor);  font-size: 0.8rem;  font-weight: 700;  white-space: nowrap;}#footer-bar .footer-bar-link.cc {  margin-right: 0;}#footer-bar .footer-bar-link.cc i {  margin-right: 0.5rem;  font-size: 18px;}#footer-bar .footer-bar-link:hover {  color: var(--heo-theme);}#footer-bar > div > div.footer-bar-left > span {  margin-right: 1rem;}#footer-bar .footer-bar-right a:hover {  color: var(--heo-lighttext);}#footer_deal i {  font-size: 0.9rem;  line-height: 0.9rem;  height: 0.9rem;}.la-widget.la-data-widget__container {  border-radius: 12px;  border: var(--style-border) !important;  box-shadow: var(--heo-shadow-border);  border-color: var(--heo-card-border);}#about-page {  display: flex;  padding-top: 1rem;  flex-direction: column;  align-items: center;}@keyframes floating {  0% {    transform: translate(0, -4px);  }  50% {    transform: translate(0, 4px);  }  100% {    transform: translate(0, -4px);  }}#about-page .author-info {  display: flex;  align-items: center;  margin: 0 0 16px 0;}#about-page .author-tag-left {  display: flex;  flex-direction: column;  align-items: flex-end;}#about-page .author-tag-right {  display: flex;  flex-direction: column;  align-items: flex-start;}@media screen and (max-width: 768px) {  #about-page .author-tag-left,  #about-page .author-tag-right {    display: none;  }}#about-page .author-tag-left .author-tag:first-child,#about-page .author-tag-left .author-tag:last-child {  margin-right: -16px;}#about-page .author-tag-right .author-tag:first-child,#about-page .author-tag-right .author-tag:last-child {  margin-left: -16px;}#about-page .author-tag {  transform: translate(0, -4px);  padding: 1px 8px;  background: var(--heo-card-bg);  border: var(--style-border-always);  border-radius: 40px;  margin-top: 6px;  font-size: 14px;  font-weight: 700;  box-shadow: var(--heo-shadow-lightblack);  animation: 6s ease-in-out 0s infinite normal none running floating;}#about-page .author-tag:nth-child(1) {  animation-delay: 0s;}#about-page .author-tag:nth-child(2) {  animation-delay: 0.6s;}#about-page .author-tag:nth-child(3) {  animation-delay: 1.2s;}#about-page .author-tag:nth-child(4) {  animation-delay: 1.8s;}#about-page .author-img {  margin: 0 30px;  border-radius: 50%;  width: 180px;  height: 180px;  position: relative;  background: var(--heo-secondbg);  user-select: none;  transition: 0.3s;}#about-page .author-img #lottie_avatar {  border-radius: 200px;  overflow: hidden;  width: 180px;  height: 180px;}#about-page .author-img:hover {  transform: scale(1.1);}#about-page .author-img::before {  content: "";  -webkit-transition: 1s;  -moz-transition: 1s;  -o-transition: 1s;  -ms-transition: 1s;  transition: 1s;  width: 30px;  height: 30px;  background: var(--heo-green);  position: absolute;  border-radius: 50%;  border: 5px solid var(--heo-background);  bottom: 5px;  right: 10px;  z-index: 2;}@media screen and (max-width: 768px) {  #about-page .author-img {    width: 120px;    height: 120px;  }  #about-page .author-img #lottie_avatar {    width: 120px;    height: 120px;  }  #about-page .author-img::before {    bottom: -2px;    right: -2px;    width: 20px;    height: 20px;  }}#about-page .author-title {  font-size: 2rem;  font-weight: 700;  margin: 1rem 0;  line-height: 1;}.page-title {  display: none;}:root {  --offset: 0px;}.inline-word {  word-break: keep-all;  white-space: nowrap;}.author-content {  display: flex;  flex-wrap: wrap;  justify-content: space-between;  width: 100%;  margin-top: 1rem;}.author-content-item-group.column {  display: flex;  flex-direction: column;  width: 49%;  justify-content: space-between;}.author-content-item {  width: 49%;  border-radius: 24px;  background: var(--heo-card-bg);  border: var(--style-border-always);  box-shadow: var(--heo-shadow-border);  position: relative;  padding: 1rem 2rem;  overflow: hidden;}.author-content-item.single {  width: 100%;}.author-content-item .author-content-item-title {  font-size: 36px;  font-weight: 700;  line-height: 1;}.author-content-item .author-content-item-tips {  opacity: 0.8;  font-size: 0.6rem;  margin-bottom: 0.5rem;}@media screen and (max-width: 768px) {  .author-content-item {    width: 100% !important;    margin-top: 1rem;    padding: 1rem;  }  .author-content-item-group.column {    width: 100% !important;  }  .author-content {    margin-top: 0;  }}.card-background-icon {  font-size: 12rem;  opacity: 0.2;  position: absolute;  right: 0;  bottom: -40%;  transform: rotate(30deg);  transition: 2s ease-in-out;}.author-content-item:hover .card-background-icon {  transform: rotate(20deg);}#about-page .myInfoAndSayHello {  display: flex;  flex-direction: column;  justify-content: center;  color: var(--heo-white);  background: linear-gradient(120deg, #5b27ff 0, #00d4ff 100%);  background-size: 200%;  width: 59%;}#about-page .myInfoAndSayHello .title1 {  opacity: 0.8;  line-height: 1.3;}#about-page .myInfoAndSayHello .title2 {  font-size: 36px;  font-weight: 700;  line-height: 1.1;  margin: 0.5rem 0;}.author-content-item-group.column.mapAndInfo {  width: 59%;}.author-content-item.map {  background: url(https://bu.dusays.com/2023/03/12/640dc807140d0.png) no-repeat    center;  min-height: 160px;  max-height: 400px;  position: relative;  overflow: hidden;  margin-bottom: 0.5rem;  height: 60%;  background-size: 100%;  transition: 1s ease-in-out;}[data-theme="dark"] .author-content-item.map {  background: url(https://bu.dusays.com/2023/03/12/640dc8713d98a.webp) no-repeat    center;  background-size: 100%;}.author-content-item.map:hover {  background-size: 120%;  transition: 4s ease-in-out;  background-position-x: 0;  background-position-y: 36%;}.author-content-item.map .map-title {  position: absolute;  bottom: 0;  left: 0;  width: 100%;  background: var(--heo-maskbg);  padding: 0.5rem 2rem;  backdrop-filter: saturate(180%) blur(20px);  -webkit-backdrop-filter: blur(20px);  transition: 1s ease-in-out;  font-size: 20px;  transform: translateZ(0);}.author-content-item.map:hover .map-title {  bottom: -100%;}.author-content-item.map .map-title b {  color: var(--heo-fontcolor);}@media screen and (max-width: 768px) {  .author-content-item.map.myphoto {    background-size: cover !important;  }  .author-content-item.map .map-title {    padding: 1rem;  }}.author-content-item.selfInfo {  display: flex;  min-height: 100px;  max-height: 400px;  justify-content: space-between;  align-items: center;  flex-wrap: wrap;  height: -webkit-fill-available;  height: 40%;}@media screen and (max-width: 1300px) {  .author-content-item.selfInfo {    height: 70%;  }}.author-content-item.selfInfo div {  display: flex;  flex-direction: column;  margin: 0.5rem 2rem 0.5rem 0;}.author-content-item.selfInfo .selfInfo-title {  opacity: 0.8;  font-size: 0.6rem;  line-height: 1;  margin-bottom: 8px;}.author-content-item.selfInfo .selfInfo-content {  font-weight: 700;  font-size: 34px;  line-height: 1;}.author-content-item.myphoto {  height: 60%;  min-height: 240px;  position: relative;  overflow: hidden;  width: 39%;  display: flex;  align-items: center;  justify-content: center;}.author-content-item.myphoto img {  position: absolute;  height: 100%;  min-width: 100%;  object-fit: cover;  transition: 0.6s;  user-select: none;}.author-content-item.myphoto:hover img {  min-width: 105%;  transition: 2s;}.author-content-item.myphoto .myphoto-title {  position: absolute;  bottom: 0;  left: 0;  width: 100%;  background: var(--heo-maskbgdeep);  padding: 0.5rem 2rem;  backdrop-filter: saturate(180%) blur(20px);  -webkit-backdrop-filter: blur(20px);  transform: translateZ(0);}.author-content-item.careers {  min-height: 400px;}.author-content-item.careers img {  position: absolute;  left: 0;  bottom: 20px;  width: 100%;  transition: 0.6s;  user-select: none;}.author-content-item.careers .careers-group {  margin-top: 12px;}.author-content-item.careers .careers-item {  display: flex;  align-items: center;}.author-content-item.careers .careers-item .circle {  width: 16px;  height: 16px;  margin-right: 8px;  border-radius: 16px;}.author-content-item.careers .careers-item .name {  color: var(--heo-secondtext);}.author-content-item.personalities {  overflow: hidden;  position: relative;  width: 59%;}.author-content-item.personalities .title2 {  font-size: 36px;  font-weight: 700;  line-height: 1.1;}.author-content-item.personalities .image {  position: absolute;  right: -40px;  bottom: -10rem;  transition: transform 2s cubic-bezier(0.13, 0.45, 0.21, 1.02);  user-select: none;}.author-content-item.personalities:hover .image {  transform: rotate(-10deg);}@media screen and (max-width: 768px) {  .author-content-item.personalities {    min-height: 360px;  }  .author-content-item.personalities .image {    right: -70px;  }}.author-content-item.maxim {  font-size: 36px;  font-weight: 700;  line-height: 1.1;  display: flex;  align-items: flex-start;  flex-direction: column;  justify-content: center;  width: 39%;}.author-content-item.maxim .maxim-title {  display: flex;  flex-direction: column;}.author-content-item.maxim .title1 {  opacity: 0.8;  font-size: 0.6rem;  margin-bottom: 0.5rem;}.author-content-item.buff {  height: 200px;  font-size: 36px;  font-weight: 700;  line-height: 1.1;  display: flex;  align-items: flex-start;  flex-direction: column;  justify-content: center;  background: linear-gradient(120deg, #ff27e8 0, #ff8000 100%);  color: var(--heo-white);  background-size: 200%;  animation: gradient 15s ease infinite;  min-height: 200px;  height: fit-content;  width: 59%;}.author-content-item.buff .card-content {  display: flex;  flex-direction: column;  justify-content: center;}.author-content-item.buff .buff-title {  display: flex;  flex-direction: column;}.author-content-item.buff .title1 {  opacity: 0.8;  font-size: 0.6rem;  margin-bottom: 0.5rem;}.author-content-item.skills {  display: flex;  justify-content: center;  align-items: flex-start;  flex-direction: column;  width: 49%;  min-height: 450px;}.author-content-item.skills .tags-group-all {  display: flex;  transform: rotate(0);  transition: 0.3s;}.author-content-item.skills .tags-group-wrapper {  margin-top: 40px;  display: flex;  flex-wrap: nowrap;  animation: rowup 60s linear infinite;}.author-content-item.skills .skills-style-group {  position: relative;}.author-content-item.skills .skills-list {  display: flex;  opacity: 0;  transition: 0.3s;  position: absolute;  width: 100%;  top: 0;  left: 0;  flex-wrap: wrap;  flex-direction: row;  margin-top: 10px;}.author-content-item.skills:hover .skills-style-group .tags-group-all {  opacity: 0;}.author-content-item.skills:hover .skills-style-group .skills-list {  opacity: 1;}.author-content-item.skills .skill-info {  display: flex;  align-items: center;  margin-right: 10px;  margin-top: 10px;  background: var(--heo-background);  border-radius: 40px;  padding: 4px 12px 4px 8px;  border: var(--style-border);  box-shadow: var(--heo-shadow-border);}.author-content-item.skills .etc {  margin-right: 10px;  margin-top: 10px;}.author-content-item.skills .skill-icon {  width: 32px;  height: 32px;  border-radius: 32px;  display: flex;  align-items: center;  justify-content: center;  margin-right: 8px;  user-select: none;}.author-content-item.skills .skill-icon img {  width: 18px;  height: 18px;}.author-content-item.skills .skill-name {  font-weight: 700;  line-height: 1;}.author-content-item.aboutsiteTips {  display: flex;  justify-content: center;  align-items: flex-start;  flex-direction: column;  width: 39%;}.aboutsiteTips h2 {  margin-right: auto;  font-size: 36px;  font-family: Helvetica;  line-height: 1.06;  letter-spacing: -0.02em;  color: var(--heo-fontcolor);  margin-top: 0;}.aboutsiteTips .mask {  height: 36px;  position: relative;  overflow: hidden;  margin-top: 4px;}.aboutsiteTips .mask span {  display: block;  box-sizing: border-box;  position: absolute;  top: 36px;  padding-bottom: var(--offset);  background-size: 100% 100%;  -webkit-background-clip: text;  background-clip: text;  -webkit-text-fill-color: transparent;  background-repeat: no-repeat;}.aboutsiteTips .mask span[data-show] {  transform: translateY(-100%);  transition: 0.5s transform ease-in-out;}.aboutsiteTips .mask span[data-up] {  transform: translateY(-200%);  transition: 0.5s transform ease-in-out;}.aboutsiteTips .mask span:nth-child(1) {  background-image: linear-gradient(45deg, #0ecffe 50%, #07a6f1);}.aboutsiteTips .mask span:nth-child(2) {  background-image: linear-gradient(45deg, #18e198 50%, #0ec15d);}.aboutsiteTips .mask span:nth-child(3) {  background-image: linear-gradient(45deg, #8a7cfb 50%, #633e9c);}.aboutsiteTips .mask span:nth-child(4) {  background-image: linear-gradient(45deg, #fa7671 50%, #f45f7f);}@media screen and (max-width: 768px) {  .author-content-item.map {    margin-bottom: 0;  }}#about-page .about-statistic {  min-height: 380px;  width: 39%;  background: url(https://bu.dusays.com/2023/03/12/640dc8c72f623.webp) no-repeat    top;  background-size: cover;  color: var(--heo-white);  overflow: hidden;}#about-page .about-statistic::after {  box-shadow: 0 -159px 173px 71px #0f1114 inset;  position: absolute;  content: "";  width: 100%;  height: 100%;  top: 0;  left: 0;}#about-page .about-statistic .banner-button {  background: var(--heo-white-op);}#about-page .about-statistic .banner-button:hover {  background: var(--heo-lighttext);}#statistic {  font-size: 16px;  border-radius: 15px;  width: 100%;  color: var(--heo-white);  display: flex;  justify-content: space-between;  flex-direction: row;  flex-wrap: wrap;  margin-top: 1rem;  margin-bottom: 2rem;}#statistic div {  display: flex;  justify-content: space-between;  flex-direction: column;  width: 50%;  margin-bottom: 0.5rem;}#statistic div span:first-child {  opacity: 0.8;  font-size: 0.6rem;}#statistic div span:last-child {  font-weight: 700;  font-size: 34px;  line-height: 1;  white-space: nowrap;}.author-content-item.about-statistic  .card-content  .banner-button-group  .banner-button:hover {  background: #998c5a;  color: var(--heo-card-bg);}.author-content-item.single.reward  .author-content-item  .author-content-item-title {  color: var(--heo-red);}.author-content-item.single.reward .reward-list-all {  display: flex;  flex-wrap: wrap;  flex-direction: row;  margin-top: 1rem;  margin-bottom: 0.5rem;  margin-left: -0.25rem;  margin-right: -0.25rem;}.author-content-item.single.reward .reward-list-all .reward-list-item {  padding: 1rem;  border-radius: 12px;  border: var(--style-border-always);  width: calc((100% / 6) - 0.5rem);  margin: 0 0.25rem 0.5rem 0.25rem;  box-shadow: var(--heo-shadow-border);  flex-direction: column;  justify-content: space-between;}.reward-list-tips p {  font-size: 12px;  color: var(--heo-secondtext);}@media screen and (max-width: 1200px) {  .author-content-item.single.reward .reward-list-all .reward-list-item {    width: calc((100% / 4) - 0.5rem);  }}@media screen and (max-width: 900px) {  .author-content-item.single.reward .reward-list-all .reward-list-item {    width: calc((100% / 2) - 0.5rem);  }}@media screen and (max-width: 768px) {  .author-content-item.single.reward .reward-list-all .reward-list-item {    width: 100%;  }}.author-content-item.single.reward .author-content-item-description {  font-size: 16px;  margin-top: 0.5rem;}.author-content-item.single.reward  .reward-list-all  .reward-list-item  .reward-list-item-name {  font-size: 1rem;  font-weight: 700;  line-height: 1;  margin-bottom: 0.5rem;  white-space: nowrap;  overflow: hidden;  text-overflow: ellipsis;}.author-content-item.single.reward  .reward-list-all  .reward-list-item  .reward-list-bottom-group {  display: flex;  align-items: center;  justify-content: space-between;}.author-content-item.single.reward  .reward-list-all  .reward-list-item  .reward-list-item-money {  padding: 4px;  background: var(--heo-fontcolor);  color: var(--heo-card-bg);  font-size: 12px;  line-height: 1;  border-radius: 4px;  margin-right: 4px;  white-space: nowrap;}.author-content-item.single.reward  .reward-list-all  .reward-list-item  .reward-list-item-time {  font-size: 12px;  color: var(--heo-secondtext);  white-space: nowrap;}.author-content-item.single.reward .reward-list-updateDate {  color: var(--heo-gray);  font-size: 14px;}.author-content-item.single.reward .post-reward {  position: absolute;  right: 2rem;  top: 2rem;}.author-content-item.single.reward .post-reward .reward-button {  padding: 8px 12px;  background: var(--heo-red);  border-radius: 12px;  color: var(--heo-white);  display: flex;  align-items: center;  z-index: 1;  transition: 0.3s;  cursor: pointer;  box-shadow: none;  width: fit-content;  height: fit-content;  line-height: 2;  user-select: none;}.author-content-item.single.reward .post-reward:hover .reward-button {  filter: brightness(1.1);}@media screen and (max-width: 768px) {  .author-content-item.single.reward .post-reward .reward-button {    display: none;  }}.author-content-item.single.reward .post-reward .reward-button i {  margin-right: 8px;  font-size: 1rem;}.author-content-item.single.reward .post-reward .reward-main {  top: 60px;  right: 0;  left: auto;  bottom: auto;  width: fit-content;  box-shadow: var(--heo-shadow-border);}.author-content-item.single.reward  .post-reward  .reward-main  .reward-all::before {  bottom: auto;  top: -16px;}.author-content-item.single.reward a.reward-main-btn {  display: none;}.author-content-item.game-lol {  background: url(https://bu.dusays.com/2023/03/12/640dc7d294f69.png) no-repeat    top;  background-size: cover;  min-height: 300px;  overflow: hidden;  color: var(--heo-white);  width: 59%;}.author-content-item .card-content {  position: absolute;  width: 100%;  height: 100%;  top: 0;  left: 0;  z-index: 2;  display: flex;  flex-direction: column;  padding: 1rem 2rem;}@media screen and (max-width: 768px) {  .author-content-item .card-content {    padding: 1rem;  }}@media screen and (min-width: 1300px) {  .author-content-item {    animation: slide-in 0.6s 0s backwards;  }}.author-content-item.game-lol::after {  box-shadow: 0 -69px 203px 11px #04120f inset;  position: absolute;  content: "";  width: 100%;  height: 100%;  top: 0;  left: 0;}video.author-content-video {  position: absolute;  width: 100%;  top: 0;  left: 0;  z-index: -1;}.author-content-item .content-bottom {  margin-top: auto;  display: flex;  align-items: center;  justify-content: space-between;}.author-content-item .content-bottom .icon-group {  display: flex;}.author-content-item .content-bottom .icon-group i {  display: inline-block;  width: 22px;  height: 18px;  margin-right: 0.5rem;}.icon-pos-sup {  background: url(https://bu.dusays.com/2023/03/12/640dc913ee26b.webp);}.icon-pos-mid {  background: url(https://bu.dusays.com/2023/03/12/640dc931a2cd4.webp);}.author-content-item.game-wolf {  width: 39%;  background: url(https://bu.dusays.com/2023/03/12/640dc67e55bf0.png) no-repeat    top;  background-size: cover;  min-height: 300px;  overflow: hidden;  color: var(--heo-white);}.author-content-item.game-wolf::after {  box-shadow: 0 -69px 203px 11px #415dc9 inset;  position: absolute;  content: "";  width: 100%;  height: 100%;  top: 0;  left: 0;}.author-content-item.like-technology {  background: url(https://bu.dusays.com/2023/03/12/640dc69d4cf22.png) no-repeat;  background-size: cover;  min-height: 230px;  color: var(--heo-white);}.author-content-item.like-technology::after {  box-shadow: 0 -69px 203px 11px #050b20 inset;  position: absolute;  content: "";  width: 100%;  height: 100%;  top: 0;  left: 0;}.author-content-item.like-music {  background: url(https://bu.dusays.com/2023/03/12/640dc6bed6d2d.jpg) no-repeat    top;  background-size: cover;  min-height: 400px;  color: var(--heo-white);  overflow: hidden;}.author-content-item.like-music::after {  box-shadow: 0 -69px 203px 11px #0e0e0e inset;  position: absolute;  content: "";  width: 100%;  height: 100%;  top: 0;  left: 0;}.author-content-item .card-content .author-content-item-title {  margin-bottom: 0.5rem;}.author-content-item .card-content .banner-button-group {  position: absolute;  bottom: 1.5rem;  right: 2rem;}.author-content-item .card-content .banner-button-group .banner-button {  height: 40px;  width: 118px;  border-radius: 20px;  justify-content: center;  background: var(--heo-black-op);  color: var(--heo-white);  display: flex;  align-items: center;  z-index: 1;  transition: 0.3s;  cursor: pointer;  backdrop-filter: saturate(180%) blur(20px);  -webkit-backdrop-filter: blur(20px);  transform: translateZ(0);}.author-content-item .card-content .banner-button-group .banner-button:hover {  background: var(--heo-lighttext);  color: var(--heo-card-bg);}.author-content-item .card-content .banner-button-group .banner-button i {  margin-right: 8px;  font-size: 22px;}@media screen and (max-width: 768px) {  .author-content-item .card-content .banner-button-group {    right: 1rem;    bottom: 1rem;  }  .author-content-item .card-content .banner-button-group .banner-button {    background: 0 0;    color: var(--heo-white);    padding: 0;    width: fit-content;  }  .author-content-item .card-content .banner-button-group .banner-button i {    margin-right: 0;    font-size: 1.5rem;  }  .author-content-item .card-content .banner-button-group .banner-button-text {    display: none;  }}.author-content-item.single.like-movie {  height: 19rem;  background: url(https://p.zhheo.com/202391f23ec6a5aea2a7ca8bd5ad79d0e9b5082502.png!cover)    no-repeat top;  background-size: cover;  color: var(--heo-white);  overflow: hidden;}.author-content-item.single.like-movie::after {  box-shadow: 0 21px 133px 81px #1c1c1c inset;  position: absolute;  content: "";  width: 100%;  height: 100%;  top: 0;  left: 0;}#article-container  .author-content-item.single.like-movie  .banner-button-group  .banner-button {  padding: 8px 12px;  background: var(--heo-white);  border-radius: 12px;  color: var(--heo-black);  display: flex;  align-items: center;  z-index: 1;  transition: 0.3s;  cursor: pointer;  border: none;}#article-container  .author-content-item.single.like-movie  .banner-button-group  .banner-button:hover {  background: #d0b247;  color: var(--heo-white);}#article-container  .author-content-item.single.like-movie  .banner-button-group  .banner-button  i {  margin-right: 8px;  font-size: 1rem;}@media screen and (max-width: 768px) {  #article-container    .author-content-item.single.like-movie    .banner-button-group {    right: 1rem;    bottom: 1rem;  }  #article-container    .author-content-item.single.like-movie    .banner-button-group    .banner-button {    background: 0 0;    color: var(--heo-white);    padding: 0;  }  #article-container    .author-content-item.single.like-movie    .banner-button-group    .banner-button    i {    margin-right: 0;    font-size: 1.5rem;  }  #article-container    .author-content-item.single.like-movie    .banner-button-group    .banner-button-text {    display: none;  }}.author-content.author-content-item.toolPage {  height: 19rem;  background: url(https://p.zhheo.com/2023331f5bb47c063ef770c13ed9d1c2912b083802.png!cover)    no-repeat top;  background-size: cover;  color: var(--heo-white);  overflow: hidden;  margin-top: 0;}.author-content.author-content-item.momentsPage {  height: 19rem;  background: url(https://p.zhheo.com/20234860bdbab0f500c3b0e0f1a21d3c166e081002.png!cover)    no-repeat top;  background-size: cover;  color: var(--heo-white);  overflow: hidden;  margin-top: 0;}.author-content.author-content-item.essayPage {  height: 19rem;  background: url(https://p.zhheo.com/2023e02cff7c3ddef5c06b908fef079fbcfe081902.png!cover)    no-repeat center;  background-size: cover;  color: var(--heo-white);  overflow: hidden;  margin-top: 0;}.author-content.author-content-item.equipment {  height: 19rem;  background: url(https://p.zhheo.com/kPJnWT22990681686042509223.png!cover)    no-repeat top;  background-size: cover;  color: var(--heo-white);  overflow: hidden;  margin-top: 0;}#console {  display: flex;  position: fixed;  width: 100vw;  height: 100vh;  top: 0;  left: 0;  z-index: 9999;  justify-content: center;  opacity: 0;  transition: 0.3s ease-out;  flex-direction: column;  align-items: center;  pointer-events: none;  -webkit-user-select: none;}#console.show {  opacity: 1;  pointer-events: all;}#console .console-card-group {  display: flex;  justify-content: space-between;  align-items: center;  margin: 0 30px;  max-width: 2000px;  transform: translateY(20px);  transition: 0.3s;  opacity: 0;  max-width: 1400px;}#console.show .console-card-group {  transform: translateY(0);  opacity: 1;  transition-delay: 0.1s;}#console .console-card-group-left {  margin-right: 0.5rem;  width: 40%;  height: 100%;}#console .console-card-group-right {  display: flex;  flex-direction: column;  justify-content: center;  height: 100%;  width: 60%;  overflow: hidden;}@media screen and (max-width: 1300px) {  #console .console-card-group {    justify-content: center;  }  #console .console-card-group-left {    display: none;  }  #console .console-card-group-right {    width: 100%;    margin: 0;  }  #consoleMusic {    display: none;  }  #consoleCommentBarrage {    display: none;  }}@media screen and (max-width: 768px) {  #console .console-card-group {    display: none;  }  #consoleHideAside {    display: none;  }}@media screen and (max-height: 800px) {  #console .console-card-group {    display: none;  }  #consoleMusic {    display: none;  }  #consoleCommentBarrage {    display: none;  }}#console .console-card {  background: var(--heo-maskbg);  border-radius: 12px;  overflow: hidden;  border: var(--style-border);  box-shadow: var(--heo-shadow-border);  padding: 40px;}#console .console-card.tags {  height: calc(100% - 172px);}#console .console-mask {  background: var(--heo-maskbgdeep);  backdrop-filter: saturate(180%) blur(20px);  -webkit-backdrop-filter: blur(20px);  width: 100vw;  height: 100vh;  top: 0;  left: 0;  position: absolute;  z-index: -1;  -webkit-backface-visibility: hidden;  -webkit-transform-style: preserve-3d;  transform: translateZ(0);}#console.show .console-mask {  backdrop-filter: saturate(180%) blur(20px);  -webkit-backdrop-filter: blur(20px);  transform: translateZ(0);  animation: 0.6s ease 0s 1 normal none running to_show;}#card-newest-comments .aside-list-item .thumbnail img {  width: 20px;  height: 20px;  margin-right: 8px;  border-radius: 20px;}#card-newest-comments .aside-list-item {  background: var(--heo-card-bg);  border-radius: 12px;  border: var(--style-border);  padding: 12px 16px;  width: 49%;  display: flex;  flex-direction: column;  height: 150px;  transition: 0.3s;  position: relative;}#card-newest-comments .aside-list-item:hover {  background: var(--heo-main);  color: var(--heo-white);}#card-newest-comments .aside-list-item:not(:last-child) {  margin-bottom: 0.5rem;}#card-newest-comments .aside-list-item .name {  text-overflow: ellipsis;  overflow: hidden;  white-space: nowrap;  font-weight: 700;}#console .author-content-item-tips {  opacity: 0.8;  font-size: 0.6rem;  margin-bottom: 0.5rem;}#console .author-content-item-title {  font-size: 36px;  font-weight: 700;  line-height: 1;}#console .aside-list-item .thumbnail {  display: flex;  align-items: center;}#console .aside-list-item:hover .thumbnail {  color: var(--heo-white);}#console .aside-list-item .content {  display: flex;  flex-direction: column;  height: 100%;  margin-top: 0.5rem;}#console .aside-list-item .content .comment {  -webkit-line-clamp: 2;  display: -webkit-box;  overflow: hidden;  -webkit-box-orient: vertical;  line-height: 24px;  font-size: 14px;}#console .aside-list-item .content .comment::before {  content: "";  width: 100%;  height: 100%;  position: absolute;  top: 0;  left: 0;}#console .aside-list-item:hover .content .comment {  color: var(--heo-card-bg);}#console .aside-list-item .content time {  font-size: 12px;  color: var(--heo-card-bg);  margin-top: auto;}#console .aside-list-item:hover .content time {  color: var(--heo-card-bg);}#card-newest-comments .aside-list-item:hover .name {  color: var(--heo-card-bg);}#console .aside-list {  display: flex;  flex-wrap: wrap;  flex-direction: row;  justify-content: space-between;  margin-top: 1.5rem;}#console .button-group {  display: flex;  margin: 1rem auto 0 auto;  justify-content: center;  width: fit-content;}#console .button-group .console-btn-item {  width: 60px;  height: 60px;  transition: 0.3s;  cursor: pointer;}#console .button-group .console-btn-item:not(:last-child) {  margin-right: 0.5rem;}#console .button-group .console-btn-item:hover a {  background: var(--heo-main);}#console .button-group .console-btn-item a {  width: 100%;  height: 100%;  background: var(--heo-card-bg);  border: var(--style-border);  border-radius: 60px;  display: flex;  align-items: center;  justify-content: center;  color: var(--heo-fontcolor);}#console .button-group .console-btn-item a i {  font-size: 24px;}#console .button-group .console-btn-item.on a {  background: var(--heo-orange);  color: var(--heo-white);  transition: 0.3s;}#console .button-group .console-btn-item:not(.on) a:hover {  background: var(--heo-main) !important;  color: var(--heo-card-bg) !important;}#console .button-group .console-btn-item:hover a {  color: var(--heo-white);}.console-card.tags .card-tag-cloud {  margin-top: 1.5rem;  display: flex;  flex-wrap: wrap;}.console-card.tags .card-tag-cloud a {  color: var(--heo-fontcolor) !important;  margin: 6px 4px;  padding: 2px 8px;  border-radius: 8px;  background: var(--heo-card-bg);  border: var(--style-border);  font-size: 14px !important;  font-weight: 700;}.console-card.tags .card-tag-cloud a:hover {  background: var(--heo-lighttext);  color: var(--heo-card-bg) !important;}.console-card.tags .card-tag-cloud a sup {  opacity: 0.6;}#console .close-btn {  width: 100%;  height: 60px;  position: fixed;  right: max(0, calc((100% - 1400px) / 2));  top: 0;  font-size: 35px;  color: var(--heo-fontcolor);  cursor: pointer;  transition: 0.3s;  display: flex;  align-items: center;  justify-content: center;  max-width: 1400px;}#console .close-btn i {  font-size: 32px;  margin-right: 1.5rem;  margin-left: auto;  transition: 0.3s;  line-height: 1;  transform: rotate(-30deg);  transition: 0.6s;}#console.show .close-btn i {  transform: rotate(0);}#console .close-btn i:hover {  color: var(--heo-lighttext);  background: var(--heo-main-op);  border-radius: 32px;}#console .console-card.history {  margin-top: 8px;  padding: 0;  background: 0 0;  box-shadow: none;  border: none;  overflow: hidden;  border-radius: 0;}#console .console-card.history .item-headline {  display: none;}#console .console-card.history .card-archive-list {  display: flex;  flex-direction: row;  justify-content: space-between;  flex-wrap: wrap;  height: 164px;}#console .console-card.history .card-archive-list li.card-archive-list-item {  flex: 0 0 24%;}#console .console-card.history .card-archive-list .card-archive-list-link {  border-radius: 8px;  margin-top: 8px;  display: flex;  flex-direction: column;  align-content: space-between;  border: var(--style-border);  background: var(--heo-maskbgdeep);  padding: 8px 16px;}#console  .console-card.history  .card-archive-list  .card-archive-list-link:hover {  background: var(--heo-main);  color: var(--heo-card-bg);}#console #card-newest-comments {  height: 100%;}#console .button-group i {  font-size: 1rem;}#keyboard-tips {  position: fixed;  top: 80px;  left: 20px;  z-index: 999;  background: var(--heo-maskbgdeep);  border-radius: 12px;  border: var(--style-border);  padding: 20px;  display: flex;  flex-direction: column;  backdrop-filter: saturate(180%) blur(20px);  -webkit-backdrop-filter: blur(20px);  transform: translateZ(0);  pointer-events: none;  box-shadow: var(--heo-shadow-border);  opacity: 0;  transition: 0.3s;}#keyboard-tips.show {  opacity: 1;  transition: 0.1s;}#keyboard-tips .keybordList {  display: flex;  flex-direction: column;  margin-top: 8px;}#keyboard-tips .keyboardTitle {  font-size: 12px;  color: var(--heo-secondtext);  line-height: 1;}#keyboard-tips .keybordItem {  display: flex;  margin-top: 4px;}#keyboard-tips .keyGroup {  display: flex;  align-items: center;  width: 90px;}#keyboard-tips .keyGroup .key {  padding: 0.2em 0.4em;  font-family: inherit;  background-color: var(--heo-card-bg);  color: var(--heo-fontcolor);  border: var(--style-border);  border-color: var(--heo-secondtext);  border-bottom: 2px solid var(--heo-secondtext);  box-shadow: var(--heo-shadow-border);  border-radius: 0.25rem;  overflow-wrap: break-word;  overflow-x: auto;  font-weight: 500;  font-size: 0.875em;  margin-right: 4px;  vertical-align: baseline;  line-height: 1;  height: 24px;}@media screen and (min-width: 768px) {  .needEndHide.hide {    bottom: -200px !important;    opacity: 0;  }}.rss-plan-list {  display: flex;  width: 100%;  flex-direction: row;  flex-wrap: wrap;  margin: 0 -4px;  position: relative;}.rss-plan-item.rss-plan-wechat {  background: #27c125;  overflow: hidden;}.rss-plan-item.rss-plan-mail {  background: var(--heo-blue);}.rss-plan-item.rss-plan-rss {  background: var(--heo-orange);}.rss-plan-item {  border-radius: 12px;  display: flex;  flex-direction: column;  justify-content: space-between;  min-width: 240px;  height: 240px;  margin: 4px auto;  overflow: hidden;  text-decoration: none;  width: calc(100% / 3 - 8px);  filter: brightness(1);  transition: 0.3s;}.rss-plan-item:hover {  filter: brightness(1.1);}@media screen and (max-width: 1024px) {  .rss-plan-item {    width: calc(100% / 2 - 4px);  }  .rss-plan-item:first-child {    width: 100%;  }}@media screen and (max-width: 768px) {  .rss-plan-item {    width: 100%;  }}.rss-plan-item:visited {  color: var(--heo-white);}.rss-plan-description {  font-size: 16px;  color: var(--heo-white);  margin: 26px 0 0 30px;  line-height: 20px;}img.rss-plan-icon {  position: absolute;  bottom: -50px;  right: -20px;  height: 140px;  user-select: none;  -webkit-user-drag: none;  transition: all 1.2s cubic-bezier(0.39, 0.575, 0.565, 1);  transform-origin: bottom right;  filter: blur(8px);  opacity: 0.6;}.rss-plan-item:hover img.rss-plan-icon {  bottom: -40px;  right: -10px;  filter: blur(0);  opacity: 1;}.rss-plan-info-group {  position: relative;  margin: 0 0 26px 30px;  color: var(--heo-white);}.rss-plan-title {  font-size: 36px;  font-weight: 700;  width: fit-content;  line-height: 1;}.rss-plan-info {  width: fit-content;  opacity: 0.6;}.pagination input {  width: 40px;  height: 40px;  border-radius: 8px;  border: var(--style-border-always);  transition: 0.3s;  outline-style: none;  font-size: 16px;  padding-left: 12px;  background: var(--heo-secondbg);  color: var(--heo-fontcolor);}.pagination .toPageGroup input:focus,.pagination .toPageGroup:hover input {  border: var(--style-border-hover-always);  outline-style: none;  width: 100px;}.toPageGroup {  display: flex;  position: relative;  margin: 0 0.3rem;}a#toPageButton {  display: flex;  position: absolute;  width: 40px;  height: 40px;  right: 0;  top: 0;  border-radius: 8px;  justify-content: center;  align-items: center;  transition: 0.3s;  background: var(--heo-card-bg);  border: var(--style-border-always);  cursor: text;  pointer-events: none;}.toPageGroup:focus-within a#toPageButton,.toPageGroup:hover a#toPageButton {  width: 30px;  height: 30px;  right: 4px;  top: 5px;  background: var(--heo-card-bg);  border: 1px solid var(--heo-none);  border-radius: 4px;  opacity: 0.2;}.toPageGroup:focus-within a#toPageButton.haveValue {  opacity: 1;  cursor: pointer;}a#toPageButton.haveValue {  opacity: 1 !important;  cursor: pointer !important;  pointer-events: all;}a#toPageButton.haveValue:hover {  background: var(--heo-theme);  color: var(--heo-card-bg);}@media screen and (max-width: 768px) {  .toPageGroup {    display: none;  }}#post amp-ad {  display: flex;}#post amp-ad div {  display: flex;}@media screen and (max-width: 768px) {  .highlight .code pre .line {    font-size: 12px;  }  .highlight .code pre .line span {    font-size: 8px;  }}.equipment-item-content {  display: flex;  flex-direction: row;  flex-wrap: wrap;  margin: 0 -8px;}.equipment-item-content-item {  width: calc(25% - 12px);  border-radius: 12px;  border: var(--style-border-always);  overflow: hidden;  margin: 8px 6px;  background: var(--heo-card-bg);  box-shadow: var(--heo-shadow-border);  min-height: 400px;  position: relative;}@media screen and (max-width: 1200px) {  .equipment-item-content-item {    width: calc(50% - 12px);  }}@media screen and (max-width: 768px) {  .equipment-item-content-item {    width: 100%;  }}.equipment-item-content-item-info {  padding: 8px 16px 16px 16px;  margin-top: 12px;}.equipment-item-content-item-name {  font-size: 18px;  font-weight: 700;  line-height: 1;  margin-bottom: 8px;  white-space: nowrap;  overflow: hidden;  text-overflow: ellipsis;  cursor: pointer;  width: fit-content;}.equipment-item-content-item-name:hover {  color: var(--heo-main);}.equipment-item-content-item-specification {  font-size: 12px;  color: var(--heo-secondtext);  line-height: 1;  margin-bottom: 12px;  white-space: nowrap;  overflow: hidden;  text-overflow: ellipsis;}.equipment-item-content-item-description {  line-height: 20px;  color: var(--heo-secondtext);  height: 60px;  display: -webkit-box;  overflow: hidden;  -webkit-line-clamp: 3;  -webkit-box-orient: vertical;  font-size: 14px;}a.equipment-item-content-item-link {  font-size: 12px;  background: var(--heo-gray-op);  padding: 4px 8px;  border-radius: 8px;  cursor: pointer;}a.equipment-item-content-item-link:hover {  background: var(--heo-lighttext);  color: var(--heo-card-bg);}h2.equipment-item-title {  line-height: 1;}.equipment-item-description {  line-height: 1;  margin: 4px 0 8px 0;  color: var(--heo-secondtext);}.equipment-item-content-item-cover {  width: 100%;  height: 200px;  background: var(--heo-secondbg);  display: flex;  justify-content: center;}img.equipment-item-content-item-image {  object-fit: cover;  height: 100%;}div#equipment {  margin-top: 26px;}.equipment-item-content-item-toolbar {  display: flex;  justify-content: space-between;  position: absolute;  bottom: 12px;  left: 0;  width: 100%;  padding: 0 16px;}a.bber-reply {  cursor: pointer;}.cf-article .cf-img-avatar {  border-radius: 50% !important;  right: -30px !important;  bottom: -30px !important;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>即刻短文</title>
      <link href="/essay/index.html"/>
      <url>/essay/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/blogex.js"/>
      <url>/js/blogex.js</url>
      
        <content type="html"><![CDATA[function checkOpen() {}function addStylesheetRule(e) {  document.styleSheets[0].addRule(":root", e);  // document.styleSheets[0].insertRule(":root", e);}function handleStyles(e) {  "light" == getContrastYIQ(e) && (e = LightenDarkenColor(colorHex(e), -50)),    addStylesheetRule(`--xingzhi-main:${e}!important`),    addStylesheetRule(`--xingzhi-main-op:${e}23!important`),    addStylesheetRule(`--xingzhi-main-op-deep:${e}dd!important`),    addStylesheetRule(`--xingzhi-main-op-light:${e}0d!important`),    addStylesheetRule(`--xingzhi-main-none:${e}00!important`),    xingzhi.initThemeColor(),    document.getElementById("coverdiv").classList.add("loaded");}function handleDefaultStyles() {  addStylesheetRule("--xingzhi-main: var(--xingzhi-theme)!important"),    addStylesheetRule("--xingzhi-main-op: var(--xingzhi-theme-op)!important"),    addStylesheetRule(      "--xingzhi-main-op-deep:var(--xingzhi-theme-op-deep)!important"    ),    addStylesheetRule(      "--xingzhi-main-op-light:var(--xingzhi-theme-op-light)!important"    ),    addStylesheetRule(      "--xingzhi-main-none: var(--xingzhi-theme-none)!important"    ),    xingzhi.initThemeColor();}async function coverColor() {  const e = document.getElementById("post-cover")?.src;  const colorThief = new ColorThief();  if (e)    try {      // const t = await fetch(e);      // if (t.ok) {      //   const blob = await t.blob();      //   const img = new Image();      //   img.src = URL.createObjectURL(blob);      //   img.onload = () => {      //     const dominantColor = colorThief.getColor(img);      //     handleStyles("#" + dominantColor.slice(2));      //   };      //   // handleStyles("#" + (await t.json()).RGB.slice(2));      // }    } catch (e) {      console.error("Failed to fetch the image", e);    }  else handleDefaultStyles();}function rgbToHex(rgbArray) {  if (rgbArray.length !== 3) {    throw new Error("Invalid RGB array. It should be an array of length 3.");  }  var r = rgbArray[0].toString(16);  var g = rgbArray[1].toString(16);  // var b = rgbArray[2].toString(16);  if (r.length < 2) {    r = "0" + r;  }  if (g.length < 2) {    g = "0" + g;  }  // if (b.length < 2) {  //   b = "0" + b;  // }  // return "#" + r + g + b;  return "#" + r + g;}function padZero(e, t = 2) {  return (Array(t).join("0") + e).slice(-t);}function colorHex(e) {  if (/#([0-9a-f]{3}|[0-9a-f]{6})/i.test(e)) return e;  if (/^(rgb|RGB)/.test(e)) {    let t = e.replace(/(?:\(|\)|rgb|RGB)*/g, "").split(","),      o = "#";    for (let e of t) {      o += padZero((+e).toString(16));    }    return o;  }  return e;}function colorRgb(e) {  let t = e.toLowerCase();  if (t && /^#([0-9a-f]{3}|[0-9a-f]{6})$/i.test(t)) {    if (4 === t.length) {      let e = "#";      for (let o = 1; o < 4; o += 1) e += t.slice(o, o + 1).repeat(2);      t = e;    }    let e = [];    for (let o = 1; o < 7; o += 2) e.push(parseInt("0x" + t.slice(o, o + 2)));    return `rgb(${e.join(",")})`;  }  return t;}function LightenDarkenColor(e, t) {  let o = !1;  "#" == e[0] && ((e = e.slice(1)), (o = !0));  let n = parseInt(e, 16),    a = (n >> 16) + t,    i = ((n >> 8) & 255) + t,    r = (255 & n) + t;  return (    (a = Math.min(255, Math.max(0, a))),    (i = Math.min(255, Math.max(0, i))),    (r = Math.min(255, Math.max(0, r))),    (o ? "#" : "") + (r | (i << 8) | (a << 16)).toString(16).padStart(6, "0")  );}function getContrastYIQ(e) {  let t = colorRgb(e).match(/^rgb\((\d+),\s*(\d+),\s*(\d+)\)$/);  return (299 * t[1] + 587 * t[2] + 114 * t[3]) / 255e3 >= 0.5    ? "light"    : "dark";}function navTitle() {  var e = document.title.replace(" | 星凪", "");  document.getElementById("page-name-text").innerHTML = e;}function showcopy() {  if (void 0 !== GLOBAL_CONFIG.Snackbar)    btf.snackbarShow(GLOBAL_CONFIG.copy.success);  else {    const e = ctx.previousElementSibling;    (e.innerText = GLOBAL_CONFIG.copy.success),      (e.style.opacity = 1),      setTimeout(() => {        e.style.opacity = 0;      }, 700);  }}(checkOpen.toString = function () {  this.opened = !0;}),  (window.onload = function () {    for (      var e = document.getElementsByClassName("copybtn"), t = 0;      t < e.length;      t++    )      document        .getElementsByClassName("copybtn")        [t].addEventListener("click", function () {          showcopy();        });    xingzhi.initThemeColor();  });var getTimeState = () => {    var e = new Date().getHours(),      t = "";    return (      e >= 0 && e <= 5        ? (t = "睡个好觉，保证精力充沛")        : e > 5 && e <= 10        ? (t = "一日之计在于晨")        : e > 10 && e <= 14        ? (t = "吃饱了才有力气干活")        : e > 14 && e <= 18        ? (t = "集中精力，攻克难关")        : e > 18 && e <= 24 && (t = "不要太劳累了，早睡更健康"),      t    );  },  switchDarkMode = () => {    "dark" === document.documentElement.getAttribute("data-theme")      ? (activateLightMode(),        saveToLocal.set("theme", "light", 2),        // xingzhi.renderSakuraAndParticle(),        void 0 !== GLOBAL_CONFIG.Snackbar &&          btf.snackbarShow(GLOBAL_CONFIG.Snackbar.night_to_day, !1, 2e3),        $(".menu-darkmode-text").text("深色模式"))      : (activateDarkMode(),        // xingzhi.renderSakuraAndParticle(),        saveToLocal.set("theme", "dark", 2),        void 0 !== GLOBAL_CONFIG.Snackbar &&          btf.snackbarShow(GLOBAL_CONFIG.Snackbar.day_to_night, !1, 2e3),        $(".menu-darkmode-text").text("浅色模式")),      handleCases();    //   updateCharts();  },  handleCases = () => {    "function" == typeof utterancesTheme && utterancesTheme(),      "object" == typeof FB && window.loadFBComment(),      window.DISQUS &&        document.getElementById("disqus_thread").children.length &&        setTimeout(() => window.disqusReset(), 200);  },  updateCharts = () => {    let e =      "light" === document.documentElement.getAttribute("data-theme")        ? "#363636"        : "#F7F7FA";    [      { id: "posts-chart", options: postsOption, instance: postsChart },      { id: "tags-chart", options: tagsOption, instance: tagsChart },      {        id: "categories-chart",        options: categoriesOption,        instance: categoriesChart,      },    ].forEach((t) => {      if (document.getElementById(t.id)) {        let o = { ...t.options };        (o.textStyle.color = e),          (o.title.textStyle.color = e),          o.xAxis &&            ((o.xAxis.axisLine.lineStyle.color = e),            (o.yAxis.axisLine.lineStyle.color = e)),          o.legend && (o.legend.textStyle.color = e),          t.instance.setOption(o);      }    });  },  navFn = { switchDarkMode: switchDarkMode };function RemoveRewardMask() {  $(".reward-main").attr("style", "display: none"),    $("#quit-box").attr("style", "display: none");}function AddRewardMask() {  $(".reward-main").attr("style", "display: flex"),    $("#quit-box").attr("style", "display: flex");}function travelling() {  fetch("https://moments.zhxingzhi.com/randomfriend")    .then((e) => e.json())    .then((e) => {      var t = e.link,        o =          "点击前往按钮进入随机一个友链，不保证跳转网站的安全性和可用性。本次随机到的是本站友链：「" +          e.name +          "」";      document.styleSheets[0].addRule(        ":root",        "--xingzhi-snackbar-time:8000ms!important"      ),        Snackbar.show({          text: o,          duration: 8e3,          pos: "top-center",          actionText: "前往",          onActionClick: function (e) {            $(e).css("opacity", 0), window.open(t, "_blank");          },        });    });}function toforeverblog() {  Snackbar.show({    text: "点击前往按钮进入「十年之约」项目中的成员博客，不保证跳转网站的安全性和可用性",    duration: 8e3,    pos: "top-center",    actionText: "前往",    onActionClick: function (e) {      $(e).css("opacity", 0),        window.open(link, "https://www.foreverblog.cn/go.html");    },  });}function totraveling() {  btf.snackbarShow(    "即将跳转到「开往」项目的成员博客，不保证跳转网站的安全性和可用性",    !1,    5e3  ),    setTimeout(function () {      window.open("https://www.travellings.cn/go.html");    }, "5000");}function removeLoading() {  setTimeout(function () {    preloader.endLoading();  }, 3e3);}function addFriendLink() {  var e = document.getElementsByClassName("el-textarea__inner")[0];  let t = document.createEvent("HTMLEvents");  t.initEvent("input", !0, !0),    (e.value =      "昵称（请勿包含博客等字样）：\n网站地址（要求博客地址，请勿提交个人主页）：\n头像图片url（请提供尽可能清晰的图片，我会上传到我自己的图床）：\n描述：\n类型（生活类或者技术类）：）"),    e.dispatchEvent(t),    xingzhi.scrollTo("友情链接申请"),    e.focus(),    e.setSelectionRange(-1, -1);}function getArrayItems(e, t) {  var o = [];  for (var n in e) o.push(e[n]);  for (var a = [], i = 0; i < t && o.length > 0; i++) {    var r = Math.floor(Math.random() * o.length);    (a[i] = o[r]), o.splice(r, 1);  }  return a;}function bindTodayCardHoverEvent() {  $(".topGroup").hover(    function () {},    function () {      (hoverOnCommentBarrage = !1),        document.getElementById("todayCard").classList.remove("hide"),        (document.getElementById("todayCard").style.zIndex = 1);    }  );}function owoBig() {  new MutationObserver((e) => {    for (let t of e)      if ("childList" === t.type)        for (let e of t.addedNodes)          if (e.classList && e.classList.contains("OwO-body")) {            let t = e,              o = "",              n = !0,              a = document.createElement("div");            (a.id = "owo-big"),              document.querySelector("body").appendChild(a),              t.addEventListener("contextmenu", (e) => e.preventDefault()),              t.addEventListener("mouseover", (e) => {                "LI" === e.target.tagName &&                  n &&                  ((n = !1),                  (o = setTimeout(() => {                    let t = 3 * e.target.clientWidth,                      o = e.x - e.offsetX - (t - e.target.clientWidth) / 2,                      n = e.y - e.offsetY;                    (a.style.height = 3 * e.target.clientHeight + "px"),                      (a.style.width = t + "px"),                      (a.style.left = o + "px"),                      (a.style.top = n + "px"),                      (a.style.display = "flex"),                      (a.innerHTML = `<img src="${                        e.target.querySelector("img").src                      }">`);                  }, 300)));              }),              t.addEventListener("mouseout", (e) => {                (a.style.display = "none"), (n = !0), clearTimeout(o);              });          }  }).observe(document.getElementById("post-comment"), {    childList: !0,    subtree: !0,  });}function initObserver() {  var e = document.getElementById("post-comment"),    t = document.getElementById("pagination");  e &&    t &&    new IntersectionObserver(function (e) {      e.forEach(function (e) {        e.isIntersecting          ? (t.classList.add("show-window"),            (document.querySelector(".comment-barrage").style.bottom =              "-200px"))          : (t.classList.remove("show-window"),            (document.querySelector(".comment-barrage").style.bottom = "0px"));      });    }).observe(e);}function percent() {  let e = document.documentElement.scrollTop || window.pageYOffset,    t =      Math.max(        document.body.scrollHeight,        document.documentElement.scrollHeight,        document.body.offsetHeight,        document.documentElement.offsetHeight,        document.body.clientHeight,        document.documentElement.clientHeight      ) - document.documentElement.clientHeight,    o = Math.round((e / t) * 100),    n = document.querySelector("#percent");  var a = window.scrollY + document.documentElement.clientHeight;  (document.getElementById("post-comment") || document.getElementById("footer"))    .offsetTop < a || o > 90    ? (document.querySelector("#nav-totop").classList.add("long"),      (n.innerHTML = "返回顶部"))    : (document.querySelector("#nav-totop").classList.remove("long"),      o >= 0 && (n.innerHTML = o)),    (endresult = t - e),    endresult < 100      ? $(".needEndHide").addClass("hide")      : $(".needEndHide").removeClass("hide"),    (window.onscroll = percent);}function addKeyShotListener() {  $(window).off("keydown"),    $(window).off("keyup"),    $(window).on("keydown", keyDownEvent),    $(window).on("keyup", keyUpEvent);}function keyDownEvent(e) {  if (    (27 == e.keyCode &&      (xingzhi.hideLoading(), xingzhi.hideConsole(), rm.hideRightMenu()),    xingzhi_keyboard && e.shiftKey && !xingzhi_intype)  ) {    if (      (16 == e.keyCode &&        document.querySelector("#keyboard-tips").classList.add("show"),      75 == e.keyCode)    )      return xingzhi.keyboardToggle(), !1;    if (65 == e.keyCode) return xingzhi.showConsole(), !1;    if (77 == e.keyCode) return xingzhi.musicToggle(), !1;    if (82 == e.keyCode) return toRandomPost(), !1;    if (72 == e.keyCode) return pjax.loadUrl("/"), !1;    if (68 == e.keyCode) return rm.switchDarkMode(), !1;    if (70 == e.keyCode) return pjax.loadUrl("/moments/"), !1;    if (76 == e.keyCode) return pjax.loadUrl("/link/"), !1;    if (80 == e.keyCode) return pjax.loadUrl("/about/"), !1;    if (84 == e.keyCode) return pjax.loadUrl("/tlink/"), !1;  }}function keyUpEvent(e) {  16 == e.keyCode &&    document.querySelector("#keyboard-tips").classList.remove("show");}function checkUrlAndAddHideBanner() {  var e = window.location.href;  if (/\/page\//.test(e)) {    var t = document.getElementById("recent-top-post-group"),      o = document.getElementById("bbTimeList");    t && (t.classList.add("more-page"), o.classList.add("more-page"));  }}function open_all_tags() {  document    .querySelectorAll(".card-allinfo .card-tag-cloud")    .forEach(function (e) {      e.classList.add("all-tags");    });  var e = document.getElementById("more-tags-btn");  e && e.parentNode.removeChild(e);}function listenToPageInputPress() {  var e = document.getElementById("toPageText"),    o = document.getElementById("toPageButton");  if (e) {    var a = document.querySelectorAll(".page-number");    (t = a[a.length - 1].innerHTML), (n = +t);    var i = document.getElementById("myElementId");    if (1 == n) (i = document.querySelector(".toPageGroup")) && i.remove();    e.addEventListener("keydown", (e) => {      13 === e.keyCode && (xingzhi.toPage(), pjax.loadUrl(o.href));    }),      e.addEventListener("input", function () {        "" === e.value || "0" === e.value          ? o.classList.remove("haveValue")          : o.classList.add("haveValue");        var t = document.querySelectorAll(".page-number"),          n = +t[t.length - 1].innerHTML;        +document.getElementById("toPageText").value > n && (e.value = n);      });  }}function initBlog() {  (window.commentBarrageInitialized = !1),    coverColor(),    addRightMenuClickEvent(),    navTitle(),    percent(),    listenToPageInputPress(),    xingzhi.topPostScroll(),    xingzhi.sayhi(),    xingzhi.addTag(),    xingzhi.stopImgRightDrag(),    // xingzhi.renderSakuraAndParticle(),    // xingzhi.addFriendLinksInFooter(),    xingzhi.addPowerLinksInPostRightSide(),    xingzhi.qrcodeCreate(),    // xingzhi.hidecookie(),    xingzhi.onlyHome(),    xingzhi.addNavBackgroundInit(),    xingzhi.initIndexEssay(),    xingzhi.chageTimeFormate(),    xingzhi.reflashEssayWaterFall(),    xingzhi.darkModeStatus(),    xingzhi.categoriesBarActive(),    xingzhi.initThemeColor(),    xingzhi.hideLoading(),    xingzhi.tagPageActive(),    xingzhi.removeBodyPaceClass(),    // xingzhi.lottieAnimation("footer_mini_logo"),    // xingzhi.lottieAnimation("lottie_avatar"),    // xingzhiGPT.aiExplanation(),    // AIEngine(),    // addAIToggleListener(),    initObserver(),    checkUrlAndAddHideBanner(),    bindTodayCardHoverEvent();  // initializeCommentBarrage();}document.addEventListener(  "touchstart",  (e) => {    RemoveRewardMask();  },  !1),  $(document)    .unbind("keydown")    .bind("keydown", function (e) {      if ((e.ctrlKey || e.metaKey) && 67 == e.keyCode && "" != selectTextNow)        return (          btf.snackbarShow("复制成功，复制和转载请标注本文地址"),          rm.rightmenuCopyText(selectTextNow),          !1        );    }),  document.addEventListener(    "scroll",    btf.throttle(function () {      xingzhi.initThemeColor();    }, 200)  ),  navigator.serviceWorker.getRegistrations().then(function (e) {    for (let t of e) t.unregister();  }),  (window.onkeydown = function (e) {    123 === e.keyCode &&      btf.snackbarShow("开发者模式已打开，请遵循GPL协议", !1, 3e3);  }),  window.addEventListener("resize", function () {    document.querySelector("#waterfall") && xingzhi.reflashEssayWaterFall();  }),  document.getElementById("post-comment") && owoBig(),  "true" == localStorage.getItem("keyboardToggle")    ? (document.querySelector("#consoleKeyboard").classList.add("on"),      (xingzhi_keyboard = !0))    : (document.querySelector("#consoleKeyboard").classList.remove("on"),      (xingzhi_keyboard = !1)),  addKeyShotListener(),  $("input").focus(function () {    xingzhi_intype = !0;  }),  $("textarea").focus(function () {    xingzhi_intype = !0;  }),  $("input").focusout(function () {    xingzhi_intype = !1;  }),  $("textarea").focusout(function () {    xingzhi_intype = !1;  }),  (window.onfocus = function () {    document.querySelector("#keyboard-tips").classList.remove("show");  }),  document.addEventListener("pjax:click", function () {    console.clear(),      Pace.restart(),      xingzhi.showLoading(),      $(window).prop("keydown", null).off("keydown");  });]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/categorybar.js"/>
      <url>/js/categorybar.js</url>
      
        <content type="html"><![CDATA[categoriesBarActive()topCategoriesBarScroll()//分类条function categoriesBarActive(){  var urlinfo = window.location.pathname;  urlinfo = decodeURIComponent(urlinfo)  //判断是否是首页  if (urlinfo == '/'){    if (document.querySelector('#category-bar')){      document.getElementById('category-bar-home').classList.add("select")    }  }else {    // 验证是否是分类链接    var pattern = /\/categories\/.*?\//;    var patbool = pattern.test(urlinfo);    // console.log(patbool);    // 获取当前的分类    if (patbool) {      var valuegroup = urlinfo.split("/");      // 获取当前分类      var nowCategorie = valuegroup[2];      if (document.querySelector('#category-bar')){        document.getElementById(nowCategorie).classList.add("select");      }    }  }  }//鼠标控制横向滚动function topCategoriesBarScroll(){  if (document.getElementById("category-bar-items")){    let xscroll = document.getElementById("category-bar-items");  xscroll.addEventListener("mousewheel", function (e) {    //计算鼠标滚轮滚动的距离    let v = -e.wheelDelta / 2;    xscroll.scrollLeft += v;    //阻止浏览器默认方法    e.preventDefault();}, false);  }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/hometop.js"/>
      <url>/js/hometop.js</url>
      
        <content type="html"><![CDATA[// var bywind = {//     hideTodayCard: function() {//         document.getElementById("todayCard") && document.getElementById("todayCard").classList.add("hide")//     }// }// $(".topGroup").hover((function() {}// ), (function() {//         document.getElementById("todayCard").classList.remove("hide"),//         document.getElementById("todayCard").style.zIndex = 1//     }// ))]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/particle.js"/>
      <url>/js/particle.js</url>
      
        <content type="html"><![CDATA[const scene = new THREE.Scene();const camera = new THREE.PerspectiveCamera(  75,  window.innerWidth / window.innerHeight,  0.1,  10000);camera.position.set(0, 0, 10);const renderer = new THREE.WebGLRenderer();renderer.setSize(window.innerWidth, window.innerHeight);const particle_box = document.createElement("div");particle_box.id = "particle_box";particle_box.className = "particle_box";particle_box.setAttribute(  "style",  "top: 0; left: 0; z-index: -10; position: fixed; pointer-events: none;");document.body.appendChild(particle_box);particle_box.appendChild(renderer.domElement);const renderParticle = () => {  renderer.render(scene, camera);  requestAnimationFrame(renderParticle);};renderParticle();window.addEventListener("resize", () => {  //更新摄像头  camera.aspect = window.innerWidth / window.innerHeight;  //更新摄像机的投影矩阵  camera.updateProjectionMatrix();  renderer.setSize(window.innerWidth, window.innerHeight);  //设置渲染器的像素比  renderer.setPixelRatio(window.devicePixelRatio);});const texture = new THREE.TextureLoader().load("https://img.hoshinagi.top/post/particle.png");const count = 500;for (let i = 0; i < 10; i++) {  const positions = new Float32Array((count * 3) / 10);  const colors = new Float32Array((count * 3) / 10);  const particleGeometry = new THREE.BufferGeometry();  const material = new THREE.PointsMaterial({    map: texture, //纹理    alphaMap: texture, //透明纹理    size: 10, //粒子大小    depthWrite: false, //是否开启深度描写    blending: THREE.AdditiveBlending, //混合模式    transparent: false, //是否透明    vertexColors: true, //设置顶点的颜色  });  for (let j = 0; j < (count / 10) * 3; j++) {    positions[j * 3] = Math.random() * 400 - 200;    positions[j * 3 + 1] = Math.random() * 400 - 200;    positions[j * 3 + 2] = Math.random() * 800 - 400;    colors[j * 3] = Math.random();    colors[j * 3 + 1] = Math.random();    colors[j * 3 + 2] = Math.random();  }  particleGeometry.setAttribute(    "position",    new THREE.BufferAttribute(positions, 3)  );  particleGeometry.setAttribute("color", new THREE.BufferAttribute(colors, 3));  const points = new THREE.Points(particleGeometry, material);  scene.add(points);  gsap.to(points.position, {    z: 400,    duration: Math.random() * 5 + 3,    repeat: -1,    ease: "linear",  });}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/preloader.js"/>
      <url>/js/preloader.js</url>
      
        <content type="html"><![CDATA[var preloader = {  endLoading: () => {    //- document.body.style.overflow = 'auto';    document.getElementById("loading-box").classList.add("loaded");  },  initLoading: () => {    //- document.body.style.overflow = '';    document.getElementById("loading-box").classList.remove("loaded");  },};window.addEventListener("load", preloader.endLoading());setTimeout(function () {  preloader.endLoading();}, 3000);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/privacy.js"/>
      <url>/js/privacy.js</url>
      
        <content type="html"><![CDATA[// 获取ipfunction getIpInfo() {  var fetchUrl = "http://api.ooomn.com/api/ip";  fetch(fetchUrl)    .then((res) => res.json())    .then((json) => {      console.log("haha");      var country = json.country || "未能获取到信息";      var ip = json.ip || "未能获取到信息";      var province = json.province || "未能获取到信息";      var city = json.city || "未能获取到信息";      var isp = json.isp || "未能获取到信息";      document.getElementById("userAgentIp").innerHTML = ip;      document.getElementById("userAgentCountry").innerHTML = country;      document.getElementById("userAgentRegion").innerHTML = province;      document.getElementById("userAgentCity").innerHTML = city;      document.getElementById("userAgentIsp").innerHTML = isp;      // 使用ua-parser-js解析User-Agent      var parser = new UAParser();      var result = parser.getResult();      document.getElementById("userAgentOS").innerHTML =        result.os.name + " " + result.os.version;      document.getElementById("userAgentBrowser").innerHTML =        result.browser.name + " " + result.browser.version;    });}getIpInfo();]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/random.js"/>
      <url>/js/random.js</url>
      
        <content type="html"><![CDATA[hexo.extend.generator.register('random', function (locals) {    const config = hexo.config.random || {}    const posts = []    for (const post of locals.posts.data) {        if (post.random !== false) posts.push(post.path)    }    return {        path: config.path || '/js/random.js',        data: `var posts=${JSON.stringify(posts)};function toRandomPost(){pjax.loadUrl('/'+posts[Math.floor(Math.random() * posts.length)]);};`    }})]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/rightmenu.js"/>
      <url>/js/rightmenu.js</url>
      
        <content type="html"><![CDATA[let rm = {};rm.stopdragimg = $("img"),rm.stopdragimg.on("dragstart", (function() {    return !1})),rm.showRightMenu = function(e, n=0, t=0) {    let o = $("#rightMenu");    o.css("top", n + "px").css("left", t + "px"),    e ? (o.show(), stopMaskScroll()) : o.hide()},rm.hideRightMenu = function() {    rm.showRightMenu(!1),    $("#rightmenu-mask").attr("style", "display: none")};let rmWidth = $("#rightMenu").width(),    rmHeight = $("#rightMenu").height();rm.reloadrmSize = function() {    rmWidth = $("#rightMenu").width(),    rmHeight = $("#rightMenu").height()};let domhref = "",    domImgSrc = "",    globalEvent = null;function imageToBlob(e) {    const n = new Image,        t = document.createElement("canvas"),        o = t.getContext("2d");    return n.crossOrigin = "", n.src = e, new Promise((e => {        n.onload = function() {            t.width = this.naturalWidth,            t.height = this.naturalHeight,            o.drawImage(this, 0, 0),            t.toBlob((n => {                e(n)            }), "image/png", .75)        }    }))}async function copyImage(e) {    const n = await imageToBlob(e),        t = new ClipboardItem({            "image/png": n        });    navigator.clipboard.write([t])}function stopMaskScroll() {    if (document.getElementById("rightmenu-mask")) {        document.getElementById("rightmenu-mask").addEventListener("mousewheel", (function(e) {            rm.hideRightMenu()        }), !1)    }    if (document.getElementById("rightMenu")) {        document.getElementById("rightMenu").addEventListener("mousewheel", (function(e) {            rm.hideRightMenu()        }), !1)    }}window.oncontextmenu = function(e) {    if (document.body.clientWidth > 768) {        let n = e.clientX + 10,            t = e.clientY,            o = $(".rightMenuOther"),            i = $(".rightMenuPlugin"),            c = $("#menu-copytext"),            r = $("#menu-pastetext"),            m = $("#menu-commenttext"),            a = $("#menu-newwindow"),            u = $("#menu-copylink"),            l = $("#menu-copyimg"),            h = $("#menu-downloadimg"),            d = $("#menu-search"),            s = $("#menu-searchBaidu"),            g = $("#menu-music-toggle"),            w = $("#menu-music-back"),            f = $("#menu-music-forward"),            p = $("#menu-music-playlist"),            k = $("#menu-music-copyMusicName"),            y = e.target.href,            M = e.target.currentSrc,            b = !1;        return o.show(), globalEvent = e, selectTextNow && window.getSelection() ? (b = !0, c.show(), m.show(), d.show(), s.show()) : (c.hide(), m.hide(), s.hide(), d.hide()), y ? (b = !0, a.show(), u.show(), domhref = y) : (a.hide(), u.hide()), M ? (b = !0, l.show(), h.show(), domImgSrc = M) : (l.hide(), h.hide()), "input" === e.target.tagName.toLowerCase() || "textarea" === e.target.tagName.toLowerCase() ? (console.log("这是一个输入框"), b = !0, r.show()) : r.hide(), "METING-JS" == e.target.nodeName ? (console.log("这是一个音乐"), b = !0, g.show(), w.show(), f.show(), p.show(), k.show()) : (g.hide(), w.hide(), f.hide(), p.hide(), k.hide()), b ? (o.hide(), i.show()) : i.hide(), rm.reloadrmSize(), n + rmWidth > window.innerWidth && (n -= rmWidth + 10), t + rmHeight > window.innerHeight && (t -= t + rmHeight - window.innerHeight), rm.showRightMenu(!0, t, n), $("#rightmenu-mask").attr("style", "display: flex"), !1    }},rm.downloadimging = !1,rm.writeClipImg = function(e) {    const n = "localhost" === window.location.hostname || "127.0.0.1" === window.location.hostname ? 0 : 1e4;    console.log("按下复制"),    rm.hideRightMenu(),    btf.snackbarShow("正在下载中，请稍后", !1, n),    0 == rm.downloadimging && (rm.downloadimging = !0, setTimeout((function() {        copyImage(e),        btf.snackbarShow("复制成功！图片已添加盲水印，请遵守版权协议"),        rm.downloadimging = !1    }), "${lazyTime}"))},rm.switchDarkMode = function() {    navFn.switchDarkMode(),    rm.hideRightMenu()},rm.copyUrl = function(e) {    $("body").after("<input id='copyVal'></input>");    var n = e,        t = document.getElementById("copyVal");    t.value = n,    t.select(),    t.setSelectionRange(0, t.value.length),    document.execCommand("copy"),    $("#copyVal").remove()},rm.rightmenuCopyText = function(e) {    navigator.clipboard && navigator.clipboard.writeText(e),    rm.hideRightMenu()},rm.copyPageUrl = function() {    var e = window.location.href;    rm.copyUrl(e),    btf.snackbarShow("复制本页链接地址成功", !1, 2e3),    rm.hideRightMenu()},rm.sharePage = function() {    window;    rm.copyUrl(url),    btf.snackbarShow("复制本页链接地址成功", !1, 2e3),    rm.hideRightMenu()};var selectTextNow = "";function selceText() {    var e;    e = document.selection ? document.selection.createRange().text : window.getSelection() + "",    selectTextNow = e || ""}function replaceAll(e, n, t) {    return e.split(n).join(t)}function addRightMenuClickEvent() {    $("#menu-backward").on("click", (function() {        window.history.back(),        rm.hideRightMenu()    })),    $("#menu-forward").on("click", (function() {        window.history.forward(),        rm.hideRightMenu()    })),    $("#menu-refresh").on("click", (function() {        window.location.reload()    })),    $("#menu-top").on("click", (function() {        btf.scrollToDest(0, 500),        rm.hideRightMenu()    })),    $(".menu-link").on("click", rm.hideRightMenu),    $("#menu-darkmode").prop("onclick", null).off("click"),    $("#menu-darkmode").on("click", rm.switchDarkMode),    $("#menu-home").on("click", (function() {        window.location.href = window.location.origin    })),    $("#menu-randomPost").on("click", (function() {        toRandomPost()    })),    $("#menu-commentBarrage").prop("onclick", null).off("click"),    $("#menu-commentBarrage").on("click", xingzhi.switchCommentBarrage),    $("#rightmenu-mask").on("click", rm.hideRightMenu),    $("#rightmenu-mask").contextmenu((function() {        return rm.hideRightMenu(), !1    })),    $("#menu-translate").on("click", (function() {        rm.hideRightMenu(),        translateInitialization()    })),    $("#menu-copy").on("click", rm.copyPageUrl),    $("#menu-pastetext").on("click", rm.pasteText),    $("#menu-copytext").on("click", (function() {        rm.rightmenuCopyText(selectTextNow),        btf.snackbarShow("复制成功，复制和转载请标注本文地址")    })),    $("#menu-commenttext").on("click", (function() {        rm.rightMenuCommentText(selectTextNow)    })),    $("#menu-newwindow").on("click", (function() {        window.open(domhref),        rm.hideRightMenu()    })),    $("#menu-copylink").on("click", rm.copyLink),    $("#menu-downloadimg").on("click", (function() {        xingzhi.downloadImage(domImgSrc, "zhxingzhi")    })),    $("#menu-copyimg").on("click", (function() {        rm.writeClipImg(domImgSrc)    })),    $("#menu-searchBaidu").on("click", rm.searchBaidu),    $("#menu-music-toggle").on("click", xingzhi.musicToggle),    $("#menu-music-back").on("click", xingzhi.musicSkipBack),    $("#menu-music-forward").on("click", xingzhi.musicSkipForward),    $("#menu-music-copyMusicName").on("click", (function() {        rm.rightmenuCopyText(xingzhi.musicGetName()),        btf.snackbarShow("复制歌曲名称成功", !1, 3e3)    }))}document.onmouseup = document.ondbclick = selceText,rm.readClipboard = function() {    navigator.clipboard && navigator.clipboard.readText().then((e => rm.insertAtCaret(globalEvent.target, e)))},rm.insertAtCaret = function(e, n) {    const t = e.selectionStart,        o = e.selectionEnd;    if (document.selection)        e.focus(),        document.selection.createRange().text = n,        e.focus();    else if (t || "0" == t) {        var i = e.scrollTop;        e.value = e.value.substring(0, t) + n + e.value.substring(o, e.value.length),        e.focus(),        e.selectionStart = t + n.length,        e.selectionEnd = t + n.length,        e.scrollTop = i    } else        e.value += n,        e.focus()},rm.pasteText = function() {    rm.readClipboard();    rm.hideRightMenu()},rm.rightMenuCommentText = function(e) {    rm.hideRightMenu();    var n = document.getElementsByClassName("el-textarea__inner")[0];    let t = document.createEvent("HTMLEvents");    t.initEvent("input", !0, !0);    let o = replaceAll(e, "\n", "\n> ");    n.value = "> " + o + "\n\n",    n.dispatchEvent(t);    var i = document.querySelector("#post-comment").offsetTop;    window.scrollTo(0, i - 80),    n.focus(),    n.setSelectionRange(-1, -1),    document.getElementById("comment-tips") && document.getElementById("comment-tips").classList.add("show")},rm.searchBaidu = function() {    btf.snackbarShow("即将跳转到百度搜索", !1, 2e3),    setTimeout((function() {        window.open("https://www.baidu.com/s?wd=" + selectTextNow)    }), "2000"),    rm.hideRightMenu()},rm.copyLink = function() {    rm.rightmenuCopyText(domhref),    btf.snackbarShow("已复制链接地址")};]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/sakura.js"/>
      <url>/js/sakura.js</url>
      
        <content type="html"><![CDATA[const sakura_canvas = document.createElement("canvas");sakura_canvas.id = "sakura";sakura_canvas.className = "sakura";sakura_canvas.setAttribute(  "style",  "top: 0; left: 0; z-index: 100000; position: fixed; pointer-events: none;");document.body.appendChild(sakura_canvas);const canvas_height = window.innerHeight;const canvas_width = window.innerWidth;sakura_canvas.width = canvas_height;sakura_canvas.height = canvas_width;const ctx = sakura_canvas.getContext("2d");const SAKURA_SUM = 50;const sakura_array = [];const sakura_img = new Image();sakura_img.src =  "https://img.hoshinagi.top/post/sakura.png";sakura_img.onload = () => {  resize();  //   document.body.appendChild(sakura_canvas);  for (let i = 0; i < SAKURA_SUM; i++) {    sakura_array.push(new Sakura());  }  render();};class Sakura {  // 构造方法  constructor() {    // 随机生成花瓣的x, y坐标    this.x = Math.random() * sakura_canvas.width;    this.y = Math.random() * sakura_canvas.height * 2 - sakura_canvas.height;    // 随机生成花瓣的宽高    this.width = Math.random() * 15 + 15;    this.height = Math.random() * 12 + 10;    // 随机透明度    this.opacity = this.width / 30;    // 设置一个随机数，后面实现旋转角度效果时会用到    this.rotate = Math.random();    // 速度初始化    this.xSpeed = Math.random() * 2 + 3;    this.ySpeed = Math.random() + 1.5;    this.rotateSpeed = Math.random() * 0.02;  }  // 绘制  draw() {    // 当花瓣超过canvas画布边界后，重新设置花瓣的坐标、速度、和转速    if (this.x > sakura_canvas.width || this.y > sakura_canvas.height) {      this.x = -sakura_img.width; // 刚好藏住      this.y = Math.random() * sakura_canvas.height * 2 - sakura_canvas.height;      this.rotate = Math.random();      this.rotateSpeed = Math.random() * 0.02;      this.xSpeed = Math.random() * 2 + 3;      this.ySpeed = Math.random() + 1.5;    }    // 设置整个canvas透明度基数    ctx.globalAlpha = this.opacity;    ctx.drawImage(      sakura_img,      this.x,      this.y,      this.width * (0.6 + Math.abs(Math.cos(this.rotate)) / 3),      this.height * (0.8 + Math.abs(Math.sin(this.rotate)) / 5)    );  }  animate() {    // this.x += this.xSpeed + mouseX * 5;    // this.y += this.ySpeed + mouseX * 2;    this.x += this.xSpeed;    this.y += this.ySpeed;    this.rotate += this.rotateSpeed;    this.draw();  }}const render = () => {  ctx.clearRect(0, 0, window.innerWidth, window.innerHeight);  sakura_array.forEach((sakura) => sakura.animate());  requestAnimationFrame(render);};const resize = () => {  sakura_canvas.width = window.innerWidth;  sakura_canvas.height = window.innerHeight;};window.addEventListener("resize", resize);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/shader.js"/>
      <url>/js/shader.js</url>
      
        <content type="html"><![CDATA[import * as THREE from "three";console.log(THREE);// import * as THREE from "three";// import { OrbitControls } from "three/examples/jsm/controls/OrbitControls";// import * as dat from "dat.gui";// const scene = new THREE.Scene();// const camera = new THREE.PerspectiveCamera(//   75,//   window.innerWidth / window.innerHeight,//   0.1,//   1000// );// const renderer = new THREE.WebGLRenderer();// scene.add(camera);// renderer.setSize(window.innerWidth, window.innerHeight);// document.body.appendChild(renderer.domElement);// camera.position.z = 10;// const axesHelper = new THREE.AxesHelper(10);// scene.add(axesHelper);// const orbitControls = new OrbitControls(camera, renderer.domElement);// orbitControls.enableDamping = true;// window.addEventListener("resize", () => {//   renderer.setSize(window.innerWidth, window.innerHeight);//   camera.aspect = window.innerWidth / window.innerHeight;//   camera.updateProjectionMatrix();// });// const params = {//   uWaresFrequency: 14,//   uScale: 0.03,//   uXzScale: 1.5,//   uNoiseFrequency: 10,//   uNoiseScale: 1.5,//   uLowColor: "#ff0000",//   uHighColor: "#ffff00",//   uXSpeed: 1,//   uZSpeed: 1,//   uNoiseSpeed: 1,//   uOpacity: 1,// };// const gui = new dat.GUI();// const shaderMaterial = new THREE.ShaderMaterial({//   vertexShader: `//   precision lowp float;// uniform float uWaresFrequency;// uniform float uScale;// uniform float uXzScale;// uniform float uNoiseFrequency;// uniform float uNoiseScale;// uniform float uTime;// uniform float uXSpeed;// uniform float uZSpeed;// uniform float uNoiseSpeed;// //计算出的高度传递给片元着色器// varying float vElevation;// float random (vec2 st) {//     return fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);// }// float noise (in vec2 _st) {//     vec2 i = floor(_st);//     vec2 f = fract(_st);//     // Four corners in 2D of a tile//     float a = random(i);//     float b = random(i + vec2(1.0, 0.0));//     float c = random(i + vec2(0.0, 1.0));//     float d = random(i + vec2(1.0, 1.0));//     vec2 u = f * f * (3.0 - 2.0 * f);//     return mix(a, b, u.x) +//             (c - a)* u.y * (1.0 - u.x) +//             (d - b) * u.x * u.y;// }// void main() {//     vec4 modelPosition = modelMatrix * vec4(position, 1.0);//     float elevation = sin((modelPosition.x * uWaresFrequency + uTime * uXSpeed) / 10.0) * sin((modelPosition.z * uWaresFrequency * uXzScale + uTime * uZSpeed) / 10.0);//     elevation += -abs(noise(vec2(modelPosition.xz * uNoiseFrequency + uTime * uNoiseSpeed))) * uNoiseScale;//     vElevation = elevation;//     elevation *= uScale;//     modelPosition.y += elevation;//     gl_Position = projectionMatrix * viewMatrix * modelPosition;// }//   `,//   fragmentShader: `//   precision lowp float;// uniform vec3 uLowColor;// uniform vec3 uHighColor;// uniform float uOpacity;// varying float vElevation;// void main() {//     float opacity = (vElevation + 1.0) / 2.0;//     vec3 color = mix(uLowColor, uHighColor, opacity);//     gl_FragColor = vec4(color, uOpacity);// }//   `,//   side: THREE.DoubleSide,//   transparent: true,//   uniforms: {//     uWaresFrequency: {//       value: params.uWaresFrequency,//     },//     uScale: {//       value: params.uScale,//     },//     uXzScale: {//       value: params.uXzScale,//     },//     uNoiseFrequency: {//       value: params.uNoiseFrequency,//     },//     uNoiseScale: {//       value: params.uNoiseScale,//     },//     uTime: {//       value: 0,//     },//     uLowColor: {//       value: new THREE.Color(params.uLowColor),//     },//     uHighColor: {//       value: new THREE.Color(params.uHighColor),//     },//     uXSpeed: {//       value: params.uXSpeed,//     },//     uZSpeed: {//       value: params.uZSpeed,//     },//     uNoiseSpeed: {//       value: params.uNoiseSpeed,//     },//     uOpacity: {//       value: params.uOpacity,//     },//   },// });// gui//   .add(params, "uWaresFrequency")//   .min(1)//   .max(100)//   .step(0.1)//   .onChange((value) => {//     shaderMaterial.uniforms.uWaresFrequency.value = value;//   });// gui//   .add(params, "uScale")//   .min(0)//   .max(0.2)//   .step(0.02)//   .onChange((value) => {//     shaderMaterial.uniforms.uScale.value = value;//   });// gui//   .add(params, "uXzScale")//   .min(0)//   .max(5)//   .step(0.1)//   .onChange((value) => {//     shaderMaterial.uniforms.uXzScale.value = value;//   });// gui//   .add(params, "uNoiseFrequency")//   .min(1)//   .max(100)//   .step(0.1)//   .onChange((value) => {//     shaderMaterial.uniforms.uNoiseFrequency.value = value;//   });// gui//   .add(params, "uNoiseScale")//   .min(0)//   .max(5)//   .step(0.01)//   .onChange((value) => {//     shaderMaterial.uniforms.uNoiseScale.value = value;//   });// gui.addColor(params, "uLowColor").onFinishChange((value) => {//   shaderMaterial.uniforms.uLowColor.value = new THREE.Color(value);// });// gui.addColor(params, "uHighColor").onFinishChange((value) => {//   shaderMaterial.uniforms.uHighColor.value = new THREE.Color(value);// });// gui//   .add(params, "uXSpeed")//   .min(0)//   .max(5)//   .step(0.01)//   .onChange((value) => {//     shaderMaterial.uniforms.uXSpeed.value = value;//   });// gui//   .add(params, "uZSpeed")//   .min(0)//   .max(5)//   .step(0.01)//   .onChange((value) => {//     shaderMaterial.uniforms.uZSpeed.value = value;//   });// gui//   .add(params, "uNoiseSpeed")//   .min(0)//   .max(5)//   .step(0.01)//   .onChange((value) => {//     shaderMaterial.uniforms.uNoiseSpeed.value = value;//   });// gui//   .add(params, "uOpacity")//   .min(0)//   .max(1)//   .step(0.01)//   .onChange((value) => {//     shaderMaterial.uniforms.uOpacity.value = value;//   });// const planeGeometry = new THREE.PlaneGeometry(10, 10, 1024, 1024);// const planeMaterial = new THREE.MeshBasicMaterial({//   color: 0x00ff00,//   side: THREE.DoubleSide,// });// const plane = new THREE.Mesh(planeGeometry, shaderMaterial);// plane.rotation.x = -Math.PI / 2;// scene.add(plane);// const clock = new THREE.Clock();// const render = () => {//   renderer.render(scene, camera);//   const elapsedTime = clock.getElapsedTime();//   shaderMaterial.uniforms.uTime.value = elapsedTime;//   orbitControls.update();//   requestAnimationFrame(render);// };// render();]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/waterfall.js"/>
      <url>/js/waterfall.js</url>
      
        <content type="html"><![CDATA[function waterfall(a) {  function b(a, b) {    var c = window.getComputedStyle(b);    return parseFloat(c["margin" + a]) || 0;  }  function c(a) {    return a + "px";  }  function d(a) {    return parseFloat(a.style.top);  }  function e(a) {    return parseFloat(a.style.left);  }  function f(a) {    return a.clientWidth;  }  function g(a) {    return a.clientHeight;  }  function h(a) {    return d(a) + g(a) + b("Bottom", a);  }  function i(a) {    return e(a) + f(a) + b("Right", a);  }  function j(a) {    a = a.sort(function (a, b) {      return h(a) === h(b) ? e(b) - e(a) : h(b) - h(a);    });  }  function k(b) {    f(a) != t &&      (b.target.removeEventListener(b.type, arguments.callee), waterfall(a));  }  "string" == typeof a && (a = document.querySelector(a));  var l = [].map.call(a.children, function (a) {    return (a.style.position = "absolute"), a;  });  a.style.position = "relative";  var m = [];  l.length &&    ((l[0].style.top = "0px"),    (l[0].style.left = c(b("Left", l[0]))),    m.push(l[0]));  for (var n = 1; n < l.length; n++) {    var o = l[n - 1],      p = l[n],      q = i(o) + f(p) <= f(a);    if (!q) break;    (p.style.top = o.style.top),      (p.style.left = c(i(o) + b("Left", p))),      m.push(p);  }  for (; n < l.length; n++) {    j(m);    var p = l[n],      r = m.pop();    (p.style.top = c(h(r) + b("Top", p))), (p.style.left = c(e(r))), m.push(p);  }  j(m);  var s = m[0];  a.style.height = c(h(s) + b("Bottom", s));  var t = f(a);  window.addEventListener    ? window.addEventListener("resize", k)    : (document.body.onresize = k);}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/xingzhi.js"/>
      <url>/js/xingzhi.js</url>
      
        <content type="html"><![CDATA[let xingzhi_cookiesTime = null,  xingzhi_musicPlaying = !1,  xingzhi_keyboard = !1,  xingzhi_intype = !1,  xingzhigpt = null,  lastSayHello = "";var xingzhi = {  darkModeStatus: function () {    "light" ==    ("dark" === document.documentElement.getAttribute("data-theme")      ? "dark"      : "light")      ? $(".menu-darkmode-text").text("深色模式")      : $(".menu-darkmode-text").text("浅色模式");  },  initIndexEssay: function () {    if (document.querySelector("#bber-talk"))      new Swiper(".swiper-container", {        direction: "vertical",        loop: !0,        autoplay: {          delay: 3e3,          pauseOnMouseEnter: !0,        },      });  },  onlyHome: function () {    var e = window.location.pathname;    "/" == (e = decodeURIComponent(e))      ? $(".only-home").attr("style", "display: flex")      : $(".only-home").attr("style", "display: none");  },  is_Post: function () {    return window.location.href.indexOf("/p/") >= 0;  },  addNavBackgroundInit: function () {    var e = 0,      t = 0;    document.body && (e = document.body.scrollTop),      document.documentElement && (t = document.documentElement.scrollTop),      0 != (e - t > 0 ? e : t) &&        (document.getElementById("page-header").classList.add("nav-fixed"),        document.getElementById("page-header").classList.add("nav-visible"),        $("#cookies-window").hide());  },  tagPageActive: function () {    var e = window.location.pathname;    if (/\/tags\/.*?\//.test((e = decodeURIComponent(e)))) {      var t = e.split("/")[2];      if (document.querySelector("#tag-page-tags")) {        $("a").removeClass("select");        var o = document.getElementById(t);        o && (o.classList.add("select"), (o.style.order = "-1"));      }    }  },  categoriesBarActive: function () {    document.querySelector("#category-bar") &&      $(".category-bar-item").removeClass("select");    var e = window.location.pathname;    if ("/" == (e = decodeURIComponent(e)))      document.querySelector("#category-bar") &&        document.getElementById("category-bar-home").classList.add("select");    else {      if (/\/categories\/.*?\//.test(e)) {        var t = e.split("/")[2];        if (document.querySelector("#category-bar")) {          var o = document.getElementById(t);          o && (o.classList.add("select"), (o.style.order = "-1"));        }      }    }  },  addFriendLinksInFooter: function () {    fetch("/zhxingzhi/friendlink.json")      .then((e) => e.json())      .then((e) => {        var t = [],          o = -1;        for (const n of e) {          const e = n.link_list;          for (let n = 0; n < Math.min(e.length, 1); n++) {            let n = Math.floor(Math.random() * e.length);            for (; (n === o && e.length > 1) || "张洪xingzhi" === e[n].name; )              n = Math.floor(Math.random() * e.length);            (o = n),              t.push({                name: e[n].name,                link: e[n].link,              }),              e.splice(n, 1);          }        }        t.pop();        var n = "";        for (let e = 0; e < t.length; ++e) {          var a = t[e];          n += `<a class='footer-item' href='${a.link}'  target="_blank" rel="noopener nofollow">${a.name}</a>`;        }        (n += "<a class='footer-item' href='/link/'>更多</a>"),          (document.getElementById("friend-links-in-footer").innerHTML = n);      });  },  stopImgRightDrag: function () {    $("img").on("dragstart", function () {      return !1;    });  },  topPostScroll: function () {    if (document.getElementById("recent-post-top")) {      let e = document.getElementById("recent-post-top");      e.addEventListener(        "mousewheel",        function (t) {          (e.scrollLeft += -t.wheelDelta / 2),            document.body.clientWidth < 1300 && t.preventDefault();        },        !1      );    }  },  sayhi: function () {    document.querySelector("#author-info__sayhi") &&      (document.getElementById("author-info__sayhi").innerHTML =        getTimeState());  },  addTag: function () {    document.querySelector(".xingzhi-tag-new") &&      $(".xingzhi-tag-new").append(        '<sup class="xingzhi-tag xingzhi-tag-new-view">N</sup>'      ),      document.querySelector(".xingzhi-tag-hot") &&        $(".xingzhi-tag-hot").append(          '<sup class="xingzhi-tag xingzhi-tag-hot-view">H</sup>'        );  },  qrcodeCreate: function () {    if (document.getElementById("qrcode")) {      document.getElementById("qrcode").innerHTML = "";      new QRCode(document.getElementById("qrcode"), {        text: window.location.href,        width: 250,        height: 250,        colorDark: "#000",        colorLight: "#ffffff",        correctLevel: QRCode.CorrectLevel.H,      });    }  },  reflashEssayWaterFall: function () {    document.querySelector("#waterfall") &&      setTimeout(function () {        waterfall("#waterfall"),          document.getElementById("waterfall").classList.add("show");      }, 500);  },  chageTimeFormate: function () {    for (      var e = document.getElementsByTagName("time"), t = 0;      t < e.length;      t++    ) {      var o,        n = e[t].getAttribute("datetime"),        a = new Date(n),        l = new Date().getTime() - a.getTime(),        i = Math.floor(l / 864e5);      (o =        0 === i          ? "最近"          : 1 === i          ? "昨天"          : 2 === i          ? "前天"          : i <= 7          ? i + "天前"          : a.getFullYear() !== new Date().getFullYear()          ? a.getFullYear() + "/" + (a.getMonth() + 1) + "/" + a.getDate()          : a.getMonth() + 1 + "/" + a.getDate()),        (e[t].textContent = o);    }  },  downloadImage: function (e, t) {    rm.hideRightMenu(),      0 == rm.downloadimging        ? ((rm.downloadimging = !0),          btf.snackbarShow("正在下载中，请稍后", !1, 1e4),          setTimeout(function () {            let o = new Image();            o.setAttribute("crossOrigin", "anonymous"),              (o.onload = function () {                let e = document.createElement("canvas");                (e.width = o.width),                  (e.height = o.height),                  e.getContext("2d").drawImage(o, 0, 0, o.width, o.height);                let n = e.toDataURL("image/png"),                  a = document.createElement("a"),                  l = new MouseEvent("click");                (a.download = t || "photo"), (a.href = n), a.dispatchEvent(l);              }),              (o.src = e),              btf.snackbarShow("图片已添加盲水印，请遵守版权协议"),              (rm.downloadimging = !1);          }, "10000"))        : btf.snackbarShow("有正在进行中的下载，请稍后再试");  },  switchCommentBarrage: function () {    document.querySelector(".comment-barrage") &&      ($(".comment-barrage").is(":visible")        ? ($(".comment-barrage").hide(),          $(".menu-commentBarrage-text").text("显示热评"),          document            .querySelector("#consoleCommentBarrage")            .classList.remove("on"),          localStorage.setItem("commentBarrageSwitch", "false"))        : $(".comment-barrage").is(":hidden") &&          ($(".comment-barrage").show(),          $(".menu-commentBarrage-text").text("关闭热评"),          document.querySelector("#consoleCommentBarrage").classList.add("on"),          localStorage.removeItem("commentBarrageSwitch"))),      rm.hideRightMenu();  },  hidecookie: function () {    xingzhi_cookiesTime = setTimeout(() => {      document.getElementById("cookies-window").classList.add("cw-hide"),        setTimeout(() => {          $("#cookies-window").hide();        }, 1e3);    }, 3e3);  },  hideTodayCard: function () {    document.getElementById("todayCard") &&      document.getElementById("todayCard").classList.add("hide");  },  changeThemeColor: function (e) {    null !== document.querySelector('meta[name="theme-color"]') &&      (document        .querySelector('meta[name="theme-color"]')        .setAttribute("content", e),      document        .querySelector('meta[name="apple-mobile-web-app-status-bar-style"]')        .setAttribute("content", e));  },  initThemeColor: function () {    const e = window.scrollY || document.documentElement.scrollTop;    if (xingzhi.is_Post()) {      if (e > 0) {        let e = getComputedStyle(document.documentElement).getPropertyValue(          "--xingzhi-card-bg"        );        xingzhi.changeThemeColor(e);      } else if (0 === e) {        let e = getComputedStyle(document.documentElement).getPropertyValue(          "--xingzhi-main"        );        xingzhi.changeThemeColor(e);      }    } else if (e > 0) {      let e = getComputedStyle(document.documentElement).getPropertyValue(        "--xingzhi-card-bg"      );      xingzhi.changeThemeColor(e);    } else if (0 === e) {      let e = getComputedStyle(document.documentElement).getPropertyValue(        "--xingzhi-background"      );      xingzhi.changeThemeColor(e);    }  },  jumpTo: function (e) {    $(document).ready(function () {      $("html,body").animate(        {          scrollTop: $(e).eq(i).offset().top,        },        500      );    });  },  showLoading: function () {    document.querySelector("#loading-box").classList.remove("loaded");    let e = getComputedStyle(document.documentElement).getPropertyValue(      "--xingzhi-card-bg"    );    xingzhi.changeThemeColor(e);  },  hideLoading: function () {    document.querySelector("#loading-box").classList.add("loaded");    //   xingzhiGPT.aiExplanation();  },  musicToggle: function () {    xingzhi_musicPlaying      ? (document.querySelector("#nav-music").classList.remove("playing"),        (document.getElementById("menu-music-toggle").innerHTML =          '<i class="xingzhifont icon-play-fill"></i><span>播放音乐</span>'),        (document.getElementById("nav-music-hoverTips").innerHTML =          "音乐已暂停"),        document.querySelector("#consoleMusic").classList.remove("on"),        (xingzhi_musicPlaying = !1))      : (document.querySelector("#nav-music").classList.add("playing"),        (document.getElementById("menu-music-toggle").innerHTML =          '<i class="xingzhifont icon-pause-fill"></i><span>暂停音乐</span>'),        document.querySelector("#consoleMusic").classList.add("on"),        (xingzhi_musicPlaying = !0)),      document.querySelector("meting-js").aplayer.toggle(),      rm.hideRightMenu();  },  musicSkipBack: function () {    document.querySelector("meting-js").aplayer.skipBack(), rm.hideRightMenu();  },  musicSkipForward: function () {    document.querySelector("meting-js").aplayer.skipForward(),      rm.hideRightMenu();  },  musicGetName: function () {    for (var e = $(".aplayer-title"), t = [], o = e.length - 1; o >= 0; o--)      t[o] = e[o].innerText;    return t[0];  },  showConsole: function () {    document.querySelector("#console").classList.add("show"),      xingzhi.initConsoleState();  },  hideConsole: function () {    document.querySelector("#console").classList.remove("show");  },  keyboardToggle: function () {    xingzhi_keyboard      ? ((xingzhi_keyboard = !1),        document.querySelector("#consoleKeyboard").classList.remove("on"),        localStorage.setItem("keyboardToggle", "false"))      : ((xingzhi_keyboard = !0),        document.querySelector("#consoleKeyboard").classList.add("on"),        localStorage.setItem("keyboardToggle", "true"));  },  scrollTo: function (e) {    const t = document.getElementById(e);    if (t) {      const e = t.getBoundingClientRect().top + window.pageYOffset - 80,        o = window.pageYOffset,        n = e - o;      let a = null;      window.requestAnimationFrame(function e(t) {        a || (a = t);        const l = t - a,          i = (c = Math.min(l / 0, 1)) < 0.5 ? 2 * c * c : (4 - 2 * c) * c - 1;        var c;        window.scrollTo(0, o + n * i),          l < 600 && window.requestAnimationFrame(e);      });    }  },  hideAsideBtn: () => {    const e = document.documentElement.classList;    e.contains("hide-aside")      ? saveToLocal.set("aside-status", "show", 2)      : saveToLocal.set("aside-status", "hide", 2),      e.toggle("hide-aside"),      e.contains("hide-aside")        ? document.querySelector("#consoleHideAside").classList.add("on")        : document.querySelector("#consoleHideAside").classList.remove("on");  },  initConsoleState: function () {    document.documentElement.classList.contains("hide-aside")      ? document.querySelector("#consoleHideAside").classList.add("on")      : document.querySelector("#consoleHideAside").classList.remove("on");  },  removeBodyPaceClass: function () {    $("body").removeClass(), $("body").addClass("pace-done");  },  toPage: function () {    console.log("执行跳转");    var e = document.querySelectorAll(".page-number"),      t = parseInt(e[e.length - 1].innerHTML),      o = document.getElementById("toPageText"),      n = parseInt(o.value);    if (!isNaN(n) && n > 0 && "0" !== ("" + n)[0] && n <= t) {      var a,        l = window.location.href.replace(/\/page\/\d+\/$/, "/");      (a = 1 === n ? l : l + (l.endsWith("/") ? "" : "/") + "page/" + n + "/"),        (document.getElementById("toPageButton").href = a);    }  },  changeSayHelloText: function () {    const e = [        "🍰 甜食粉碎机",        "🔍 分享与热心帮助",        "🦁️ CV攻城狮",        "🔨 设计开发一条龙",        "⛰️ 爬山小能手",        "🏃 脚踏实地行动派",        "🦉 熬夜冠军",        "💢 人不狠话不多",      ],      t = document.getElementById("author-info__sayhi");    let o = e[Math.floor(Math.random() * e.length)];    for (; o === lastSayHello; ) o = e[Math.floor(Math.random() * e.length)];    (t.textContent = o), (lastSayHello = o);  },  scrollCategoryBarToRight: function () {    var e,      t = document.getElementById("category-bar-items"),      o = document.getElementById("category-bar-next");    var n = t.clientWidth;    t &&      (t.scrollLeft + t.clientWidth >= t.scrollWidth - 8        ? t.scroll({            left: 0,            behavior: "smooth",          })        : t.scrollBy({            left: n,            behavior: "smooth",          }),      t.addEventListener("scroll", function n() {        clearTimeout(e),          (e = setTimeout(function () {            (o.style.transform =              t.scrollLeft + t.clientWidth >= t.scrollWidth - 8                ? "rotate(180deg)"                : ""),              t.removeEventListener("scroll", n);          }, 150));      }));  },  addRandomCommentInfo: function () {    const e = `${adjectives[Math.floor(Math.random() * adjectives.length)]}${      vegetablesAndFruits[        Math.floor(Math.random() * vegetablesAndFruits.length)      ]    }`;    !(function () {      for (        var t = [            "#author",            "input[name='comname']",            "#inpName",            "input[name='author']",            "#ds-dialog-name",            "#name",            "input[name='nick']",            "#comment_author",          ],          o = [            "#mail",            "#email",            "input[name='commail']",            "#inpEmail",            "input[name='email']",            "#ds-dialog-email",            "input[name='mail']",            "#comment_email",          ],          n = 0;        n < t.length;        n++      ) {        var a = document.querySelector(t[n]);        if (null != a) {          (a.value = e),            a.dispatchEvent(new Event("input")),            a.dispatchEvent(new Event("change"));          break;        }      }      for (var l = 0; l < o.length; l++) {        var i = document.querySelector(o[l]);        if (null != i) {          (i.value = "donotreply@zhxingzhi.com"),            i.dispatchEvent(new Event("input")),            i.dispatchEvent(new Event("change"));          break;        }      }    })();    var t = document.getElementsByClassName("el-textarea__inner")[0];    t.focus(), t.setSelectionRange(-1, -1);  },  addPowerLinksInPostRightSide: async function () {    const e = document.getElementById("power-star-image"),      t = document.getElementById("power-star"),      o = document.getElementById("power-star-title"),      n = document.getElementById("power-star-desc");    if (t && e && o && n)      try {        const a = await fetch("/zhxingzhi/powerlink.json"),          l = await a.json(),          i = xingzhi.getRandomInt(0, l[0].link_list.length),          c = l[0].link_list[i];        (e.style.backgroundImage = `url(${c.avatar + "_240w"})`),          (t.href = c.link),          (o.innerText = c.name),          (n.innerText = c.descr);      } catch (e) {}  },  getRandomInt: function (e, t) {    return Math.floor(Math.random() * (t - e)) + e;  },  addCommentCount: function (e) {    var t = document.getElementsByClassName("comment-headline");    t.length > 0 &&      twikoo        .getCommentsCount({          envId: "https://twikoo.zhxingzhi.com",          urls: [window.location.pathname],          includeReply: !0,        })        .then(function (o) {          for (var n = 0; n < t.length; n++) {            var a = t[n],              l = a.getElementsByTagName("span")[0];            if (l) {              var i = document.createElement("span");              (i.innerText = " (" + e + ")"), a.insertBefore(i, l.nextSibling);            }          }        })        .catch(function (e) {          console.error(e);        });  },  lottieAnimation: function (e) {    var t = document.getElementById(e);    lottie.loadAnimation({      container: t,      renderer: "svg",      loop: !0,      autoplay: !0,      path: "/lottie/" + e + "/data.json",    });  },  renderSakuraAndParticle: () => {    const nowMode =      document.documentElement.getAttribute("data-theme") === "dark"        ? "dark"        : "light";    if (nowMode === "light") {      document.getElementById("sakura").classList.remove("hide");      document.getElementById("particle_box").classList.add("hide");    } else {      document.getElementById("sakura").classList.add("hide");      document.getElementById("particle_box").classList.remove("hide");    }  },};const adjectives = [    "美丽的",    "英俊的",    "聪明的",    "勇敢的",    "可爱的",    "慷慨的",    "善良的",    "可靠的",    "开朗的",    "成熟的",    "稳重的",    "真诚的",    "幽默的",    "豁达的",    "有趣的",    "活泼的",    "优雅的",    "敏捷的",    "温柔的",    "温暖的",    "敬业的",    "细心的",    "耐心的",    "深沉的",    "朴素的",    "含蓄的",    "率直的",    "开放的",    "务实的",    "坚强的",    "自信的",    "谦虚的",    "文静的",    "深刻的",    "纯真的",    "朝气蓬勃的",    "慎重的",    "大方的",    "顽强的",    "迷人的",    "机智的",    "善解人意的",    "富有想象力的",    "有魅力的",    "独立的",    "好奇的",    "干净的",    "宽容的",    "尊重他人的",    "体贴的",    "守信的",    "有耐性的",    "有责任心的",    "有担当的",    "有远见的",    "有智慧的",    "有眼光的",    "有冒险精神的",    "有爱心的",    "有同情心的",    "喜欢思考的",    "喜欢学习的",    "具有批判性思维的",    "善于表达的",    "善于沟通的",    "善于合作的",    "善于领导的",    "有激情的",    "有幽默感的",    "有思想的",    "有个性的",    "有正义感的",    "有责任感的",    "有创造力的",    "有想象力的",    "有艺术细胞的",    "有团队精神的",    "有协调能力的",    "有决策能力的",    "有组织能力的",    "有学习能力的",    "有执行能力的",    "有分析能力的",    "有逻辑思维的",    "有创新能力的",    "有专业素养的",    "有商业头脑的",  ],  vegetablesAndFruits = [    "萝卜",    "白菜",    "芹菜",    "生菜",    "青椒",    "辣椒",    "茄子",    "豆角",    "黄瓜",    "西红柿",    "洋葱",    "大蒜",    "土豆",    "南瓜",    "豆腐",    "韭菜",    "花菜",    "西兰花",    "蘑菇",    "金针菇",    "苹果",    "香蕉",    "橙子",    "柠檬",    "猕猴桃",    "草莓",    "葡萄",    "桃子",    "杏子",    "李子",    "石榴",    "西瓜",    "哈密瓜",    "蜜瓜",    "樱桃",    "蓝莓",    "柿子",    "橄榄",    "柚子",    "火龙果",  ];$(document).ready(function () {  initBlog();}),  document.addEventListener("pjax:complete", function () {    // (xingzhiGPTIsRunning = !1),    //   (xingzhi_aiPostExplanation = ""),    //   (aiTalkMode = !1),    //   (xingzhiGPTModel = "xingzhiGPT"),    initBlog();  });//   document.addEventListener("pjax:click", function () {//     console.log("pjax:click"),//       xingzhiGPT_timeoutId && clearTimeout(xingzhiGPT_timeoutId),//       xingzhiGPT_observer && xingzhiGPT_observer.disconnect();//   });// $(document).ready(function () {//   initBlog();// }),//   document.addEventListener("pjax:complete", function () {//     (xingzhiGPTIsRunning = !1),//       (xingzhi_aiPostExplanation = ""),//       (aiTalkMode = !1),//       (xingzhiGPTModel = "xingzhiGPT"),//       initBlog();//   }),//   document.addEventListener("pjax:click", function () {//     console.log("pjax:click"),//       xingzhiGPT_timeoutId && clearTimeout(xingzhiGPT_timeoutId),//       xingzhiGPT_observer && xingzhiGPT_observer.disconnect();//   });]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>link</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>music</title>
      <link href="/music/index.html"/>
      <url>/music/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>隐私政策</title>
      <link href="/privacy/index.html"/>
      <url>/privacy/index.html</url>
      
        <content type="html"><![CDATA[<p class='p logo'>本站非常重视用户的隐私和个人信息保护。你在使用网站时，可能会收集和使用你的相关信息。通过《隐私政策》向你说明在你访问 <code>blog.xingzhi.top</code> 网站时，如何收集、使用、保存、共享和转让这些信息。</p><h2 id="最近更新时间"><a href="#最近更新时间" class="headerlink" title="最近更新时间"></a>最近更新时间</h2><p class='p logo'>协议最新更新时间为：2023-10-22</p><h2 id="一、在访问时如何收集和使用你的个人信息"><a href="#一、在访问时如何收集和使用你的个人信息" class="headerlink" title="一、在访问时如何收集和使用你的个人信息"></a>一、在访问时如何收集和使用你的个人信息</h2><h3 id="在访问时，收集访问信息的服务会收集不限于以下信息："><a href="#在访问时，收集访问信息的服务会收集不限于以下信息：" class="headerlink" title="在访问时，收集访问信息的服务会收集不限于以下信息："></a>在访问时，收集访问信息的服务会收集不限于以下信息：</h3><p class='p logo'><strong>网络身份标识信息</strong> （浏览器UA、IP地址）</p><p class='p logo'><strong>设备信息</strong></p><p class='p logo'><strong>浏览过程</strong> （操作方式、浏览方式与时长、性能与网络加载情况）。</p><h3 id="在访问时，本站内置的第三方服务会通过以下或更多途径，来获取你的以下或更多信息："><a href="#在访问时，本站内置的第三方服务会通过以下或更多途径，来获取你的以下或更多信息：" class="headerlink" title="在访问时，本站内置的第三方服务会通过以下或更多途径，来获取你的以下或更多信息："></a>在访问时，本站内置的第三方服务会通过以下或更多途径，来获取你的以下或更多信息：</h3><ul><li><strong>百度统计工具</strong> 会收集你的访问信息、访问操作过程，用于网站维护</li><li><strong>51la 统计工具</strong> 会收集你的访问信息，用于网站维护</li><li><strong>灵雀应用监控平台</strong> 会收集你的访问操作过程和资源加载情况，用于网站维护</li></ul><h3 id="在访问时，本人仅会处于以下目的，使用你的个人信息："><a href="#在访问时，本人仅会处于以下目的，使用你的个人信息：" class="headerlink" title="在访问时，本人仅会处于以下目的，使用你的个人信息："></a>在访问时，本人仅会处于以下目的，使用你的个人信息：</h3><ul><li>用于网站的优化与文章分类，用户优化文章</li><li>恶意访问识别，用于维护网站</li><li>恶意攻击排查，用于维护网站</li><li>网站点击情况监测，用于优化网站页面</li><li>网站加载情况监测，用于优化网站性能</li><li>用于网站搜索结果优化</li><li>浏览数据的展示</li></ul><h3 id="第三方信息获取方将您的数据用于以下用途："><a href="#第三方信息获取方将您的数据用于以下用途：" class="headerlink" title="第三方信息获取方将您的数据用于以下用途："></a>第三方信息获取方将您的数据用于以下用途：</h3><p class='p logo'>第三方可能会用于其他目的，详情请访问对应第三方服务提供的隐私协议。</p><h3 id="你应该知道在你访问的时候不限于以下信息会被第三方获取并使用："><a href="#你应该知道在你访问的时候不限于以下信息会被第三方获取并使用：" class="headerlink" title="你应该知道在你访问的时候不限于以下信息会被第三方获取并使用："></a>你应该知道在你访问的时候不限于以下信息会被第三方获取并使用：</h3><p class='p logo'>第三方部分为了抵抗攻击、使用不同节点cdn加速等需求会收集不限于以下信息</p><!-- | 类型     | 信息                                                                 || :------- | :------------------------------------------------------------------- || IP 地址  | IP 地址用于防止恶意攻击、识别恶意攻击、排查恶意攻击、进行网络监控等  || 国家     | 设备信息用于防止恶意攻击、识别恶意攻击、排查恶意攻击、进行网络监控等 || 省份     | 设备信息用于防止恶意攻击、识别恶意攻击、排查恶意攻击、进行网络监控等 || 城市     | 设备信息用于防止恶意攻击、识别恶意攻击、排查恶意攻击、进行网络监控等 || 运营商   | 设备信息用于防止恶意攻击、识别恶意攻击、排查恶意攻击、进行网络监控等 || 设备信息 | 设备信息用于防止恶意攻击、识别恶意攻击、排查恶意攻击、进行网络监控等 || 操作系统 | 设备信息用于防止恶意攻击、识别恶意攻击、排查恶意攻击、进行网络监控等 || 浏览器   | 设备信息用于防止恶意攻击、识别恶意攻击、排查恶意攻击、进行网络监控等 | --><div class="table-wrap"><table>  <thead><tr><th>类型<div style="width:100px"></div></th><th>信息</th></tr></thead><tbody>   <tr>      <td td="" colspan="2"><b>网络信息</b></td>   </tr>   <tr>      <td>IP地址</td>      <td><div id="userAgentIp"></div></td>   </tr>   <tr>      <td>国家</td>      <td><div id="userAgentCountry"></div></td>   </tr>   <tr>      <td>省份</td>      <td><div id="userAgentRegion"></div></td>   </tr>   <tr>      <td>城市</td>      <td><div id="userAgentCity"></div></td>   </tr>   <tr>      <td>运营商</td>      <td><div id="userAgentIsp"></div></td>   </tr>   <tr>      <td td="" colspan="2"><b>设备信息</b></td>   </tr>   <tr>    <td>操作系统</td>      <td><div id="userAgentOS"></div></td>    </tr>    <tr>      <td>浏览器</td>      <td><div id="userAgentBrowser"></div></td>    </tr>   </tbody></table></div><p style="color: var(--xingzhi-gray);font-size: 14px; margin-top: 1rem;">此页面如果未能获取到信息并不代表无法读取上述信息，以实际情况为准。</p><script src="/js/privacy.js" data-pjax></script><h2 id="二、在评论时如何收集和使用你的个人信息"><a href="#二、在评论时如何收集和使用你的个人信息" class="headerlink" title="二、在评论时如何收集和使用你的个人信息"></a>二、在评论时如何收集和使用你的个人信息</h2><p class='p logo'>评论使用的是无登陆系统的匿名评论系统，你可以自愿填写真实的、或者虚假的信息作为你评论的展示信息。<strong>鼓励你使用不易被人恶意识别的昵称进行评论</strong>，但是建议你填写<strong>真实的邮箱</strong>以便收到回复（邮箱信息不会被公开）。</p><p class='p logo'>在你评论时，会额外收集你的个人信息。</p><h3 id="在评论时，本站内置的第三方服务会通过以下或更多途径，来获取你的相关信息："><a href="#在评论时，本站内置的第三方服务会通过以下或更多途径，来获取你的相关信息：" class="headerlink" title="在评论时，本站内置的第三方服务会通过以下或更多途径，来获取你的相关信息："></a>在评论时，本站内置的第三方服务会通过以下或更多途径，来获取你的相关信息：</h3><ul><li><strong>cravatar</strong> 会收集你的访问信息、评论填写的个人信息用于展示头像</li></ul><h3 id="在访问时，本人仅会处于以下目的，收集并使用以下信息："><a href="#在访问时，本人仅会处于以下目的，收集并使用以下信息：" class="headerlink" title="在访问时，本人仅会处于以下目的，收集并使用以下信息："></a>在访问时，本人仅会处于以下目的，收集并使用以下信息：</h3><ul><li>评论时会记录你的 QQ 账号（如果在邮箱位置填写 QQ 邮箱或 QQ 号），方便获取你的 QQ 头像。如果使用 QQ 邮箱但不想展示 QQ 头像，可以填写不含 QQ 号的 QQ 邮箱。（主动，存储）</li><li>评论时会记录你的邮箱，当我回复后会通过邮件通知你（主动，存储，不会公开邮箱）</li><li>评论时会记录你的网址，用于点击头像时快速进入你的网站（主动，存储）</li><li>评论时会记录你的 IP 地址，作为反垃圾的用户判别依据（被动，存储，不会公开 IP，会公开 IP 所在城市）</li><li>评论会记录你的浏览器代理，用作展示系统版本、浏览器版本方便展示你使用的设备，快速定位问题（被动，存储）</li></ul><h2 id="三、如何使用-Cookies-和本地-LocalStorage-存储"><a href="#三、如何使用-Cookies-和本地-LocalStorage-存储" class="headerlink" title="三、如何使用-Cookies-和本地-LocalStorage-存储"></a>三、如何使用-Cookies-和本地-LocalStorage-存储</h2><p class='p logo'>本站为实现无账号评论、深色模式切换，不蒜子的uv统计等功能，会在你的浏览器中进行本地存储，你可以随时清除浏览器中保存的所有 Cookies 以及 LocalStorage，不影响你的正常使用。</p><p class='p logo'>本博客中的以下业务会在你的计算机上主动存储数据：</p><p class='p logo'><strong>内置服务</strong></p><ul><li>评论系统</li><li>即刻短文</li><li>中控台</li><li>无障碍服务</li></ul><p class='p logo'><strong>第三方服务</strong></p><ul><li>51la 统计</li></ul><p class='p logo'>关于如何使用你的Cookies，请访问<a href=/cookies/ data-pjax-state>Cookies政策</a>。</p><!-- <p class='p logo'>关于如何<a href=/cookies/ data-pjax-state>在 浏览器 中清除、启用和管理 Cookie</a></p> --><h2 id="四、如何共享、转让你的个人信息"><a href="#四、如何共享、转让你的个人信息" class="headerlink" title="四、如何共享、转让你的个人信息"></a>四、如何共享、转让你的个人信息</h2><p class='p logo'>本人不会与任何公司、组织和个人共享你的隐私信息</p><p class='p logo'>本人不会将你的个人信息转让给任何公司、组织和个人</p><p class='p logo'>第三方服务的共享、转让情况详见对应服务的隐私协议</p><h2 id="五、附属协议"><a href="#五、附属协议" class="headerlink" title="五、附属协议"></a>五、附属协议</h2><p class='p logo'>当监测到存在恶意访问、恶意请求、恶意攻击、恶意评论的行为时，为了防止增大受害范围，可能会临时将你的ip地址及访问信息短期内添加到黑名单，短期内禁止访问。</p><p class='p logo'>此黑名单可能被公开，并共享给其他站点（主体并非本人）使用，包括但不限于：IP地址、设备信息、地理位置。</p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>标签</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>在线工具</title>
      <link href="/tools/index.html"/>
      <url>/tools/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>website</title>
      <link href="/website/index.html"/>
      <url>/website/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/tags/image.css"/>
      <url>/css/tags/image.css</url>
      
        <content type="html"><![CDATA[#article-container a.fancybox {  border-bottom: 0;  padding: 0;  margin: auto;  display: contents;  width: fit-content;  -webkit-user-select: none;}#article-container a {  text-decoration: none;  border-bottom: 2px solid var(--heo-lighttext);  color: var(--heo-fontcolor);  font-weight: 700;  padding: 0 4px;  border-radius: 4px 4px 0 0;}#article-container a.fancybox img {  cursor: zoom-in;}#article-container img {  border-radius: 12px;  margin-bottom: 0.5rem;  object-fit: cover;}.layout#content-inner p img {  margin: auto;}#article-container img {  display: block;  margin: 0 auto 0.8rem;  max-width: 90%;  max-height: 450px;}.img-alt {  font-size: 12px;  margin: 0;  margin-top: 8px;  color: var(--heo-secondtext);}.is-center {  text-align: center;  display: flex;  flex-wrap: wrap;  justify-content: center;  flex-direction: row;  align-items: center;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/tags/link.css"/>
      <url>/css/tags/link.css</url>
      
        <content type="html"><![CDATA[#article-container p {  font-size: 1.2rem;  line-height: 1.7;  font-weight: 400;}#article-container .tag-Link {  background: var(--xingzhi-secondbg);  border-radius: 8px !important;  display: flex;  border: var(--style-border);  flex-direction: column;  padding: 0.3rem 1rem 0.6rem;  border-width: 1px !important;  margin-top: 1rem;}#article-container .tag-Link:hover {  border: var(--style-border-hover);}#article-container .tag-Link .tag-link-tips {  border-bottom: var(--style-border-always);  padding-bottom: 4px;  font-size: 0.8rem;  color: var(--xingzhi-gray);  font-weight: 400;  pointer-events: none;}#article-container .tag-Link:hover .tag-link-tips {  color: var(--xingzhi-white);  opacity: 0.6;}#article-container .tag-Link .tag-link-bottom {  display: flex;  margin-top: 0.5rem;  align-items: center;  justify-content: space-around;  pointer-events: none;}#article-container .tag-Link .tag-link-bottom .tag-link-left {  width: 60px;  min-width: 60px;  height: 60px;  background-size: cover !important;  border-radius: 8px;  background: var(--xingzhi-card-bg);  pointer-events: none;  display: flex;}#article-container .tag-Link .tag-link-bottom .tag-link-left i {  padding: 0;  margin: auto;  font-size: 24px;  color: var(--xingzhi-fontcolor);}#article-container .tag-Link .tag-link-bottom .tag-link-right {  margin-left: 1rem;  pointer-events: none;}#article-container .tag-Link .tag-link-bottom .tag-link-right .tag-link-title {  font-size: 16px;  line-height: 1.2;  pointer-events: none;  word-break: break-all;  text-overflow: ellipsis;  display: -webkit-box;  -webkit-box-orient: vertical;  -webkit-line-clamp: 2;  overflow: hidden;}#article-container  .tag-Link  .tag-link-bottom  .tag-link-right  .tag-link-sitename {  font-size: 0.8rem;  color: var(--xingzhi-gray);  font-weight: 400;  margin-top: 8px;  pointer-events: none;  line-height: 1;  overflow: hidden;  text-overflow: ellipsis;  white-space: nowrap;}#article-container  .tag-Link:hover  .tag-link-bottom  .tag-link-right  .tag-link-sitename {  color: var(--xingzhi-white);  opacity: 0.6;}#article-container .tag-Link .tag-link-bottom i {  margin-left: auto;  padding-left: 0.5rem;  pointer-events: none;}#article-container a:hover {  text-decoration: none;  background: var(--xingzhi-main);  border: none;  color: var(--xingzhi-white);  border-radius: 4px;}]]></content>
      
    </entry>
    
    
  
</search>
